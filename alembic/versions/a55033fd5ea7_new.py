"""New

Revision ID: a55033fd5ea7
Revises: 
Create Date: 2025-06-06 23:56:01.043331

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a55033fd5ea7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accessory_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('base_item_code', sa.Integer(), nullable=False),
    sa.Column('suffix_code', sa.Integer(), nullable=False),
    sa.Column('accessory_name', sa.TEXT(), nullable=False),
    sa.Column('rarity', sa.Integer(), nullable=False),
    sa.Column('color', sa.TEXT(), nullable=False),
    sa.Column('durability', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('is_fragile', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('strength_percentage', sa.Double(precision=53), server_default=sa.text('0'), nullable=False),
    sa.Column('energy_pool_bonus', sa.Integer(), nullable=True),
    sa.Column('regen_energy_rate', sa.Double(precision=53), nullable=True),
    sa.Column('magic_defense_bonus', sa.Integer(), nullable=True),
    sa.Column('absorption_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('reflect_damage', sa.Double(precision=53), nullable=True),
    sa.Column('damage_boost', sa.Double(precision=53), nullable=True),
    sa.Column('excluded_bonus_type', sa.TEXT(), nullable=True),
    sa.Column('effect_description', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='accessory_templates_pkey')
    )
    op.create_table('account_info',
    sa.Column('account_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('avatar', sa.TEXT(), nullable=True),
    sa.Column('locale', sa.String(length=10), nullable=True),
    sa.Column('region', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('twofa_enabled', sa.Boolean(), nullable=False),
    sa.Column('linked_platforms', sa.JSON(), nullable=False),
    sa.Column('auth_token', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('account_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('active_quests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), server_default=sa.text("'active'::character varying"), nullable=False),
    sa.Column('current_step', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('quest_key', sa.String(length=100), nullable=True),
    sa.Column('flags_status', sa.JSON(), nullable=True),
    sa.Column('completion_time', sa.DateTime(), nullable=True),
    sa.Column('failure_reason', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name='active_quests_pkey')
    )
    op.create_table('armor_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('base_item_code', sa.Integer(), nullable=False),
    sa.Column('suffix_code', sa.Integer(), nullable=False),
    sa.Column('armor_name', sa.TEXT(), nullable=False),
    sa.Column('rarity', sa.Integer(), nullable=False),
    sa.Column('color', sa.TEXT(), nullable=False),
    sa.Column('physical_defense', sa.Integer(), nullable=False),
    sa.Column('durability', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Integer(), nullable=False),
    sa.Column('is_fragile', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('strength_percentage', sa.Double(precision=53), server_default=sa.text('0'), nullable=False),
    sa.Column('magical_defense', sa.Integer(), nullable=True),
    sa.Column('energy_regeneration_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('anti_crit', sa.Double(precision=53), nullable=True),
    sa.Column('dodge_chance', sa.Double(precision=53), nullable=True),
    sa.Column('hp_percent', sa.Double(precision=53), nullable=True),
    sa.Column('armor_boost', sa.Integer(), nullable=True),
    sa.Column('armor_percent_boost', sa.Double(precision=53), nullable=True),
    sa.Column('counter_attack', sa.Double(precision=53), nullable=True),
    sa.Column('anti_dodge', sa.Double(precision=53), nullable=True),
    sa.Column('effect_description', sa.TEXT(), nullable=True),
    sa.Column('allowed_for_class', sa.TEXT(), nullable=True),
    sa.Column('visual_asset', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name='armor_templates_pkey')
    )
    op.create_table('background_stories',
    sa.Column('story_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('short_description', sa.TEXT(), nullable=True),
    sa.Column('stat_modifiers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('skill_affinities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('initial_inventory_items', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('starting_location_tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('lore_fragments', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('potential_factions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('rarity_weight', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('story_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('bloodlines',
    sa.Column('bloodline_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('inherent_bonuses', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('rarity_weight', sa.Integer(), nullable=False),
    sa.Column('story_fragments', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('bloodline_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('character_exploration_chances',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('combat_chance', sa.Double(precision=53), nullable=False),
    sa.Column('magic_chance', sa.Double(precision=53), nullable=False),
    sa.Column('gathering_chance', sa.Double(precision=53), nullable=False),
    sa.Column('last_updated', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('character_id', name='character_exploration_chances_pkey')
    )
    op.create_table('character_starter_inventories',
    sa.Column('inventory_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('items', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('inventory_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('creature_types',
    sa.Column('creature_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('subcategory', sa.String(length=100), nullable=True),
    sa.Column('visual_tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('rarity_weight', sa.Integer(), nullable=True),
    sa.Column('is_playable', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('creature_type_id')
    )
    op.create_table('discord_bindings',
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('world_id', sa.Uuid(), nullable=False),
    sa.Column('access_key', sa.String(), nullable=False),
    sa.Column('permissions', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('category_id', sa.String(), nullable=True),
    sa.Column('channel_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('guild_id', 'access_key', name='discord_bindings_pkey')
    )
    op.create_table('discord_quest_descriptions',
    sa.Column('description_key', sa.String(length=100), nullable=False),
    sa.Column('text_', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('description_key'),
    sa.UniqueConstraint('description_key')
    )
    op.create_table('entity_state_map',
    sa.Column('entity_access_key', sa.String(), nullable=False),
    sa.Column('access_code', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('entity_access_key', 'access_code', name='entity_state_map_pkey')
    )
    op.create_table('equipped_items',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('durability', sa.Integer(), server_default=sa.text('100'), nullable=False),
    sa.Column('slot', sa.String(length=50), nullable=True),
    sa.Column('enchantment_effect', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('character_id', name='equipped_items_pkey')
    )
    op.create_table('finish_handlers',
    sa.Column('batch_id', sa.String(length=255), nullable=False),
    sa.Column('task_type', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('completed_tasks', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('failed_tasks', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed_by_coordinator', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('batch_id', name='finish_handlers_pkey')
    )
    op.create_index('idx_processed_coordinator', 'finish_handlers', ['processed_by_coordinator'], unique=False)
    op.create_index('idx_status', 'finish_handlers', ['status'], unique=False)
    op.create_index('idx_task_type', 'finish_handlers', ['task_type'], unique=False)
    op.create_index('idx_timestamp', 'finish_handlers', ['timestamp'], unique=False)
    op.create_table('flag_templates',
    sa.Column('flag_key', sa.String(length=50), nullable=False),
    sa.Column('flag_category', sa.String(length=50), nullable=False),
    sa.Column('flag_description', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('flag_key', name='flag_templates_pkey')
    )
    op.create_table('inventory',
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('acquired_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('inventory_id', name='inventory_pkey')
    )
    op.create_table('item_base',
    sa.Column('base_item_code', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('item_name', sa.TEXT(), nullable=False),
    sa.Column('category', sa.TEXT(), nullable=False),
    sa.Column('equip_slot', sa.TEXT(), nullable=False),
    sa.Column('base_durability', sa.Integer(), nullable=False),
    sa.Column('base_weight', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('base_item_code', name='item_base_pkey')
    )
    op.create_table('materials',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('material_name', sa.TEXT(), nullable=True),
    sa.Column('prefix', sa.TEXT(), nullable=True),
    sa.Column('color', sa.TEXT(), nullable=True),
    sa.Column('is_fragile', sa.Boolean(), nullable=True),
    sa.Column('strength_percentage', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='materials_pkey')
    )
    op.create_table('modifiers_library',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('access_modifier', sa.Integer(), nullable=False),
    sa.Column('modifier_name', sa.TEXT(), nullable=False),
    sa.Column('effect_description', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='modifiers_library_pkey')
    )
    op.create_table('personalities',
    sa.Column('personality_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('personality_group', sa.String(length=50), nullable=True),
    sa.Column('behavior_tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('dialogue_modifiers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('combat_ai_directives', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('quest_interaction_preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('trait_associations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('applicable_game_roles', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('rarity_weight', sa.Integer(), nullable=False),
    sa.Column('ai_priority_level', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('personality_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('player_magic_attack',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('elemental_power_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('fire_power_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('water_power_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('air_power_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('earth_power_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('light_power_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('dark_power_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('gray_magic_power_bonus', sa.Double(precision=53), nullable=True),
    sa.PrimaryKeyConstraint('character_id', name='player_magic_attack_pkey')
    )
    op.create_table('player_magic_defense',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('fire_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('water_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('air_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('earth_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('light_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('dark_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('gray_magic_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('magic_resistance_percent', sa.Double(precision=53), nullable=True),
    sa.PrimaryKeyConstraint('character_id', name='player_magic_defense_pkey')
    )
    op.create_table('player_physical_attack',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('piercing_damage_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('slashing_damage_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('blunt_damage_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('cutting_damage_bonus', sa.Double(precision=53), nullable=True),
    sa.PrimaryKeyConstraint('character_id', name='player_physical_attack_pkey')
    )
    op.create_table('player_physical_defense',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('piercing_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('slashing_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('blunt_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('cutting_resistance', sa.Double(precision=53), nullable=True),
    sa.Column('physical_resistance_percent', sa.Double(precision=53), nullable=True),
    sa.PrimaryKeyConstraint('character_id', name='player_physical_defense_pkey')
    )
    op.create_table('quest_conditions',
    sa.Column('condition_id', sa.Integer(), nullable=False),
    sa.Column('condition_key', sa.String(length=100), nullable=False),
    sa.Column('condition_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('condition_id', name='quest_conditions_pkey')
    )
    op.create_table('quest_flags',
    sa.Column('flag_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('flag_key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.TEXT(), nullable=False),
    sa.Column('quest_key', sa.Integer(), nullable=True),
    sa.Column('step_key', sa.String(length=100), nullable=True),
    sa.Column('flag_key_template', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('flag_id', name='quest_flags_pkey')
    )
    op.create_table('quest_requirements',
    sa.Column('requirement_id', sa.Integer(), nullable=False),
    sa.Column('requirement_key', sa.String(length=100), nullable=False),
    sa.Column('requirement_name', sa.String(length=255), nullable=False),
    sa.Column('requirement_value', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('requirement_id', name='quest_requirements_pkey')
    )
    op.create_table('quest_rewards',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reward_key', sa.String(length=100), nullable=False),
    sa.Column('reward_name', sa.TEXT(), nullable=False),
    sa.Column('reward_value', sa.Integer(), nullable=False),
    sa.Column('reward_type', sa.TEXT(), nullable=False),
    sa.Column('reward_description', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='quest_rewards_pkey')
    )
    op.create_table('quest_steps',
    sa.Column('step_key', sa.String(length=100), nullable=False),
    sa.Column('quest_key', sa.Integer(), nullable=False),
    sa.Column('step_order', sa.Integer(), nullable=False),
    sa.Column('description_key', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('visibility_condition', sa.String(length=255), nullable=True),
    sa.Column('reward_key', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('step_key')
    )
    op.create_table('quest_templates_master',
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('template_key', sa.String(length=100), nullable=False),
    sa.Column('type_key', sa.String(length=100), nullable=True),
    sa.Column('condition_key', sa.String(length=100), nullable=True),
    sa.Column('requirement_key', sa.String(length=100), nullable=True),
    sa.Column('reward_key', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('template_id', name='quest_templates_master_pkey')
    )
    op.create_table('quest_types',
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('type_key', sa.String(length=100), nullable=False),
    sa.Column('type_name', sa.String(length=255), nullable=False),
    sa.Column('difficulty_level', sa.String(length=50), server_default=sa.text("'medium'::character varying"), nullable=False),
    sa.PrimaryKeyConstraint('type_id', name='quest_types_pkey')
    )
    op.create_table('quests',
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('quest_key', sa.Integer(), nullable=False),
    sa.Column('quest_name', sa.String(length=255), nullable=False),
    sa.Column('description_key', sa.String(length=100), nullable=False),
    sa.Column('reward_key', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), server_default=sa.text("'inactive'::character varying"), nullable=False),
    sa.Column('progress_flag', sa.String(length=255), server_default=sa.text('NULL::character varying'), nullable=True),
    sa.PrimaryKeyConstraint('quest_id', name='quests_pkey')
    )
    op.create_table('races',
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('race_name', sa.String(length=100), server_default=sa.text("''::character varying"), nullable=False),
    sa.Column('founder_id', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('race_id', name='races_pkey')
    )
    op.create_table('regions',
    sa.Column('access_key', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('world_id', sa.UUID(), nullable=False),
    sa.Column('region_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('access_key')
    )
    op.create_table('reputation',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('reputation_value', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('reputation_status', sa.String(length=50), server_default=sa.text("'neutral'::character varying"), nullable=False),
    sa.Column('faction_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('character_id', name='reputation_pkey')
    )
    op.create_table('skill_exclusions',
    sa.Column('exclusion_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('exclusion_type', sa.String(length=50), nullable=False),
    sa.Column('excluded_skills', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('exclusion_effect', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('exclusion_id'),
    sa.UniqueConstraint('group_name'),
    sa.UniqueConstraint('group_name', name='uq_skill_exclusions_group_name')
    )
    op.create_table('skills',
    sa.Column('skill_key', sa.String(length=50), nullable=False),
    sa.Column('skill_id', sa.Integer(), autoincrement=True, nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('stat_influence', sa.JSON(), nullable=False),
    sa.Column('is_magic', sa.Boolean(), nullable=False),
    sa.Column('rarity_weight', sa.Integer(), nullable=False),
    sa.Column('category_tag', sa.String(length=50), nullable=False),
    sa.Column('role_preference_tag', sa.String(length=100), nullable=True),
    sa.Column('limit_group_tag', sa.String(length=100), nullable=True),
    sa.Column('max_level', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('skill_key'),
    sa.UniqueConstraint('skill_id'),
    sa.UniqueConstraint('skill_key')
    )
    op.create_table('special_stat_effects',
    sa.Column('effect_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('stat_key', sa.String(length=50), nullable=False),
    sa.Column('affected_property', sa.String(length=100), nullable=False),
    sa.Column('effect_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('calculation_order', sa.Integer(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('effect_id'),
    sa.UniqueConstraint('stat_key', 'affected_property', 'effect_type', name='uq_stat_property_effect_type')
    )
    op.create_table('state_entities',
    sa.Column('access_code', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code_name', sa.TEXT(), nullable=False),
    sa.Column('ui_type', sa.TEXT(), nullable=False),
    sa.Column('description', sa.TEXT(), server_default=sa.text("''::text"), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.PrimaryKeyConstraint('access_code', name='state_entities_pkey')
    )
    op.create_table('suffixes',
    sa.Column('suffix_code', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('fragment', sa.TEXT(), nullable=False),
    sa.Column('is_for_weapon', sa.Boolean(), nullable=False),
    sa.Column('is_for_armor', sa.Boolean(), nullable=False),
    sa.Column('is_for_accessory', sa.Boolean(), nullable=False),
    sa.Column('mod1_code', sa.Integer(), nullable=True),
    sa.Column('mod1_value', sa.Numeric(), nullable=True),
    sa.Column('mod2_code', sa.Integer(), nullable=True),
    sa.Column('mod2_value', sa.Numeric(), nullable=True),
    sa.Column('mod3_code', sa.Integer(), nullable=True),
    sa.Column('mod3_value', sa.Numeric(), nullable=True),
    sa.Column('mod4_code', sa.Integer(), nullable=True),
    sa.Column('mod4_value', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('suffix_code', name='suffixes_pkey')
    )
    op.create_table('template_modifier_defaults',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('base_item_code', sa.Integer(), nullable=False),
    sa.Column('access_modifier', sa.Integer(), nullable=False),
    sa.Column('default_value', sa.Numeric(), nullable=False),
    sa.PrimaryKeyConstraint('id', name='template_modifier_defaults_pkey')
    )
    op.create_table('weapon_templates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('base_item_code', sa.Integer(), nullable=False),
    sa.Column('suffix_code', sa.Integer(), nullable=False),
    sa.Column('weapon_name', sa.TEXT(), nullable=False),
    sa.Column('rarity', sa.Integer(), nullable=False),
    sa.Column('color', sa.TEXT(), nullable=False),
    sa.Column('is_fragile', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('strength_percentage', sa.Double(precision=53), server_default=sa.text('0'), nullable=False),
    sa.Column('p_atk', sa.Integer(), nullable=True),
    sa.Column('m_atk', sa.Integer(), nullable=True),
    sa.Column('crit_chance', sa.Double(precision=53), nullable=True),
    sa.Column('crit_damage_bonus', sa.Double(precision=53), nullable=True),
    sa.Column('armor_penetration', sa.Double(precision=53), nullable=True),
    sa.Column('durability', sa.Integer(), nullable=True),
    sa.Column('accuracy', sa.Double(precision=53), nullable=True),
    sa.Column('hp_steal_percent', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('effect_description', sa.TEXT(), nullable=True),
    sa.Column('allowed_for_class', sa.TEXT(), nullable=True),
    sa.Column('visual_asset', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='weapon_templates_pkey')
    )
    op.create_table('worlds',
    sa.Column('world_id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('world_name', sa.String(), nullable=False),
    sa.Column('is_static', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('world_id', name='worlds_pkey')
    )
    op.create_table('xp_tick_data',
    sa.Column('tick_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('xp_generated', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('tick_id', name='xp_tick_data_pkey')
    )
    op.create_table('abilities',
    sa.Column('ability_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ability_key', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('ability_type', sa.String(length=50), nullable=False),
    sa.Column('required_skill_key', sa.String(length=50), nullable=True),
    sa.Column('required_skill_level', sa.Integer(), nullable=False),
    sa.Column('required_stats', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('required_items', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('cost_type', sa.String(length=50), nullable=True),
    sa.Column('cost_amount', sa.Integer(), nullable=False),
    sa.Column('cooldown_seconds', sa.Integer(), nullable=False),
    sa.Column('cast_time_ms', sa.Integer(), nullable=False),
    sa.Column('effect_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('animation_key', sa.String(length=100), nullable=True),
    sa.Column('sfx_key', sa.String(length=100), nullable=True),
    sa.Column('vfx_key', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['required_skill_key'], ['skills.skill_key'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('ability_id'),
    sa.UniqueConstraint('ability_key')
    )
    op.create_table('character_inventory_rules',
    sa.Column('rule_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('quality_level', sa.String(length=100), nullable=False),
    sa.Column('role_name', sa.String(length=100), nullable=True),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_id'], ['character_starter_inventories.inventory_id'], ),
    sa.PrimaryKeyConstraint('rule_id')
    )
    op.create_table('character_pool',
    sa.Column('character_pool_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('creature_type_id', sa.Integer(), nullable=False),
    sa.Column('bloodline_id', sa.Integer(), nullable=True),
    sa.Column('personality_id', sa.Integer(), nullable=True),
    sa.Column('background_story_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('surname', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=False),
    sa.Column('base_stats', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('visual_appearance_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('initial_skill_levels', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('initial_inventory', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=50), server_default=sa.text("'available'"), nullable=False),
    sa.Column('is_unique', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('rarity_score', sa.Integer(), server_default=sa.text('100'), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('death_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['background_story_id'], ['background_stories.story_id'], name='fk_cp_background_story', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['bloodline_id'], ['bloodlines.bloodline_id'], name='fk_cp_bloodline', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['creature_type_id'], ['creature_types.creature_type_id'], name='fk_cp_creature_type', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['personality_id'], ['personalities.personality_id'], name='fk_cp_personality', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('character_pool_id', name='character_pool_pkey')
    )
    op.create_index('idx_character_pool_creature_type', 'character_pool', ['creature_type_id'], unique=False)
    op.create_index('idx_character_pool_rarity_score', 'character_pool', ['rarity_score'], unique=False)
    op.create_index('idx_character_pool_status', 'character_pool', ['status'], unique=False)
    op.create_table('characters',
    sa.Column('character_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('surname', sa.String(length=100), nullable=True),
    sa.Column('bloodline_id', sa.Integer(), nullable=True),
    sa.Column('creature_type_id', sa.Integer(), nullable=False),
    sa.Column('personality_id', sa.Integer(), nullable=True),
    sa.Column('background_story_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account_info.account_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['background_story_id'], ['background_stories.story_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['bloodline_id'], ['bloodlines.bloodline_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['creature_type_id'], ['creature_types.creature_type_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['personality_id'], ['personalities.personality_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('character_id')
    )
    op.create_table('creature_type_initial_skills',
    sa.Column('creature_type_id', sa.Integer(), nullable=False),
    sa.Column('skill_key', sa.String(length=50), nullable=False),
    sa.Column('initial_level', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['creature_type_id'], ['creature_types.creature_type_id'], ),
    sa.ForeignKeyConstraint(['skill_key'], ['skills.skill_key'], ),
    sa.PrimaryKeyConstraint('creature_type_id', 'skill_key')
    )
    op.create_table('state_entities_discord',
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('world_id', sa.UUID(), nullable=False),
    sa.Column('access_code', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.TEXT(), nullable=False),
    sa.Column('role_id', sa.BigInteger(), nullable=False),
    sa.Column('permissions', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['access_code'], ['state_entities.access_code'], name='fk_state_entities_discord_access_code', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('guild_id', 'world_id', 'access_code', name='state_entities_discord_pkey')
    )
    op.create_table('subregions',
    sa.Column('subregion_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('access_key', sa.String(length=255), nullable=False),
    sa.Column('access_code', sa.String(length=255), nullable=False),
    sa.Column('parent_access_key', sa.String(length=255), nullable=True),
    sa.Column('subregion_name', sa.String(length=255), nullable=False),
    sa.Column('is_peaceful', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('visibility', sa.String(length=50), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['parent_access_key'], ['regions.access_key'], name='fk_subregions_parent_region_access_key', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('access_key', name='subregions_pkey')
    )
    op.create_table('auto_sessions',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('active_category', sa.TEXT(), nullable=False),
    sa.Column('next_tick_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_tick_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.character_id'], name='fk_character', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('character_id', name='auto_sessions_pkey')
    )
    op.create_index('idx_auto_sessions_next_tick_at', 'auto_sessions', ['next_tick_at'], unique=False)
    op.create_table('character_skills',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('skill_key', sa.String(length=50), nullable=False),
    sa.Column('level', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('xp', sa.BigInteger(), server_default=sa.text('0'), nullable=False),
    sa.Column('progress_state', sa.String(length=10), server_default=sa.text("'PLUS'::character varying"), nullable=False),
    sa.CheckConstraint("progress_state::text = ANY (ARRAY['PLUS'::character varying, 'PAUSE'::character varying, 'MINUS'::character varying]::text[])", name='character_skills_progress_state_check'),
    sa.ForeignKeyConstraint(['character_id'], ['characters.character_id'], name='fk_character', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_key'], ['skills.skill_key'], ),
    sa.ForeignKeyConstraint(['skill_key'], ['skills.skill_key'], name='fk_skill', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('character_id', 'skill_key', name='character_skills_pkey')
    )
    op.create_table('character_status',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('current_health', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('max_health', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('current_energy', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('crit_chance', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('crit_damage_bonus', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('anti_crit_chance', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('anti_crit_damage', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('dodge_chance', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('anti_dodge_chance', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('counter_attack_chance', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('parry_chance', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('block_chance', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('armor_penetration', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('physical_attack', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('magical_attack', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('magic_resistance', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('physical_resistance', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('mana_cost_reduction', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('regen_health_rate', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('energy_regeneration_bonus', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('energy_pool_bonus', sa.Integer(), server_default=sa.text('0'), nullable=True),
    sa.Column('absorption_bonus', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('shield_value', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.Column('shield_regeneration', sa.Double(precision=53), server_default=sa.text('0'), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.character_id'], name='fk_character', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('character_id', name='character_status_pkey')
    )
    op.create_table('characters_special',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('strength', sa.Integer(), nullable=True),
    sa.Column('perception', sa.Integer(), nullable=True),
    sa.Column('endurance', sa.Integer(), nullable=True),
    sa.Column('agility', sa.Integer(), nullable=True),
    sa.Column('intelligence', sa.Integer(), nullable=True),
    sa.Column('charisma', sa.Integer(), nullable=True),
    sa.Column('luck', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.character_id'], name='fk_character', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('character_id', name='characters_special_pkey')
    )
    op.create_table('tick_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('event_time', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.character_id'], name='fk_tick_events_character', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tick_events_pkey')
    )
    op.create_index('idx_tick_events_character', 'tick_events', ['character_id'], unique=False)
    op.create_index('idx_tick_events_time', 'tick_events', ['event_time'], unique=False)
    op.create_table('tick_summary',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('hour_block', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tick_count', sa.Integer(), nullable=False),
    sa.Column('mode', sa.TEXT(), nullable=False),
    sa.Column('summary_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.character_id'], name='fk_tick_summary_character', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tick_summary_pkey')
    )
    op.create_index('idx_tick_summary_character_time', 'tick_summary', ['character_id', 'hour_block'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_tick_summary_character_time', table_name='tick_summary')
    op.drop_table('tick_summary')
    op.drop_index('idx_tick_events_time', table_name='tick_events')
    op.drop_index('idx_tick_events_character', table_name='tick_events')
    op.drop_table('tick_events')
    op.drop_table('characters_special')
    op.drop_table('character_status')
    op.drop_table('character_skills')
    op.drop_index('idx_auto_sessions_next_tick_at', table_name='auto_sessions')
    op.drop_table('auto_sessions')
    op.drop_table('subregions')
    op.drop_table('state_entities_discord')
    op.drop_table('creature_type_initial_skills')
    op.drop_table('characters')
    op.drop_index('idx_character_pool_status', table_name='character_pool')
    op.drop_index('idx_character_pool_rarity_score', table_name='character_pool')
    op.drop_index('idx_character_pool_creature_type', table_name='character_pool')
    op.drop_table('character_pool')
    op.drop_table('character_inventory_rules')
    op.drop_table('abilities')
    op.drop_table('xp_tick_data')
    op.drop_table('worlds')
    op.drop_table('weapon_templates')
    op.drop_table('template_modifier_defaults')
    op.drop_table('suffixes')
    op.drop_table('state_entities')
    op.drop_table('special_stat_effects')
    op.drop_table('skills')
    op.drop_table('skill_exclusions')
    op.drop_table('reputation')
    op.drop_table('regions')
    op.drop_table('races')
    op.drop_table('quests')
    op.drop_table('quest_types')
    op.drop_table('quest_templates_master')
    op.drop_table('quest_steps')
    op.drop_table('quest_rewards')
    op.drop_table('quest_requirements')
    op.drop_table('quest_flags')
    op.drop_table('quest_conditions')
    op.drop_table('player_physical_defense')
    op.drop_table('player_physical_attack')
    op.drop_table('player_magic_defense')
    op.drop_table('player_magic_attack')
    op.drop_table('personalities')
    op.drop_table('modifiers_library')
    op.drop_table('materials')
    op.drop_table('item_base')
    op.drop_table('inventory')
    op.drop_table('flag_templates')
    op.drop_index('idx_timestamp', table_name='finish_handlers')
    op.drop_index('idx_task_type', table_name='finish_handlers')
    op.drop_index('idx_status', table_name='finish_handlers')
    op.drop_index('idx_processed_coordinator', table_name='finish_handlers')
    op.drop_table('finish_handlers')
    op.drop_table('equipped_items')
    op.drop_table('entity_state_map')
    op.drop_table('discord_quest_descriptions')
    op.drop_table('discord_bindings')
    op.drop_table('creature_types')
    op.drop_table('character_starter_inventories')
    op.drop_table('character_exploration_chances')
    op.drop_table('bloodlines')
    op.drop_table('background_stories')
    op.drop_table('armor_templates')
    op.drop_table('active_quests')
    op.drop_table('account_info')
    op.drop_table('accessory_templates')
    # ### end Alembic commands ###
