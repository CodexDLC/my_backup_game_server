networks:
  backend_network: {}  # ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ


services:

  redis:
      container_name: redis_service
      image: redis
      ports:
        - "6379:6379"
      restart: always
      networks:
        - backend_network
      env_file: .env  # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª —Å –ø–∞—Ä–æ–ª–µ–º
      volumes:
        - C:/install/Stream/server/new_order_rpg/redis.conf:/usr/local/etc/redis/redis.conf  # üìå –ü–µ—Ä–µ–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥
      command: redis-server /usr/local/etc/redis/redis.conf --requirepass "${REDIS_PASSWORD}"
      healthcheck:
        test: ["CMD", "redis-cli", "-a", "$${REDIS_PASSWORD}", "ping"]
        interval: 5s
        timeout: 3s
        retries: 3


  rest_api:
    container_name: rest_api_service
    env_file: .env 
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    restart: always
    networks:
      - backend_network
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CONTAINER_ID=rest_api_service
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./logs/game_server:/app/logs/game_server_service
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    command: uvicorn game_server.api.main:app --host 0.0.0.0 --port 8000

  tick_coordinator:
    container_name: tick_coordinator_service
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m game_server.Logic.InfrastructureLogic.tick_infra.tick_coordinator
    restart: always
    networks:
      - backend_network
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CONTAINER_ID=tick_coordinator_service
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./logs/game_server:/app/logs/tick_coordinator_service

  prometheus:
    container_name: prometheus_monitoring
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    restart: always
    networks:
      - backend_network
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - CONTAINER_ID=prometheus_monitoring
