# game_server/core/service_builders.py

from typing import Dict, Any
from game_server.config.logging.logging_setup import app_logger as logger

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–µ—Ç—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≥–æ—Ç–æ–≤—ã–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º
from .dependency_aggregator import get_global_dependencies

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫—É—é –ª–æ–≥–∏–∫—É, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å
from game_server.Logic.ApplicationLogic.auth_service.AccountCreation.account_creation_logic import AccountCreator
from game_server.Logic.ApplicationLogic.auth_service.ShardManagement.shard_management_logic import ShardOrchestrator
from game_server.Logic.CoreServices.core_services_initializer import initialize_core_services, get_identifiers_service_instance

# === –°–ë–û–†–©–ò–ö –î–õ–Ø AUTH SERVICE ===

async def build_auth_service_dependencies() -> Dict[str, Any]:
    """
    –°–æ–±–∏—Ä–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –¥–ª—è AuthService.
    """
    logger.info("--- üõ†Ô∏è –°–±–æ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è AuthService ---")
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º
    global_deps = get_global_dependencies()
    
    # 2. –°–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –¥–ª—è AuthService
    if not initialize_core_services(): # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ Core-—Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã
        raise RuntimeError("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Core-—Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è AuthService.")
    
    identifiers_service = get_identifiers_service_instance()
    
    account_creator = AccountCreator(
        repository_manager=global_deps["repository_manager"],
        identifiers_service=identifiers_service,
    )
    
    shard_orchestrator = ShardOrchestrator(dependencies={
        "repository_manager": global_deps["repository_manager"],
        "shard_count_manager": global_deps["shard_count_cache_manager"],
        "message_bus": global_deps["message_bus"],
        "logger": global_deps["logger"]
    })

    # 3. –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
    auth_deps = {
        # –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã –Ω–∞–ø—Ä—è–º—É—é
        "repository_manager": global_deps["repository_manager"],
        "message_bus": global_deps["message_bus"],
        "logger": global_deps["logger"],
        # <<< –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π session_manager
        "session_manager": global_deps["session_manager"],
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        "identifiers_service": identifiers_service,
        "account_creator": account_creator,
        "shard_manager": shard_orchestrator
    }
    logger.info("--- ‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è AuthService —Å–æ–±—Ä–∞–Ω—ã ---")
    return auth_deps


# === –°–ë–û–†–©–ò–ö –î–õ–Ø SYSTEM SERVICES ===

async def build_system_services_dependencies() -> Dict[str, Any]:
    """
    –°–æ–±–∏—Ä–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –¥–ª—è SystemServices.
    """
    logger.info("--- üõ†Ô∏è –°–±–æ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è SystemServices ---")
    global_deps = get_global_dependencies()
    
    # –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å, —Å—É–¥—è –ø–æ –∫–æ–¥—É, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏,
    # –Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö –¥–ª—è —Å–≤–æ–∏—Ö –Ω—É–∂–¥.
    system_deps = {
        "repository_manager": global_deps["repository_manager"],
        "guild_config_manager": global_deps["backend_guild_config_manager"], # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
        "message_bus": global_deps["message_bus"],
        "logger": global_deps["logger"],
    }
    logger.info("--- ‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è SystemServices —Å–æ–±—Ä–∞–Ω—ã ---")
    return system_deps


# === –°–ë–û–†–©–ò–ö –î–õ–Ø GAME WORLD ORCHESTRATOR ===

async def build_game_world_dependencies() -> Dict[str, Any]:
    """
    –°–æ–±–∏—Ä–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –¥–ª—è GameWorldOrchestrator.
    """
    logger.info("--- üõ†Ô∏è –°–±–æ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è GameWorldOrchestrator ---")
    global_deps = get_global_dependencies()

    # –ö–æ–ø–∏—Ä—É–µ–º –í–°–ï –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, —á—Ç–æ–±—ã —ç—Ç–æ—Ç –º–æ—â–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∏–º–µ–ª –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É.
    game_world_deps = global_deps.copy()

    logger.info("--- ‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è GameWorldOrchestrator —Å–æ–±—Ä–∞–Ω—ã ---")
    return game_world_deps


# === –°–ë–û–†–©–ò–ö –î–õ–Ø ARQ WORKER ===

async def build_arq_worker_dependencies() -> Dict[str, Any]:
    """
    –°–æ–±–∏—Ä–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ ARQ –≤–æ—Ä–∫–µ—Ä–∞.
    """
    logger.info("--- üõ†Ô∏è –°–±–æ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è ARQ Worker Context ---")
    global_deps = get_global_dependencies()
    worker_deps = global_deps.copy()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–ª–∏–∞—Å 'app_managers' –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∑–∞–¥–∞—á–∞–º–∏ ARQ.
    if "app_cache_managers" in worker_deps:
        worker_deps["app_managers"] = worker_deps["app_cache_managers"]
        
    logger.info("--- ‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è ARQ Worker Context —Å–æ–±—Ä–∞–Ω—ã ---")
    return worker_deps
