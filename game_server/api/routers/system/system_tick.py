# game_server/api/routers/system/system_tick.py

from fastapi import APIRouter, HTTPException
from pydantic import BaseModel


from game_server.services.logging.logging_setup import logger




router = APIRouter()
class AutoSessionRequest(BaseModel):
    character_id: int  # ‚úÖ –û–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Å–ø–∏—Å–∫–∞
    category: str
    
@router.post("/auto-session/start", summary="–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ-—Å–µ—Å—Å–∏–∏")
async def start_auto_session_route(payload: AutoSessionRequest):
    if payload.category not in ["exploration", "crafting", "trade", "general"]:
        raise HTTPException(status_code=400, detail="‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è!")
    
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ-—Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ {payload.character_id}, –∫–∞—Ç–µ–≥–æ—Ä–∏—è {payload.category}")
    
    try:
        return await start_auto_session(payload.character_id, payload.category)
    except ValueError:
        raise HTTPException(status_code=404, detail="‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")

@router.delete("/auto-session/delete", summary="–£–¥–∞–ª–µ–Ω–∏–µ –∞–≤—Ç–æ-—Å–µ—Å—Å–∏–∏")
async def delete_auto_session_route(player_id: int):
    logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∞–≤—Ç–æ-—Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ {player_id}")
    return await delete_auto_session(player_id)

@router.get("/auto-session/status", summary="–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ-—Å–µ—Å—Å–∏–∏")
async def get_auto_session_status_route(player_id: int):
    logger.info(f"üîé –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ-—Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ {player_id}")
    return await get_auto_session_status(player_id)

