import redis.asyncio as aioredis
from game_server.config.redis_config import REDIS_URL

class RedisClient:
    def __init__(self, redis_url: str = REDIS_URL):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Redis."""
        self.redis_url = redis_url
        self.redis = None

    async def connect(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis."""
        self.redis = aioredis.Redis.from_url(self.redis_url, decode_responses=True)
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Redis –ø–æ –∞–¥—Ä–µ—Å—É {self.redis_url}")

    async def set(self, key: str, value: str):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤ Redis."""
        await self.redis.set(key, value)
        print(f"üîπ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {key} ‚Üí {value}")

    async def get(self, key: str):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ Redis."""
        value = await self.redis.get(key)
        if value is None:
            print(f"‚ö†Ô∏è –ö–ª—é—á {key} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return None
        print(f"üîπ –ü–æ–ª—É—á–µ–Ω–æ: {key} ‚Üí {value}")
        return value

    async def delete(self, key: str):
        """–£–¥–∞–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏–∑ Redis."""
        await self.redis.delete(key)
        print(f"‚ùå –ö–ª—é—á {key} —É–¥–∞–ª—ë–Ω")

    async def exists(self, key: str):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–ª—é—á–∞ –≤ Redis."""
        exists = await self.redis.exists(key)
        print(f"üîé –ö–ª—é—á {key} {'—Å—É—â–µ—Å—Ç–≤—É–µ—Ç' if exists else '–Ω–µ –Ω–∞–π–¥–µ–Ω'}")
        return bool(exists)

    async def close(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Redis."""
        await self.redis.aclose()
        print("üö™ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Redis –∑–∞–∫—Ä—ã—Ç–æ")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
async def main():
    redis_client = RedisClient()
    await redis_client.connect()
    
    await redis_client.set("test_key", "hello world")
    await redis_client.get("test_key")
    await redis_client.exists("test_key")
    await redis_client.delete("test_key")

    await redis_client.close()

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞ (–µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é)
if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
