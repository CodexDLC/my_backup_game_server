import json
from fastapi import APIRouter, Body, Depends, HTTPException, status
from sqlalchemy.ext.asyncio import AsyncSession
from typing import List, Dict, Any, Callable # –î–æ–±–∞–≤–∏–ª Callable, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –≥–¥–µ-—Ç–æ –≤—Å–µ –∂–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π DiscordBindingLogic
from game_server.Logic.InfrastructureLogic.DataAccessLogic.db_instance import get_db_session
from game_server.Logic.InterfacesLogic.Discord.discord_binding_logic import DiscordBindingLogic

from game_server.database.models.pandemic_models import GetAllBindingsResponse
from game_server.services.logging.logging_setup import logger

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏, –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º
 # –ò—Å–ø–æ–ª—å–∑—É–µ–º db_session.py –∫–∞–∫ –≤—ã —É–∫–∞–∑–∞–ª–∏

router = APIRouter()

# ---
# –†–æ—É—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –≤—Å—Ç–∞–≤–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—è–∑–æ–∫
@router.post("/upsert", summary="–°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–≤—è–∑–∫–∏ Discord")
async def upsert_bindings_route(
    binding_data: list[dict] = Body(...),
    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: FastAPI —Å–∞–º –≤—ã–∑–æ–≤–µ—Ç get_db_session() –∏ –ø–µ—Ä–µ–¥–∞—Å—Ç **–≥–æ—Ç–æ–≤—É—é AsyncSession**
    db_session: AsyncSession = Depends(get_db_session)
):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ UPSERT {len(binding_data)} –ø—Ä–∏–≤—è–∑–æ–∫.")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DiscordBindingLogic, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —É–∂–µ –≥–æ—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é
        logic = DiscordBindingLogic(db_session) # <--- –ü–ï–†–ï–î–ê–ï–ú –ì–û–¢–û–í–£–Æ –°–ï–°–°–ò–Æ
        processed_count = await logic.upsert_discord_bindings(binding_data)
        logger.info(f"–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {processed_count} –ø—Ä–∏–≤—è–∑–æ–∫ —á–µ—Ä–µ–∑ API.")
        return {"status": "success", "message": f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {processed_count} –ø—Ä–∏–≤—è–∑–æ–∫.", "processed_count": processed_count}
    except ValueError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–ø—Ä–æ—Å–µ UPSERT: {e}", exc_info=True)
        raise HTTPException(
            status_code=status.HTTP_400_BAD_REQUEST,
            detail=f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}"
        )
    except Exception as e:
        logger.error(f"–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ UPSERT –ø—Ä–∏–≤—è–∑–æ–∫: {e}", exc_info=True)
        raise HTTPException(
            status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
            detail=f"–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}"
        )
    
# ---
# –†–æ—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–¥–Ω–æ–π –ø—Ä–∏–≤—è–∑–∫–∏ –ø–æ guild_id –∏ access_key
@router.get("/{guild_id}/{access_key}", summary="–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤—è–∑–∫—É –ø–æ guild_id –∏ access_key")
async def get_binding_by_key_route(
    guild_id: int,
    access_key: str,
    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º –≥–æ—Ç–æ–≤—É—é AsyncSession
    db_session: AsyncSession = Depends(get_db_session)
):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –æ–¥–Ω—É –ø—Ä–∏–≤—è–∑–∫—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥–∏–ª—å–¥–∏–∏ –ø–æ –µ—ë —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É access_key.
    """
    logger.info(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∫–∏ –¥–ª—è guild_id={guild_id}, access_key='{access_key}'.")
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DiscordBindingLogic, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —É–∂–µ –≥–æ—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é
        logic = DiscordBindingLogic(db_session) # <--- –ü–ï–†–ï–î–ê–ï–ú –ì–û–¢–û–í–£–Æ –°–ï–°–°–ò–Æ
        binding = await logic.get_binding_by_key(guild_id, access_key)
        if binding:
            return {"status": "found", "data": binding}
        
        logger.warning(f"–ü—Ä–∏–≤—è–∑–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è guild_id={guild_id}, access_key='{access_key}'.")
        raise HTTPException(
            status_code=status.HTTP_404_NOT_FOUND,
            detail="–ü—Ä–∏–≤—è–∑–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏–≤—è–∑–∫–∏ —á–µ—Ä–µ–∑ API (guild_id={guild_id}, access_key='{access_key}'): {e}", exc_info=True)
        raise HTTPException(
            status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
            detail=f"–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}"
        )
    
@router.get(
    "/guild/{guild_id}/all",
    response_model=GetAllBindingsResponse, # <--- –≠–¢–û –°–ê–ú–û–ï –í–ê–ñ–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï!
    summary="–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–∏–≤—è–∑–∫–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥–∏–ª—å–¥–∏–∏",
    description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∏–≤—è–∑–æ–∫ Discord –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥–∏–ª—å–¥–∏–∏.",
    response_description="–°–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—è–∑–æ–∫ Discord"
)
async def get_all_bindings_for_guild_route(
    guild_id: int,
    db_session: AsyncSession = Depends(get_db_session)
):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ Discord-–ø—Ä–∏–≤—è–∑–∫–∏ (–¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∫–∞–Ω–∞–ª–æ–≤) –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥–∏–ª—å–¥–∏–∏.
    """
    logger.info(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–∏–≤—è–∑–æ–∫ –¥–ª—è guild_id={guild_id}.")
    try:
        logic = DiscordBindingLogic(db_session)
        bindings = await logic.get_all_bindings(guild_id) # –≠—Ç–æ –≤–µ—Ä–Ω–µ—Ç List[DiscordBindings ORM Model]

        logger.info(f"API –≥–æ—Ç–æ–≤ –≤–µ—Ä–Ω—É—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è guild_id={guild_id}. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≤—è–∑–æ–∫: {len(bindings)}. –î–∞–Ω–Ω—ã–µ: {bindings}")

        # FastAPI —Ç–µ–ø–µ—Ä—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç GetAllBindingsResponse –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        # –û–Ω –≤–æ–∑—å–º–µ—Ç –æ–±—ä–µ–∫—Ç—ã DiscordBindings –∏–∑ 'bindings' –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏—Ö –≤ DiscordBindingResponse
        return {"status": "success", "data": bindings}

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Å–µ—Ö –ø—Ä–∏–≤—è–∑–æ–∫ —á–µ—Ä–µ–∑ API –¥–ª—è guild_id={guild_id}: {e}", exc_info=True)
        raise HTTPException(
            status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
            detail=f"–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}"
        )


# ---
# –†–æ—É—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–≤—è–∑–∫–∏ –ø–æ guild_id –∏ access_key
@router.delete("/{guild_id}/{access_key}", summary="–£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≤—è–∑–∫—É")
async def delete_binding_route(
    guild_id: int,
    access_key: str,
    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º –≥–æ—Ç–æ–≤—É—é AsyncSession
    db_session: AsyncSession = Depends(get_db_session)
):
    """
    –£–¥–∞–ª—è–µ—Ç –ø—Ä–∏–≤—è–∑–∫—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥–∏–ª—å–¥–∏–∏ –ø–æ –µ—ë —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É access_key.
    """
    logger.info(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∫–∏ –¥–ª—è guild_id={guild_id}, access_key='{access_key}'.")
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DiscordBindingLogic, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —É–∂–µ –≥–æ—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é
        logic = DiscordBindingLogic(db_session) # <--- –ü–ï–†–ï–î–ê–ï–ú –ì–û–¢–û–í–£–Æ –°–ï–°–°–ò–Æ
        deleted = await logic.delete_discord_binding(guild_id, access_key)
        if deleted:
            logger.info(f"–ü—Ä–∏–≤—è–∑–∫–∞ (guild_id={guild_id}, access_key='{access_key}') —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ API.")
            return {"status": "success", "message": "–ü—Ä–∏–≤—è–∑–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞."}
        
        logger.warning(f"–ü—Ä–∏–≤—è–∑–∫–∞ (guild_id={guild_id}, access_key='{access_key}') –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ API.")
        raise HTTPException(
            status_code=status.HTTP_404_NOT_FOUND,
            detail="–ü—Ä–∏–≤—è–∑–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–∏–≤—è–∑–∫–∏ —á–µ—Ä–µ–∑ API (guild_id={guild_id}, access_key='{access_key}'): {e}", exc_info=True)
        raise HTTPException(
            status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
            detail=f"–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}"
        )

# ---
# –≠–∫–∑–µ–º–ø–ª—è—Ä —Ä–æ—É—Ç–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ FastAPI
discord_bindings_router = router