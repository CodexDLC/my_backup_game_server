# game_server/api/routers/random_pool.py

from fastapi import APIRouter

from game_server.Logic.DomainLogic.Services.random_pool_logic import RandomPoolManager



router = APIRouter()

@router.post("/random/init_pool", summary="–°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –ø—É–ª —á–∏—Å–µ–ª")
async def init_random_pool():
    """–£–¥–∞–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π –ø—É–ª –∏ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π"""
    try:
        manager = RandomPoolManager()
        await manager.init_pool()
        return {"status": "‚úÖ –ü—É–ª —á–∏—Å–µ–ª —Å–æ–∑–¥–∞–Ω!"}
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ init_pool: {e}")
        return {"status": "‚ùå –û—à–∏–±–∫–∞!", "message": str(e)}


@router.get("/random/check_chance", summary="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è")
async def check_chance(chance: float):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –∑–∞–¥–∞–Ω–Ω–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏"""
    manager = RandomPoolManager()
    result = await manager.check_chance(chance)
    return {"chance": chance, "result": result}

@router.get("/random/stats", summary="–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—É–ª–∞ —á–∏—Å–µ–ª")
async def pool_stats():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—É–ª–∞ —á–∏—Å–µ–ª"""
    manager = RandomPoolManager()
    stats = await manager.get_stats()
    return stats


random_pool_router = router  # üî• –≠–∫–∑–µ–º–ø–ª—è—Ä –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏