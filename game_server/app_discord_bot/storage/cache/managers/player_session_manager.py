# game_server/app_discord_bot/storage/cache/managers/player_session_manager.py
import json
from typing import Dict, Any, Optional

from game_server.app_discord_bot.storage.cache.constant.constant_key import RedisKeys
from game_server.app_discord_bot.storage.cache.constant.setting_manager import AuthTokenSettings
from game_server.app_discord_bot.storage.cache.discord_redis_client import DiscordRedisClient
# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–æ–∂–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –Ω–∞ IPlayerSessionManager
from game_server.app_discord_bot.storage.cache.interfaces.player_session_manager_interface import IPlayerSessionManager 
from game_server.config.logging.logging_setup import app_logger as logger


# üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ö–ª–∞—Å—Å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –∏ –µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
class PlayerSessionManager(IPlayerSessionManager): # IPlayerShardDataManager —Ç–æ–∂–µ —Å–ª–µ–¥—É–µ—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å
    """
    –ú–µ–Ω–µ–¥–∂–µ—Ä –∫—ç—à–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è "–∂–∏–≤—ã—Ö" —Å–µ—Å—Å–∏–π –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –æ–Ω–ª–∞–π–Ω –Ω–∞ —à–∞—Ä–¥–µ.
    –†–∞–±–æ—Ç–∞–µ—Ç —Å Redis Hash, –≥–¥–µ –∫–∞–∂–¥–æ–µ –ø–æ–ª–µ - —ç—Ç–æ —Å–µ—Å—Å–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞.
    """
    def __init__(self, redis_client: DiscordRedisClient, ttl: int = AuthTokenSettings.DEFAULT_TTL_SECONDS):
        self.redis_client = redis_client
        # TTL –¥–ª—è —Å–µ—Å—Å–∏–∏ - –∫–∞–∫ –¥–æ–ª–≥–æ —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
        self.ttl = ttl 
        # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –†–∞–±–æ—Ç–∞–µ–º —Å –Ω–æ–≤—ã–º –∫–ª—é—á–æ–º –¥–ª—è —Å–µ—Å—Å–∏–π
        self.KEY_PATTERN = RedisKeys.PLAYER_SESSION_HASH
        logger.info("‚ú® PlayerSessionManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ö–ª—é—á —Ç–µ–ø–µ—Ä—å –∑–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç guild_id
    async def _get_key(self, guild_id: int) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª—é—á Redis –¥–ª—è Hash'–∞ —Å–µ—Å—Å–∏–π –Ω–∞ —à–∞—Ä–¥–µ."""
        return self.KEY_PATTERN.format(guild_id=guild_id)

    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
    async def set_player_session(
        self, 
        guild_id: int, 
        account_id: int,
        session_data: Dict[str, Any]
    ) -> None:
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞.
        """
        key = await self._get_key(guild_id)
        # account_id —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –∏–º—è –ø–æ–ª—è –≤ Hash
        field_name = str(account_id)
        try:
            await self.redis_client.hset(key, field_name, json.dumps(session_data))
            # –ü—Ä–∏ –∫–∞–∂–¥–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å –∂–∏–∑–Ω—å –≤—Å–µ–≥–æ Hash
            if self.ttl > 0:
                await self.redis_client.expire(key, self.ttl)
            logger.debug(f"–°–µ—Å—Å–∏—è –∏–≥—Ä–æ–∫–∞ {account_id} –Ω–∞ —à–∞—Ä–¥–µ {guild_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏ –∏–≥—Ä–æ–∫–∞ {account_id} –Ω–∞ —à–∞—Ä–¥–µ {guild_id}: {e}", exc_info=True)

    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
    async def get_player_session(
        self, 
        guild_id: int, 
        account_id: int
    ) -> Optional[Dict[str, Any]]:
        """
        –ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞.
        """
        key = await self._get_key(guild_id)
        field_name = str(account_id)
        try:
            data_str = await self.redis_client.hget(key, field_name)
            if data_str:
                return json.loads(data_str)
            return None
        except json.JSONDecodeError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –¥–ª—è —Å–µ—Å—Å–∏–∏ –∏–≥—Ä–æ–∫–∞ {account_id} –Ω–∞ —à–∞—Ä–¥–µ {guild_id}: {e}", exc_info=True)
            return None
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏ –∏–≥—Ä–æ–∫–∞ {account_id} –Ω–∞ —à–∞—Ä–¥–µ {guild_id}: {e}", exc_info=True)
            return None
            
    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π –Ω–∞ —à–∞—Ä–¥–µ
    async def get_all_sessions(self, guild_id: int) -> Optional[Dict[str, Any]]:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –Ω–∞ —à–∞—Ä–¥–µ."""
        key = await self._get_key(guild_id)
        try:
            all_sessions_str = await self.redis_client.hgetall(key)
            if not all_sessions_str:
                return {} # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å, –µ—Å–ª–∏ —Å–µ—Å—Å–∏–π –Ω–µ—Ç
            
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Å–µ—Å—Å–∏—é –∏–∑ JSON
            all_sessions = {acc_id: json.loads(session_str) for acc_id, session_str in all_sessions_str.items()}
            return all_sessions
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π —Å —à–∞—Ä–¥–∞ {guild_id}: {e}", exc_info=True)
            return None

    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ (–∫–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –∏–≥—Ä—ã)
    async def delete_player_session(
        self, 
        guild_id: int, 
        account_id: int
    ) -> None:
        """
        –£–¥–∞–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –∏–≥—Ä–æ–∫–∞ –∏–∑ –∫—ç—à–∞.
        """
        key = await self._get_key(guild_id)
        field_name = str(account_id)
        try:
            await self.redis_client.hdel(key, field_name)
            logger.debug(f"–°–µ—Å—Å–∏—è –∏–≥—Ä–æ–∫–∞ {account_id} –Ω–∞ —à–∞—Ä–¥–µ {guild_id} —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∫—ç—à–∞.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏ –∏–≥—Ä–æ–∫–∞ {account_id} –Ω–∞ —à–∞—Ä–¥–µ {guild_id}: {e}", exc_info=True)