# game_server/app_discord_bot/app/events/player_events_handler.py
import discord
import logging
import inject
from typing import Optional

from game_server.app_discord_bot.app.constant.constants_world import HUB_GUILD_ID
from game_server.app_discord_bot.app.constant.roles_blueprint import OFFLINE_ROLE, PLAYER_ROLE
from game_server.app_discord_bot.app.services.admin.base_discord_operations import BaseDiscordOperations
from game_server.app_discord_bot.storage.cache.managers.account_data_manager import AccountDataManager
from game_server.app_discord_bot.storage.cache.managers.guild_config_manager import GuildConfigManager 

class PlayerEventsHandler:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è Discord, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –∏–≥—Ä–æ–∫–∞ (–≤—Ö–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –≤—ã—Ö–æ–¥ –∏ —Ç.–¥.).
    """
    @inject.autoparams()
    def __init__(
        self,
        base_ops: BaseDiscordOperations,
        account_data_manager: AccountDataManager,
        guild_config_manager: GuildConfigManager,
        logger: logging.Logger,
    ):
        self.base_ops = base_ops
        self.account_data_manager = account_data_manager
        self.guild_config_manager = guild_config_manager
        self.logger = logger
        self.logger.info("‚ú® PlayerEventsHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    async def handle_player_join(self, member: discord.Member):
        """
        –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–∞ –∏–≥—Ä–æ–≤–æ–π —à–∞—Ä–¥.
        –°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏ –∏ –∫–∞–Ω–∞–ª—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö ID –≤ Redis.
        """
        if member.guild.id == HUB_GUILD_ID:
            self.logger.info(f"–ò–≥—Ä–æ–∫ {member.id} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –•–∞–±—É. –ü—Ä–æ–ø—É—Å–∫–∞—é –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏–≥—Ä–æ–∫–∞.")
            return

        self.logger.info(f"–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ {member.id} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —à–∞—Ä–¥—É {member.guild.id}. –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏...")

        try:
            account_id = await self.account_data_manager.get_account_id_by_discord_id(
                discord_user_id=member.id
            )
            
            if not account_id:
                self.logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ account_id –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.id}. –ü—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
                return

            # --- –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Ä–æ–ª–∏ ---
            # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ä–æ–ª—å –¥–ª—è –∏–≥—Ä–æ–∫–∞
            personal_role = await self.base_ops.create_or_update_role(member.guild, f"Player-{account_id}")
            if not personal_role:
                self.logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ä–æ–ª—å –¥–ª—è {member.id}. –ü—Ä–µ—Ä—ã–≤–∞—é –ø—Ä–æ—Ü–µ—Å—Å.")
                return
            
            self.logger.info(f"–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–æ–ª—å '{personal_role.name}' –¥–ª—è {member.id} —Å–æ–∑–¥–∞–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞. –ù–µ –≤—ã–¥–∞–µ—Ç—Å—è –∏–≥—Ä–æ–∫—É.")


            # --- –®–∞–≥ 2: –í—ã–¥–∞—á–∞ –±–∞–∑–æ–≤—ã—Ö —Ä–æ–ª–µ–π (Offline, Player) ---
            # –≠—Ç–∞ –ª–æ–≥–∏–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Ä–æ–ª–∏, —É–ø—Ä–∞–≤–ª—è—é—â–µ–π –∫–∞–Ω–∞–ª–∞–º–∏.
            offline_role_id = await self._get_cached_role_id(member.guild.id, OFFLINE_ROLE)
            player_role_id = await self._get_cached_role_id(member.guild.id, PLAYER_ROLE)

            offline_role_obj = member.guild.get_role(offline_role_id) if offline_role_id else None
            player_role_obj = member.guild.get_role(player_role_id) if player_role_id else None
            
            roles_to_add = [role for role in [offline_role_obj, player_role_obj] if role and role not in member.roles]
            
            if roles_to_add:
                await member.add_roles(*roles_to_add, reason="–ü–µ—Ä–≤–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–≥—Ä–æ–∫–∞")
                self.logger.info(f"–í—ã–¥–∞–Ω—ã –±–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏ –¥–ª—è {member.id}.")
            else:
                self.logger.info(f"–ë–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏ —É–∂–µ –µ—Å—Ç—å –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è {member.id}.")
            
            # --- –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ ---
            self.logger.debug(f"–ü—Ä–æ–≤–µ—Ä—è—é/—Å–æ–∑–¥–∞—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è {member.id}.")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–Ω–∞–ª–∞—Ö –∏–∑ Redis, –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
            channels_data = await self.account_data_manager.get_account_field(
                shard_id=member.guild.id,
                discord_user_id=member.id,
                field_name="discord_channels"
            )

            interface_channel_id = channels_data.get("interface_channel_id") if channels_data and isinstance(channels_data, dict) else None
            dashboard_channel_id = channels_data.get("dashboard_channel_id") if channels_data and isinstance(channels_data, dict) else None

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º member.guild –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –≥–∏–ª—å–¥–∏–∏
            interface_channel = member.guild.get_channel(int(interface_channel_id)) if interface_channel_id else None
            dashboard_channel = member.guild.get_channel(int(dashboard_channel_id)) if dashboard_channel_id else None

            # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º personal_role –≤ _provision_personal_channel
            if not interface_channel:
                interface_channel = await self._provision_personal_channel(member, personal_role, account_id, "INTERFACES", "interface")
                if interface_channel:
                    self.logger.info(f"–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª 'interface-{account_id}' —Å–æ–∑–¥–∞–Ω.")
            else:
                self.logger.info(f"–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª 'interface-{account_id}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            
            if not dashboard_channel:
                dashboard_channel = await self._provision_personal_channel(member, personal_role, account_id, "ARENAS_AND_LOGS", "dashboard")
                if dashboard_channel:
                    self.logger.info(f"–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª 'dashboard-{account_id}' —Å–æ–∑–¥–∞–Ω.")
            else:
                self.logger.info(f"–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª 'dashboard-{account_id}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            
            if not interface_channel or not dashboard_channel:
                self.logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è {member.id}. –î–∞–ª—å–Ω–µ–π—à–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.")
                return

            # --- –®–∞–≥ 4: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Redis –ø–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ ---
            self.logger.debug(f"–°–æ—Ö—Ä–∞–Ω—è—é ID —Å—É—â–Ω–æ—Å—Ç–µ–π –≤ Redis –¥–ª—è {member.id} –ø–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ.")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Ä–æ–ª–∏
            roles_payload = {
                "personal_role_id": personal_role.id
            }
            channels_payload = {
                "interface_channel_id": str(interface_channel.id),
                "dashboard_channel_id": str(dashboard_channel.id)
            }

            await self.account_data_manager.save_account_field(member.guild.id, member.id, "discord_roles", roles_payload)
            await self.account_data_manager.save_account_field(member.guild.id, member.id, "discord_channels", channels_payload)
            
            self.logger.info(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω—ã ID —Ä–æ–ª–µ–π –∏ –∫–∞–Ω–∞–ª–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ {account_id}.")
            self.logger.success(f"–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–ª—è {member.id} (account_id: {account_id}) —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω.")

        except Exception as e:
            self.logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—Ö–æ–¥–∞ {member.id} –Ω–∞ —à–∞—Ä–¥ {member.guild.id}: {e}", exc_info=True)

    async def _get_cached_role_id(self, guild_id: int, role_name: str) -> Optional[int]:
        """–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —Ä–æ–ª–∏ –∏–∑ –∫—ç—à–∞ –≥–∏–ª—å–¥–∏–∏."""
        config = await self.guild_config_manager.get_field(guild_id, "system_roles", "game")
        role_data = config.get(role_name) if config and isinstance(config, dict) else None
        role_id = role_data.get("discord_id") if role_data and isinstance(role_data, dict) else None
        return role_id

    # –ü—Ä–∏–Ω–∏–º–∞–µ—Ç personal_role (–æ–±—ä–µ–∫—Ç discord.Role)
    async def _provision_personal_channel(self, member: discord.Member, personal_role: discord.Role, account_id: int, cat_name: str, chan_name_prefix: str) -> Optional[discord.TextChannel]:
        """–°–æ–∑–¥–∞–µ—Ç –æ–¥–∏–Ω –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª."""
        guild_layout = await self.guild_config_manager.get_field(member.guild.id, "layout_config", "game")
        if not guild_layout:
            self.logger.error(f"layout_config –¥–ª—è —à–∞—Ä–¥–∞ {member.guild.id} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª.")
            return None

        player_category_map = guild_layout.get("player_channel_category_map", {}) 
        category_id_str = player_category_map.get(cat_name)
        
        if not category_id_str:
            self.logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ ID –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{cat_name}' –≤ –∫–æ–Ω—Ñ–∏–≥–µ —à–∞—Ä–¥–∞ {member.guild.id}.")
            return None
        
        category = member.guild.get_channel(int(category_id_str))
        if not category or not isinstance(category, discord.CategoryChannel):
            self.logger.error(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{cat_name}' (ID: {category_id_str}) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π.")
            return None

        # –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —Ç–µ–ø–µ—Ä—å –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Ä–æ–ª–∏, –∞ –Ω–µ –¥–ª—è —Å–∞–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        overwrites = {
            member.guild.default_role: discord.PermissionOverwrite(view_channel=False), # @everyone –Ω–µ –≤–∏–¥–∏—Ç
            personal_role: discord.PermissionOverwrite(view_channel=True, send_messages=True, read_messages=True, read_message_history=True) # –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–æ–ª—å –≤–∏–¥–∏—Ç
        }
        
        channel_name = f"{chan_name_prefix}-{account_id}"
        return await self.base_ops.create_discord_channel(member.guild, channel_name, "text", category, overwrites)
