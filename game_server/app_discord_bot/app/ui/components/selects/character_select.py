import discord
from typing import List, Dict, Any

class CharacterSelect(discord.ui.Select):
    """
    –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.
    –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –Ω–∞ –≤—Ö–æ–¥ –≤—Å–µ–≥–¥–∞ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–µ–ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.
    """
    def __init__(self, characters: List[Dict[str, Any]]):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.

        Args:
            characters (List[Dict[str, Any]]): –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π, –≥–¥–µ –∫–∞–∂–¥—ã–π —Å–ª–æ–≤–∞—Ä—å 
                                              –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ–¥–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.
                                              –û–∂–∏–¥–∞–µ–º—ã–µ –∫–ª—é—á–∏: 'id', 'name', 'level', 'class'.
        """
        
        options: List[discord.SelectOption] = []
        for char in characters:
            options.append(discord.SelectOption(
                label=char.get('name', '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π'),
                value=str(char.get('id', 'error_id')), # Value –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π
                description=f"{char.get('class', '–ö–ª–∞—Å—Å –Ω–µ —É–∫–∞–∑–∞–Ω')}, {char.get('level', '?')} —É—Ä–æ–≤–µ–Ω—å",
                emoji="üë§"
            ))

        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –≤—Ö–æ–¥–∞...",
            min_values=1,
            max_values=1,
            options=options
        )

    async def callback(self, interaction: discord.Interaction):
        """
        –í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–ª–∞–µ—Ç –≤—ã–±–æ—Ä.
        –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É View, –ø–µ—Ä–µ–¥–∞–≤–∞—è ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.
        """
        if self.values: # self.values[0] –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.
            if hasattr(self.view, 'on_character_select'):
                await self.view.on_character_select(interaction, self.values[0])