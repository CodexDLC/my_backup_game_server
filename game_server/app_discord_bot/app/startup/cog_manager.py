# game_server/app_discord_bot/startup/commands_manager.py

import os
import discord
from discord.ext import commands
from game_server.config.logging.logging_setup import app_logger as logger

class CommandsManager:
    # bot: commands.Bot –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏, –∫–∞–∫ –±—ã–ª–æ —É –≤–∞—Å
    # base_dir_fs: –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ –§–ê–ô–õ–û–í–û–ô –°–ò–°–¢–ï–ú–ï, –≥–¥–µ –ª–µ–∂–∞—Ç –∫–æ–≥–∏
    # base_dir_import: –ü—É—Ç—å –¥–ª—è –ò–ú–ü–û–†–¢–ê –ö–û–ì–û–í (Python-–º–æ–¥—É–ª—å)
    def __init__(self, bot: commands.Bot): # –£–¥–∞–ª—è–µ–º base_dir –∏–∑ __init__, –±—É–¥–µ–º –≤—ã—á–∏—Å–ª—è—Ç—å
        self.bot = bot
        
        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 1: –û–ø—Ä–µ–¥–µ–ª—è–µ–º base_dir –¥–ª—è –§–ê–ô–õ–û–í–û–ô –°–ò–°–¢–ï–ú–´
        # __file__ —ç—Ç–æ –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–º—É —Ñ–∞–π–ª—É commands_manager.py
        # os.path.dirname(__file__) -> game_server/app_discord_bot/startup/
        # os.path.join(..., "..", "app", "cogs") -> game_server/app_discord_bot/app/cogs
        self.base_dir_fs = os.path.join(os.path.dirname(__file__), "..", "cogs")
        self.base_dir_fs = os.path.abspath(self.base_dir_fs) # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —ç—Ç–æ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
        
        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 2: –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –ø—É—Ç—å –¥–ª—è –ò–ú–ü–û–†–¢–ê
        # –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Python-–ø—É—Ç—å –¥–æ –ø–∞–ø–∫–∏ 'cogs'
        # –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ (game_server)
        self.base_import_prefix = "game_server.app_discord_bot.app.cogs"
        
        self.EXCLUDED_DIRS = {"__pycache__", "blueprints", "interface_templates", "utils"}
        self.EXCLUDED_FILES = {"__init__.py", "setup_world.txt", "channels_config.json"}
        self.EXCLUDED_PREFIXES = ("_",)
        
        self.loaded_cogs = set()
        logger.info(f"üöÄ –ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–≥–æ–≤ | –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –§–°: {self.base_dir_fs}")
        logger.info(f"üöÄ –ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–≥–æ–≤ | –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –∏–º–ø–æ—Ä—Ç–∞: {self.base_import_prefix}")

    def _is_valid_cog(self, path: str) -> bool:
        filename = os.path.basename(path)
        dirname = os.path.basename(os.path.dirname(path))
        if filename in self.EXCLUDED_FILES or filename.startswith(self.EXCLUDED_PREFIXES) or dirname in self.EXCLUDED_DIRS:
            return False
        return filename.endswith(".py")

    def _path_to_module(self, file_path_fs: str) -> str:
        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 3: –í—ã—á–∏—Å–ª–µ–Ω–∏–µ Python-–ø—É—Ç–∏
        # file_path_fs: –Ω–∞–ø—Ä–∏–º–µ—Ä, /app/game_server/app_discord_bot/app/cogs/admin/ui_cog.py
        # self.base_dir_fs: /app/game_server/app_discord_bot/app/cogs

        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç base_dir_fs: admin/ui_cog.py
        rel_path_from_cogs = os.path.relpath(file_path_fs, start=self.base_dir_fs)
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ Python-–ø—É—Ç—å: admin.ui_cog
        module_path_suffix = rel_path_from_cogs.replace(".py", "").replace(os.sep, ".")
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å –±–∞–∑–æ–≤—ã–º –∏–º–ø–æ—Ä—Ç-–ø—Ä–µ—Ñ–∏–∫—Å–æ–º: game_server.app_discord_bot.app.cogs.admin.ui_cog
        return f"{self.base_import_prefix}.{module_path_suffix}"

    async def load_cogs(self) -> bool:
        if not os.path.exists(self.base_dir_fs): # –ò—Å–ø–æ–ª—å–∑—É–µ–º base_dir_fs
            logger.error(f"‚ùå –ü–∞–ø–∫–∞ –∫–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {self.base_dir_fs}")
            return False

        logger.info(f"üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–≥–æ–≤ –≤: {self.base_dir_fs}")
        success_count = 0
        total_files = 0

        for root, dirs, files in os.walk(self.base_dir_fs): # –ò—Å–ø–æ–ª—å–∑—É–µ–º base_dir_fs
            dirs[:] = [d for d in dirs if d not in self.EXCLUDED_DIRS]
            for filename in files:
                file_path_fs = os.path.join(root, filename) # –ü–æ–ª–Ω—ã–π —Ñ–∞–π–ª–æ–≤—ã–π –ø—É—Ç—å
                total_files += 1
                if self._is_valid_cog(file_path_fs):
                    module_name = self._path_to_module(file_path_fs) # –ü–µ—Ä–µ–¥–∞–µ–º –ø–æ–ª–Ω—ã–π —Ñ–∞–π–ª–æ–≤—ã–π –ø—É—Ç—å
                    logger.debug(f"‚öôÔ∏è –ù–∞–π–¥–µ–Ω –∫–æ–≥: {module_name}")
                    if await self._load_cog(module_name):
                        success_count += 1
                else:
                    logger.debug(f"‚è© –ü—Ä–æ–ø—É—â–µ–Ω: {filename}")

        logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–æ–≥–æ–≤: {success_count} –∏–∑ {total_files} —Ñ–∞–π–ª–æ–≤")
        return success_count > 0

    async def _load_cog(self, module_name: str) -> bool:
        try:
            await self.bot.load_extension(module_name)
            self.loaded_cogs.add(module_name)
            logger.success(f"‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∂–µ–Ω: {module_name}")
            return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–≥–∞ {module_name}", exc_info=True)
            return False

    async def reload_cogs(self):
        for cog in self.loaded_cogs:
            try:
                await self.bot.reload_extension(cog)
                logger.success(f"üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω: {cog}")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–≥–∞ {cog}", exc_info=True)

# –§—É–Ω–∫—Ü–∏—è setup –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —ç—Ç–æ–≥–æ –∫–æ–≥–∞ CommandsManager
async def setup(bot: commands.Bot):
    manager_cog = CommandsManager(bot)
    # bot.add_cog(manager_cog) # –û–±—ã—á–Ω–æ CommandsManager –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º–∏–º –∫–æ–≥–æ–º, –∞ —É–ø—Ä–∞–≤–ª—è–µ—Ç –∏–º–∏.
                              # –ï—Å–ª–∏ CommandsManager –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Cog, —ç—Ç—É —Å—Ç—Ä–æ–∫—É –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å.
                              # –ï—Å–ª–∏ CommandsManager –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–≥–æ–º, –æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç commands.Cog
    await manager_cog.load_cogs() # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–≥–æ–≤ —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä

    logger.info("CommandsManager –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –∫–æ–≥–∏ –∑–∞–ø—É—â–µ–Ω—ã.")