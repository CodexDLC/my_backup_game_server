# game_server/app_discord_bot/app/cogs/system/registration_cog.py
import discord
from discord.ext import commands
import inject
import logging

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º RegistrationView
from game_server.app_discord_bot.app.ui.views.authentication.registration_view import RegistrationView

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç—ã
from game_server.app_discord_bot.app.ui.messages.authentication.registration_messages import (
    REGISTRATION_EMBED_TITLE, REGISTRATION_EMBED_DESCRIPTION, 
    REGISTRATION_EMBED_FOOTER, COMMAND_RESPONSES
    )

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –∫–∞–Ω–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
from game_server.app_discord_bot.app.constant.constants_world import REGISTRATION_CHANNEL_ID

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º GuildConfigManager –∏ RedisKeys –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è message_id
from game_server.app_discord_bot.storage.cache.managers.guild_config_manager import GuildConfigManager
from game_server.app_discord_bot.storage.cache.constant.constant_key import RedisKeys


class RegistrationCog(commands.Cog):
    """
    –ö–æ–≥, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
    –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –µ–≥–æ –ø–µ—Ä–µ–ø—Ä–∏–≤—è–∑–∫—É.
    """
    @inject.autoparams()
    def __init__(self, bot: commands.Bot, logger: logging.Logger, guild_config_manager: GuildConfigManager):
        self.bot = bot
        self.logger = logger
        self.guild_config_manager = guild_config_manager # –ò–Ω–∂–µ–∫—Ç–∏—Ä—É–µ–º GuildConfigManager
        self.logger.info("‚ú® RegistrationCog –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    @commands.command(name="send_registration_message")
    @commands.has_permissions(administrator=True) # –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É
    async def send_registration_message(self, ctx: commands.Context, channel_id: int = None):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.
        –ï—Å–ª–∏ channel_id –Ω–µ —É–∫–∞–∑–∞–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω REGISTRATION_CHANNEL_ID –∏–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç.
        –ö–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !send_registration_message [ID_–∫–∞–Ω–∞–ª–∞]
        """
        # üî• –ù–û–í–û–ï: –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ç–∞–π–º–∞—É—Ç–∞
        # ephemeral=True –¥–µ–ª–∞–µ—Ç –æ—Ç–≤–µ—Ç –≤–∏–¥–∏–º—ã–º —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # thinking=True –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç "–ë–æ—Ç –¥—É–º–∞–µ—Ç..."
        await ctx.defer(ephemeral=True, thinking=True)


        target_channel_id = channel_id if channel_id is not None else REGISTRATION_CHANNEL_ID
        
        try:
            target_channel = self.bot.get_channel(target_channel_id)
            if not target_channel:
                # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º followup.send, —Ç–∞–∫ –∫–∞–∫ ctx.defer() —É–∂–µ –±—ã–ª –≤—ã–∑–≤–∞–Ω
                await ctx.followup.send(
                    COMMAND_RESPONSES["channel_not_found"].format(target_channel_id),
                    ephemeral=True, delete_after=60
                )
                return

            embed = discord.Embed(
                title=REGISTRATION_EMBED_TITLE,
                description=REGISTRATION_EMBED_DESCRIPTION,
                color=discord.Color.blue()
            )
            embed.set_footer(text=REGISTRATION_EMBED_FOOTER)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—à–∏–º –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º View
            message = await target_channel.send(embed=embed, view=RegistrationView(self.bot))
            
            # --- –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Redis ---
            # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ guild_id –•–∞–±–∞ - —ç—Ç–æ ctx.guild.id
            hub_guild_id = ctx.guild.id 
            await self.guild_config_manager.set_field(
                guild_id=hub_guild_id,
                shard_type="hub", # –¢–∏–ø —à–∞—Ä–¥–∞ "hub"
                field_name=RedisKeys.FIELD_REGISTRATION_MESSAGE_ID, # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –∏–∑ RedisKeys
                data=str(message.id) # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
            )
            self.logger.success(f"ID —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ({message.id}) —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Redis –¥–ª—è —Ö–∞–±–∞ {hub_guild_id}.")

            # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º followup.send –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
            await ctx.followup.send(
                COMMAND_RESPONSES["success_sent"].format(target_channel_id),
                ephemeral=True, delete_after=60
            )
            self.logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {target_channel_id} –ø–æ –∫–æ–º–∞–Ω–¥–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ {ctx.author.id}.")

        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}", exc_info=True)
            # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º followup.send –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ –æ—Ç–≤–µ—Ç —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (—Ö–æ—Ç—è ctx.defer() –¥–µ–ª–∞–µ—Ç —ç—Ç–æ –º–µ–Ω–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã–º)
            if not ctx.interaction.response.is_done():
                 await ctx.followup.send(
                    COMMAND_RESPONSES["error_sending"].format(e),
                    ephemeral=True, delete_after=60
                )
        finally:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥
            # ctx.message –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ ctx.defer/respond –≤—ã–∑–≤–∞–Ω
            # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥–æ–π, ctx.message –º–æ–∂–µ—Ç –±—ã—Ç—å None
            if ctx.message: # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥–∞ –∏ message —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                await ctx.message.delete(delay=60)

# –§—É–Ω–∫—Ü–∏—è setup –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–≥–∞
async def setup(bot: commands.Bot):
    # inject –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑—Ä–µ—à–∏—Ç logger –∏ guild_config_manager
    await bot.add_cog(inject.call(RegistrationCog, bot=bot)) # –ò–Ω–∂–µ–∫—Ç–∏—Ä—É–µ–º cog