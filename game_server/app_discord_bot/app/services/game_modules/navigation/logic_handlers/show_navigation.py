# game_server/app_discord_bot/app/services/navigation/logic_handlers/show_navigation.py

import inject
import discord
import logging
from typing import Dict, Any, List

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –Ω–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
from game_server.app_discord_bot.config.assets.descriptions_text.location_descriptions import LOCATION_DESCRIPTIONS

# –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –∫—ç—à–∞
from game_server.app_discord_bot.app.services.game_modules.navigation.dtos import NavigationDisplayDataDTO
from game_server.app_discord_bot.app.services.utils.navigation_helper import NavigationHelper
from game_server.app_discord_bot.storage.cache.interfaces.character_cache_manager_interface import ICharacterCacheDiscordManager # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Å—Å–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞

class ShowNavigationHandler:
    """
    –õ–æ–≥–∏—á–µ—Å–∫–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã 'show_navigation'.
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏ –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∏—Ö –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏.
    """
    @inject.autoparams()
    def __init__(self, navigation_helper: NavigationHelper, character_cache_manager: ICharacterCacheDiscordManager, logger: logging.Logger): # –î–æ–±–∞–≤–ª—è–µ–º character_cache_manager
        self.navigation_helper = navigation_helper
        self.character_cache_manager = character_cache_manager # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
        self.logger = logger
        self.logger.info(f"‚úÖ {self.__class__.__name__} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    async def execute(self, command_str: str, interaction: discord.Interaction) -> NavigationDisplayDataDTO:
        user = interaction.user
        guild = interaction.guild # –î–æ–±–∞–≤–ª—è–µ–º guild –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Å—Å–∏–∏
        self.logger.debug(f"–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è ShowNavigationHandler –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name} —Å –∫–æ–º–∞–Ω–¥–æ–π: {command_str}")

        try:
            # 1. –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é —Ö–µ–ª–ø–µ—Ä–∞
            location_details: Dict[str, Any] = await self.navigation_helper.get_current_location_details_for_user(user)
            current_location_id = location_details.get("access_key", "") # –ò—Å–ø–æ–ª—å–∑—É–µ–º access_key –∫–∞–∫ location_id

            # üî• –ù–û–í–û–ï: –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ —Å–µ—Å—Å–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üî•
            character_id = await self.character_cache_manager.get_active_character_id(user.id)
            if not character_id:
                raise ValueError(f"–ù–µ –Ω–∞–π–¥–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}.")
            
            char_session = await self.character_cache_manager.get_character_session(character_id, guild.id)
            previous_location_data = char_session.get("location", {}).get("previous", {})
            previous_location_id = previous_location_data.get("location_id") if previous_location_data else None

            # 2. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª–µ–π —ç–º–±–µ–¥–∞ (Fields) - –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç.–∫. –æ–Ω–∏ –±–µ—Ä—É—Ç—Å—è –∏–∑ exits
            location_fields: List[Dict[str, Any]] = []
            exits_data = location_details.get("exits", []) 

            if exits_data:
                location_fields.append({
                    "name": "üó∫Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—É—Ç–∏:",
                    "value": "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–π—Ç–∏:",
                    "inline": False
                })
                for i, exit_info in enumerate(exits_data):
                    label = exit_info.get("label", f"–ü—É—Ç—å {i+1}")
                    target_id = exit_info.get("target_location_id", "???")
                    location_fields.append({
                        "name": f"‚û° {label}",
                        "value": f"(ID: {target_id})",
                        "inline": True
                    })
            else:
                location_fields.append({
                    "name": "üö´ –ü—É—Ç–µ–π –Ω–µ—Ç",
                    "value": "–ò–∑ —ç—Ç–æ–π –ª–æ–∫–∞—Ü–∏–∏ –Ω–µ—Ç —è–≤–Ω—ã—Ö –≤—ã—Ö–æ–¥–æ–≤.",
                    "inline": False
                })

            # 3. üî• –ù–û–í–û–ï: –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ üî•
            location_name = location_details.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è")
            location_description_key = location_details.get("description") # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á –∏–∑ YAML

            final_location_description = "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç." # –î–µ—Ñ–æ–ª—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–æ–∫

            if location_description_key and location_description_key in LOCATION_DESCRIPTIONS:
                context_descriptions = LOCATION_DESCRIPTIONS[location_description_key]
                if previous_location_id and previous_location_id in context_descriptions:
                    final_location_description = context_descriptions[previous_location_id]
                    self.logger.debug(f"–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è {current_location_id} –ø–æ–ª—É—á–µ–Ω–æ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: –ø—Ä–µ–¥—ã–¥—É—â–∞—è {previous_location_id}.")
                else:
                    final_location_description = context_descriptions.get("default", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
                    if previous_location_id: # –ï—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è –µ—Å—Ç—å, –Ω–æ –¥–ª—è –Ω–µ—ë –Ω–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
                         self.logger.warning(f"–î–ª—è –ª–æ–∫–∞—Ü–∏–∏ {current_location_id} (–∫–ª—é—á: {location_description_key}) –Ω–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤—Ö–æ–¥–∞ –∏–∑ {previous_location_id}. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ.")
                    else: # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –≤—Ö–æ–¥ –∏–ª–∏ –Ω–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏
                         self.logger.debug(f"–î–ª—è –ª–æ–∫–∞—Ü–∏–∏ {current_location_id} (–∫–ª—é—á: {location_description_key}) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏).")
            else:
                self.logger.warning(f"–î–ª—è –ª–æ–∫–∞—Ü–∏–∏ {current_location_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –∫–ª—é—á –æ–ø–∏—Å–∞–Ω–∏—è ({location_description_key}) –∏–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ LOCATION_DESCRIPTIONS.")
                # –ï—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞—Ä–æ–µ –¥–æ–±—Ä–æ–µ "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç." –∏–ª–∏ —á—Ç–æ-—Ç–æ –∏–∑ —Å–∞–º–æ–≥–æ YAML, –µ—Å–ª–∏ —Ç–∞–º –≤–¥—Ä—É–≥ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è.
                # –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—É—Å—Ç—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π.

            # 4. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –∞–º–±–∏–µ–Ω—Ç–Ω–æ–≥–æ —Ñ—É—Ç–µ—Ä–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
            ambient_footer_placeholder_data = {
                "players_in_location": 0,
            }

            # 5. –§–æ—Ä–º–∏—Ä—É–µ–º DTO –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–ª–æ—è
            unified_display_type = location_details.get("specific_category", "POI") # –ò—Å–ø–æ–ª—å–∑—É–µ–º specific_category –¥–ª—è unified_display_type, —Ç.–∫. presentation.unified_display_type —É–¥–∞–ª–µ–Ω. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –¥—Ä—É–≥–æ–µ –ø–æ–ª–µ, —É—Ç–æ—á–Ω–∏—Ç–µ.
            # –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–ª–µ unified_display_type –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ description, –µ–≥–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–Ω–µ—Å—Ç–∏ –≤ YAML –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
            # –∏–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ specific_category, –∫–∞–∫ —è —Å–¥–µ–ª–∞–ª –∑–¥–µ—Å—å.
            
            # image_url —Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç None, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª–µ presentation —É–¥–∞–ª–µ–Ω–æ
            image_url = None 

            navigation_data_dto = NavigationDisplayDataDTO(
                location_name=location_name,
                location_description=final_location_description, # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
                unified_display_type=unified_display_type,
                current_location_id=current_location_id,
                exits=exits_data,
                image_url=image_url, # image_url —Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ None
                location_fields_data=location_fields,
                ambient_footer_data=ambient_footer_placeholder_data
            )
            self.logger.debug(f"ShowNavigationHandler —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª DTO –¥–ª—è {user.name}.")
            return navigation_data_dto

        except ValueError as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}: {e}")
            raise
        except Exception as e:
            self.logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ ShowNavigationHandler –¥–ª—è {user.name}: {e}", exc_info=True)
            raise