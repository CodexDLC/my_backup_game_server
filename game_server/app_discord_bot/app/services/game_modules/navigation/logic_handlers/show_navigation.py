# game_server/app_discord_bot/app/services/navigation/logic_handlers/show_navigation.py

import inject
import discord
import logging
from typing import Dict, Any, List # –î–æ–±–∞–≤–ª–µ–Ω List


from game_server.app_discord_bot.app.services.game_modules.navigation.dtos import NavigationDisplayDataDTO
from game_server.app_discord_bot.app.services.utils.navigation_helper import NavigationHelper

class ShowNavigationHandler:
    """
    –õ–æ–≥–∏—á–µ—Å–∫–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã 'show_navigation'.
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏ –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∏—Ö –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏.
    """
    @inject.autoparams()
    def __init__(self, navigation_helper: NavigationHelper, logger: logging.Logger):
        self.navigation_helper = navigation_helper
        self.logger = logger
        self.logger.info(f"‚úÖ {self.__class__.__name__} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    async def execute(self, command_str: str, interaction: discord.Interaction) -> NavigationDisplayDataDTO:
        user = interaction.user
        self.logger.debug(f"–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è ShowNavigationHandler –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name} —Å –∫–æ–º–∞–Ω–¥–æ–π: {command_str}")

        try:
            # 1. –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é —Ö–µ–ª–ø–µ—Ä–∞
            location_details: Dict[str, Any] = await self.navigation_helper.get_current_location_details_for_user(user)

            # 2. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª–µ–π —ç–º–±–µ–¥–∞ (Fields)
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã—Ö–æ–¥–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Fields
            location_fields: List[Dict[str, Any]] = []
            exits_data = location_details.get("exits", []) 

            if exits_data:
                # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –ø–æ–ª—è —Å –≤—ã—Ö–æ–¥–∞–º–∏
                location_fields.append({
                    "name": "üó∫Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—É—Ç–∏:",
                    "value": "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–π—Ç–∏:",
                    "inline": False # –û—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—É—Ç–µ–π
                })
                # –ö–∞–∂–¥–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
                for i, exit_info in enumerate(exits_data):
                    label = exit_info.get("label", f"–ü—É—Ç—å {i+1}")
                    target_id = exit_info.get("target_location_id", "???")
                    location_fields.append({
                        "name": f"‚û° {label}", # –ò–º—è –ø–æ–ª—è
                        "value": f"(ID: {target_id})", # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, ID –ª–æ–∫–∞—Ü–∏–∏
                        "inline": True # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∏—Ö –∏–Ω–ª–∞–π–Ω
                    })
            else:
                location_fields.append({
                    "name": "üö´ –ü—É—Ç–µ–π –Ω–µ—Ç",
                    "value": "–ò–∑ —ç—Ç–æ–π –ª–æ–∫–∞—Ü–∏–∏ –Ω–µ—Ç —è–≤–Ω—ã—Ö –≤—ã—Ö–æ–¥–æ–≤.",
                    "inline": False
                })

            # 3. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –∞–º–±–∏–µ–Ω—Ç–Ω–æ–≥–æ —Ñ—É—Ç–µ—Ä–∞
            ambient_footer_placeholder_data = {
                "players_in_location": 0, # –î–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                # "npcs_in_location": 0, # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –∑–∞–≥–ª—É—à–∫–∏
            }

            # 4. –§–æ—Ä–º–∏—Ä—É–µ–º DTO –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–ª–æ—è
            location_name = location_details.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è")
            location_description = location_details.get("description", "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
            unified_display_type = location_details.get("unified_display_type", "EXTERNAL_LOCATION")
            current_location_id = location_details.get("location_id", "")
            image_url = location_details.get("presentation", {}).get("image_url")


            navigation_data_dto = NavigationDisplayDataDTO(
                location_name=location_name,
                location_description=location_description,
                unified_display_type=unified_display_type,
                current_location_id=current_location_id,
                exits=exits_data, # –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ exits, –æ–Ω–∏ –Ω—É–∂–Ω—ã View –¥–ª—è –∫–Ω–æ–ø–æ–∫
                image_url=image_url,
                location_fields_data=location_fields, # –î–∞–Ω–Ω—ã–µ –¥–ª—è Fields
                ambient_footer_data=ambient_footer_placeholder_data # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ—É—Ç–µ—Ä–∞
            )
            self.logger.debug(f"ShowNavigationHandler —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª DTO –¥–ª—è {user.name}.")
            return navigation_data_dto

        except ValueError as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}: {e}")
            raise
        except Exception as e:
            self.logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ ShowNavigationHandler –¥–ª—è {user.name}: {e}", exc_info=True)
            raise