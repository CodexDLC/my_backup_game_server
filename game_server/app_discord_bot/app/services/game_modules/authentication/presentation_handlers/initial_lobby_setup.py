import inject
import discord
import logging
import json
import uuid # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º uuid –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID

from discord.ext import commands
from typing import Union

from game_server.app_discord_bot.app.constant.roles_blueprint import OFFLINE_ROLE, ONLINE_ROLE
from game_server.app_discord_bot.app.services.utils.role_finder import RoleFinder
from game_server.app_discord_bot.app.ui.views.authentication.character_selection_view import CharacterSelectionView, NoCharactersView
from game_server.app_discord_bot.app.ui.views.authentication.lobby_view import LobbyView
from game_server.app_discord_bot.core.contracts.handler_response_dto import InitialLobbySetupDTO
from game_server.app_discord_bot.storage.cache.constant.constant_key import RedisKeys
from game_server.app_discord_bot.storage.cache.interfaces.account_data_manager_interface import IAccountDataManager
from game_server.app_discord_bot.app.services.utils.interaction_response_manager import InteractionResponseManager


class InitialLobbySetupPresenter:
    """
    –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ª–æ–±–±–∏.
    """
    @inject.autoparams()
    def __init__(
        self,
        bot: commands.Bot,
        account_data_manager: IAccountDataManager,
        role_finder: RoleFinder,
        interaction_response_manager: InteractionResponseManager,
        logger: logging.Logger,
    ):
        self.bot = bot
        self.account_data_manager = account_data_manager
        self.role_finder = role_finder
        self.interaction_response_manager = interaction_response_manager
        self.logger = logger

    async def execute(self, response_dto: InitialLobbySetupDTO, interaction: discord.Interaction, helpers, response_message_object: discord.Message | None = None):
        user = interaction.user
        guild = interaction.guild

        self.logger.debug(f"DEBUG: InitialLobbySetupPresenter.execute –≤—ã–∑–≤–∞–Ω –¥–ª—è {user.name}.")
        self.logger.debug(f"DEBUG: response_dto.characters —Å–æ–¥–µ—Ä–∂–∏—Ç {len(response_dto.characters) if response_dto.characters else 0} –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.")
        if response_dto.characters:
            self.logger.debug(f"DEBUG: –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –≤ response_dto: {[char.name for char in response_dto.characters]}")
        else:
            self.logger.debug("DEBUG: response_dto.characters –ø—É—Å—Ç.")

        try:
            channels_data = await self.account_data_manager.get_account_field(guild.id, user.id, RedisKeys.FIELD_DISCORD_CHANNELS)
            interface_channel_id = int(channels_data["interface_channel_id"])
            dashboard_channel_id = int(channels_data["dashboard_channel_id"])

            interface_channel = guild.get_channel(interface_channel_id) or await self.bot.fetch_channel(interface_channel_id)
            dashboard_channel = guild.get_channel(dashboard_channel_id) or await self.bot.fetch_channel(dashboard_channel_id)

            message_ids_data = await self.account_data_manager.get_account_field(guild.id, user.id, RedisKeys.FIELD_MESSAGES)

            # 1. –ú–µ–Ω—è–µ–º —Ä–æ–ª–∏ (–ü–ï–†–ï–ú–ï–©–ï–ù–û –°–Æ–î–ê)
            # –≠—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã —Ä–æ–ª–∏ –±—ã–ª–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã
            # –∫ –º–æ–º–µ–Ω—Ç—É, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
            roles_data = await self.account_data_manager.get_account_field(guild.id, user.id, RedisKeys.FIELD_DISCORD_ROLES)
            personal_role_id = int(roles_data["personal_role_id"])
            offline_role = await self.role_finder.get_system_role(guild, OFFLINE_ROLE, shard_type="game")
            online_role = await self.role_finder.get_system_role(guild, ONLINE_ROLE, shard_type="game")
            personal_role = guild.get_role(personal_role_id)
            if offline_role: await user.remove_roles(offline_role, reason="–í—Ö–æ–¥ –Ω–∞ —à–∞—Ä–¥")
            if online_role and personal_role: await user.add_roles(online_role, personal_role, reason="–í—Ö–æ–¥ –Ω–∞ —à–∞—Ä–¥")
            self.logger.info(f"–†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name} –æ–±–Ω–æ–≤–ª–µ–Ω—ã: —É–¥–∞–ª–µ–Ω–∞ {OFFLINE_ROLE}, –¥–æ–±–∞–≤–ª–µ–Ω—ã {ONLINE_ROLE}, {personal_role.name}.")

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
            unique_message_id = str(uuid.uuid4())[:8]
            
            # 2. –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º/—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –≤–µ—Ä—Ö–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ü–∞–Ω–µ–ª—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)
            view_for_top_msg = LobbyView(author=user)
            top_embed = view_for_top_msg.create_embed()
            
            top_msg_id = message_ids_data.get("top_id") if message_ids_data else None
            top_msg = None
            if top_msg_id:
                try:
                    top_msg = await interface_channel.fetch_message(int(top_msg_id))
                    # –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    await top_msg.edit(content=f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {unique_message_id}", embed=top_embed, view=view_for_top_msg)
                    self.logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ TOP (ID: {top_msg.id}) —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ.")
                except discord.NotFound:
                    top_msg = await interface_channel.send(content=f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {unique_message_id}", embed=top_embed, view=view_for_top_msg)
                    self.logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ TOP (ID: {top_msg.id}) —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (—Å—Ç–∞—Ä–æ–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ).")
                except Exception as e:
                    self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏/–æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ TOP (ID: {top_msg_id}): {e}", exc_info=True)
                    top_msg = await interface_channel.send(content=f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {unique_message_id}", embed=top_embed, view=view_for_top_msg)
                    self.logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ TOP (ID: {top_msg.id}) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
            else:
                top_msg = await interface_channel.send(content=f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {unique_message_id}", embed=top_embed, view=view_for_top_msg)
                self.logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ TOP (ID: {top_msg.id}) —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–Ω–æ–≤–æ–µ).")
                
            # 3. –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º/—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –Ω–∏–∂–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–û–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
            footer_view: Union[CharacterSelectionView, NoCharactersView]
            if response_dto.characters:
                self.logger.debug("DEBUG: –°–æ–∑–¥–∞–µ—Ç—Å—è CharacterSelectionView.")
                footer_view = CharacterSelectionView(author=user, characters=response_dto.characters)
            else:
                self.logger.debug("DEBUG: –°–æ–∑–¥–∞–µ—Ç—Å—è NoCharactersView.")
                footer_view = NoCharactersView(author=user)
            footer_embed = footer_view.create_embed()

            footer_msg_id = message_ids_data.get("footer_id") if message_ids_data else None
            footer_msg = None
            
            self.logger.debug(f"DEBUG: –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å/–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∏–∂–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å view —Ç–∏–ø–∞ {type(footer_view).__name__}.")
            if footer_msg_id:
                try:
                    footer_msg = await interface_channel.fetch_message(int(footer_msg_id))
                    await footer_msg.delete() # –ò–ó–ú–ï–ù–ï–ù–û: –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    self.logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ FOOTER (ID: {footer_msg.id}) —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.") # –ù–û–í–´–ô –õ–û–ì
                except discord.NotFound:
                    self.logger.debug(f"–°—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ FOOTER (ID: {footer_msg_id}) –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.") # –ù–û–í–´–ô –õ–û–ì
                except Exception as e:
                    self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ FOOTER (ID: {footer_msg_id}): {e}", exc_info=True)
            
            # –í—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä–æ–≥–æ
            # –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            footer_msg = await interface_channel.send(content=f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {unique_message_id}", embed=footer_embed, view=footer_view)
            self.logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ FOOTER (ID: {footer_msg.id}) —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–Ω–æ–≤–æ–µ).") # –ò–ó–ú–ï–ù–ï–ù–û –Ω–∞ DEBUG

            # 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Redis
            await self.account_data_manager.save_account_field(
                shard_id=guild.id, discord_user_id=user.id,
                field_name=RedisKeys.FIELD_MESSAGES,
                data={"top_id": str(top_msg.id), "footer_id": str(footer_msg.id)}
            )
            self.logger.info(f"ID —Å–æ–æ–±—â–µ–Ω–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è {user.name}: top_id={top_msg.id}, footer_id={footer_msg.id}.")

            # 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ç–æ–≥ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª –¥–∞—à–±–æ—Ä–¥–∞
            if isinstance(dashboard_channel, discord.TextChannel):
                dashboard_embed = discord.Embed(
                    title="üöÄ –í—Ö–æ–¥ –≤ –ª–æ–±–±–∏",
                    description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} —É—Å–ø–µ—à–Ω–æ –≤–æ—à–µ–ª –≤ –∏–≥—Ä—É –∏ –µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≥–æ—Ç–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ {interface_channel.mention}.",
                    color=discord.Color.green()
                )
                await dashboard_channel.send(embed=dashboard_embed)
                self.logger.info(f"–û—Ç—á–µ—Ç –æ –≤—Ö–æ–¥–µ –≤ –ª–æ–±–±–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –¥–∞—à–±–æ—Ä–¥ –¥–ª—è {user.name} (–ö–∞–Ω–∞–ª: {dashboard_channel.name}).")
            else:
                self.logger.warning(f"–ö–∞–Ω–∞–ª –¥–∞—à–±–æ—Ä–¥–∞ –¥–ª—è {user.name} (ID: {dashboard_channel_id}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–≤—ã–º –∫–∞–Ω–∞–ª–æ–º –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

            # 6. –£–¥–∞–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä (–±—ã–≤—à–µ–µ 7)
            # –§–∏–Ω–∞–ª—å–Ω–æ–µ —ç—Ñ–µ–º–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—Ö–æ–¥–µ —É–¥–∞–ª–µ–Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.
            if response_message_object:
                await self.interaction_response_manager.complete_thinking_message(response_message_object)
            self.logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —É–¥–∞–ª–µ–Ω–æ –¥–ª—è {user.name}.")

        except Exception as e:
            self.logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ InitialLobbySetupPresenter –¥–ª—è {user.name}: {e}", exc_info=True)
            await self.interaction_response_manager.send_personal_notification_message(
                interaction,
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ª–æ–±–±–∏: {e}",
                delete_after=None
            )
            if response_message_object:
                await self.interaction_response_manager.complete_thinking_message(response_message_object, delete_delay=0)
