# game_server/app_discord_bot/app/services/admin/article_management_service.py

from typing import Dict, Any, Optional, List
import discord
from discord import TextChannel, utils
import uuid
import logging # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏
import inject # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è inject.autoparams

from game_server.app_discord_bot.app.services.utils.request_helper import RequestHelper

from game_server.app_discord_bot.config.assets.data.channels_config import CHANNELS_CONFIG
from game_server.app_discord_bot.app.services.admin.base_discord_operations import BaseDiscordOperations
from game_server.contracts.api_models.discord.entity_management_requests import UnifiedEntitySyncRequest
from game_server.contracts.shared_models.base_responses import ResponseStatus
from game_server.contracts.shared_models.websocket_base_models import WebSocketMessage, WebSocketResponsePayload


class ArticleManagementService:
    """
    –°–µ—Ä–≤–∏—Å–Ω—ã–π —Å–ª–æ–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞–º–∏-—Å—Ç–∞—Ç—å—è–º–∏.
    –°–æ–∑–¥–∞–µ—Ç –∫–∞–Ω–∞–ª –≤ Discord –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –Ω–∞ –±—ç–∫–µ–Ω–¥ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏.
    """
    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: bot —Ç–µ–ø–µ—Ä—å –ø—Ä—è–º–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç, –Ω–µ –∏–Ω–∂–µ–∫—Ç–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ autoparams
    @inject.autoparams()
    def __init__(
        self,
        bot: discord.Client, # <-- bot —Ç–µ–ø–µ—Ä—å —Ç–∞–∫–∞—è –∂–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, –∫–∞–∫ –∏ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ
        base_ops: BaseDiscordOperations,
        request_helper: RequestHelper,
        logger: logging.Logger
    ):
        self.bot = bot
        self.base_ops = base_ops
        self.channels_config = CHANNELS_CONFIG
        self.request_helper = request_helper
        self.logger = logger
        self.bot = bot # <--- –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞


    async def add_article_channel(self, guild_id: int, channel_name: str) -> Dict[str, Any]:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª-—Å—Ç–∞—Ç—å—é –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –µ–≥–æ —Å –±—ç–∫–µ–Ω–¥–æ–º.
        """
        guild = await self.base_ops.get_guild_by_id(guild_id)
        if not guild:
            raise ValueError(f"Discord server with ID {guild_id} not found.")
        
        knowledge_category_name = next(
            (cat_name for cat_name in self.channels_config.get("hub_layout", {})
             if "–ë–ò–ë–õ–ò–û–¢–ï–ö–ê –ó–ù–ê–ù–ò–ô" in cat_name),
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: [ –ë–ò–ë–õ–ò–û–¢–ï–ö–ê –ó–ù–ê–ù–ò–ô ] üìö"
        )

        self.logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª '{channel_name}' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '{knowledge_category_name}'.")
        parent_category = utils.get(guild.categories, name=knowledge_category_name)
        if not parent_category:
            raise ValueError(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{knowledge_category_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")

        new_channel_obj: Optional[TextChannel] = None
        try:
            new_channel_obj = await self.base_ops.create_discord_channel(
                guild, channel_name, "text", parent_category=parent_category,
                permissions="read_only", description="–°—Ç–∞—Ç—å—è –∏–∑ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ó–Ω–∞–Ω–∏–π."
            )
            if not new_channel_obj:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –≤ Discord, –æ–±—ä–µ–∫—Ç –Ω–µ –±—ã–ª –≤–æ–∑–≤—Ä–∞—â–µ–Ω.")
            self.logger.success(f"–ö–∞–Ω–∞–ª '{channel_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ Discord (ID: {new_channel_obj.id}).")
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ '{channel_name}' –≤ Discord: {e}", exc_info=True)
            raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –≤ Discord: {e}")

        entity_data = {
            "discord_id": new_channel_obj.id,
            "entity_type": "text_channel",
            "name": new_channel_obj.name,
            "parent_id": parent_category.id,
            "permissions": "read_only",
            "description": "–°—Ç–∞—Ç—å—è –∏–∑ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ó–Ω–∞–Ω–∏–π.",
            "access_code": None
        }
        
        self.logger.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ '{channel_name}' —Å –±—ç–∫–µ–Ω–¥–æ–º...")
        
        discord_context = {
            "user_id": self.bot.user.id,
            "guild_id": guild_id,
            "channel_id": new_channel_obj.id,
            "command_source": "add_article_channel"
        }
        try:
            raw_ws_dict, _ = await self.request_helper.send_and_await_response(
                api_method=self.request_helper.http_client_gateway.discord.sync_entities,
                request_model_type=UnifiedEntitySyncRequest,
                request_payload_data={
                    "guild_id": guild_id,
                    "entities_data": [entity_data]
                },
                discord_context=discord_context
            )
            
            full_message = WebSocketMessage(**raw_ws_dict)
            response_payload = WebSocketResponsePayload(**full_message.payload)

            if response_payload.status == ResponseStatus.SUCCESS:
                self.logger.success(f"–ö–∞–Ω–∞–ª '{channel_name}' —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –±—ç–∫–µ–Ω–¥–æ–º.")
                return {"status": "success", "message": "–ö–∞–Ω–∞–ª-—Å—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω."}
            else:
                error_msg = response_payload.error.message if response_payload.error else "–ë—ç–∫–µ–Ω–¥ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏."
                raise RuntimeError(error_msg)

        except Exception as e:
            self.logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–∞ '{channel_name}': {e}", exc_info=True)
            self.logger.warning(f"–û—Ç–∫–∞—Ç: —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ '{channel_name}' –∏–∑ Discord –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏.")
            await self.base_ops.delete_discord_entity(new_channel_obj)
            raise RuntimeError(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–Ω–∞–ª –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")