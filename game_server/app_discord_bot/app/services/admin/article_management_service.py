# app/services/admin/article_management_service.py
from typing import Dict, Any, Optional, List
import discord
from discord import TextChannel, utils
import uuid # –ù–û–í–´–ô –ò–ú–ü–û–†–¢: uuid, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ request_helper

from game_server.app_discord_bot.app.services.utils.request_helper import RequestHelper
from game_server.common_contracts.api_models.discord_api import UnifiedEntitySyncRequest
from game_server.config.logging.logging_setup import app_logger as logger
from game_server.app_discord_bot.config.assets.data.channels_config import CHANNELS_CONFIG

from .base_discord_operations import BaseDiscordOperations


class ArticleManagementService:
    """
    –°–µ—Ä–≤–∏—Å–Ω—ã–π —Å–ª–æ–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞–º–∏-—Å—Ç–∞—Ç—å—è–º–∏.
    –°–æ–∑–¥–∞–µ—Ç –∫–∞–Ω–∞–ª –≤ Discord –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –Ω–∞ –±—ç–∫–µ–Ω–¥ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏.
    """
    def __init__(self, bot: discord.Client):
        self.bot = bot
        self.base_ops = BaseDiscordOperations(bot)
        self.channels_config = CHANNELS_CONFIG
        # –ù–û–í–û–ï: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RequestHelper
        if not hasattr(bot, 'request_helper'):
            logger.error("RequestHelper –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ –æ–±—ä–µ–∫—Ç–µ –±–æ—Ç–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ main.py.")
            raise RuntimeError("RequestHelper –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
        self.request_helper: RequestHelper = bot.request_helper


    async def add_article_channel(self, guild_id: int, channel_name: str) -> Dict[str, Any]:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª-—Å—Ç–∞—Ç—å—é –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –µ–≥–æ —Å –±—ç–∫–µ–Ω–¥–æ–º.
        """
        guild = await self.base_ops.get_guild_by_id(guild_id)
        if not guild:
            raise ValueError(f"Discord —Å–µ—Ä–≤–µ—Ä —Å ID {guild_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        
        # –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ó–Ω–∞–Ω–∏–π"
        knowledge_category_name = next(
            (cat_name for cat_name in self.channels_config.get("hub_layout", {})
             # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–ù–¢–ê–ö–°–ò–ß–ï–°–ö–û–ô –û–®–ò–ë–ö–ò –ó–î–ï–°–¨
             if "–ë–ò–ë–õ–ò–û–¢–ï–ö–ê –ó–ù–ê–ù–ò–ô" in cat_name), # –£–¥–∞–ª–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–µ–∫—Å—Ç "–ò–ó–ú–ï–ù–ï–ù–û: –Ω–∞ '–ë–ò–ë–õ–ò–û–¢–ï–ö–ê –ó–ù–ê–ù–ò–ô' - 'knowledge_category_name'"
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: [ –ë–ò–ë–õ–ò–û–¢–ï–ö–ê –ó–ù–ê–ù–ò–ô ] üìö" # –ò–º—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        )

        logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª '{channel_name}' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '{knowledge_category_name}'.")
        parent_category = utils.get(guild.categories, name=knowledge_category_name)
        if not parent_category:
            raise ValueError(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{knowledge_category_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")

        # 2. –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –≤ Discord (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
        new_channel_obj: Optional[TextChannel] = None
        try:
            new_channel_obj = await self.base_ops.create_discord_channel(
                guild, channel_name, "text", parent_category=parent_category,
                permissions="read_only", description="–°—Ç–∞—Ç—å—è –∏–∑ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ó–Ω–∞–Ω–∏–π."
            )
            if not new_channel_obj:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –≤ Discord, –æ–±—ä–µ–∫—Ç –Ω–µ –±—ã–ª –≤–æ–∑–≤—Ä–∞—â–µ–Ω.")
            logger.success(f"–ö–∞–Ω–∞–ª '{channel_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ Discord (ID: {new_channel_obj.id}).")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ '{channel_name}' –≤ Discord: {e}", exc_info=True)
            raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –≤ Discord: {e}")

        # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –±—ç–∫–µ–Ω–¥ —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π API —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        entity_data = {
            "discord_id": new_channel_obj.id,
            "entity_type": "text_channel",
            "name": new_channel_obj.name,
            "parent_id": parent_category.id,
            "permissions": "read_only",
            "description": "–°—Ç–∞—Ç—å—è –∏–∑ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ó–Ω–∞–Ω–∏–π.",
            "access_code": None
        }
        
        logger.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ '{channel_name}' —Å –±—ç–∫–µ–Ω–¥–æ–º...")
        
        # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º RequestHelper –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        discord_context = {
            "user_id": self.bot.user.id, # ID –±–æ—Ç–∞
            "guild_id": guild_id,
            "channel_id": new_channel_obj.id, # ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            "command_source": "add_article_channel"
        }
        try:
            response, retrieved_context = await self.request_helper.send_and_await_response(
                api_call=self.bot.http_manager.discord.sync_entities,
                request_model_type=UnifiedEntitySyncRequest,
                request_payload_data={
                    "guild_id": guild_id,
                    "entities_data": [entity_data] # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                },
                discord_context=discord_context
            )

            if response and response.get("success"):
                logger.success(f"–ö–∞–Ω–∞–ª '{channel_name}' —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –±—ç–∫–µ–Ω–¥–æ–º.")
                return {"status": "success", "message": "–ö–∞–Ω–∞–ª-—Å—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω."}
            else:
                error_msg = response.get('message') if response else "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"
                logger.error(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π, –∫–æ–Ω—Ç–µ–∫—Å—Ç: {retrieved_context}")
                raise RuntimeError(f"–ë—ç–∫–µ–Ω–¥ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {error_msg}")

        except Exception as e:
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–∞ '{channel_name}': {e}", exc_info=True)
            # –û—Ç–∫–∞—Ç: —É–¥–∞–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª, –µ—Å–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å
            logger.warning(f"–û—Ç–∫–∞—Ç: —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ '{channel_name}' –∏–∑ Discord –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏.")
            await self.base_ops.delete_discord_entity(new_channel_obj)
            raise RuntimeError(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–Ω–∞–ª –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")