# game_server/app_discord_bot/main.py
import sys
import asyncio

from typing import Optional
from discord.ext import commands
import discord
from dotenv import load_dotenv

# üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –±–æ—Ç–∞

from game_server.app_discord_bot.core.di_container import initialize_bot_di_container, shutdown_bot_di_container

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–≥–æ–≤ –∏ —Å–æ–±—ã—Ç–∏–π
from game_server.app_discord_bot.app.startup.event_manager import EventManager
from game_server.app_discord_bot.app.startup.cog_manager import CommandsManager # –≠—Ç–æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –Ω–∞—à Cog

# –ò–º–ø–æ—Ä—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞
from game_server.app_discord_bot.config.discord_settings import (
    BOT_PREFIX, DISCORD_TOKEN,
)

# –ò–º–ø–æ—Ä—Ç—ã –∫–ª–∞—Å—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏–Ω–∂–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ GameBot –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ setup_hook
# üî• –í–ê–ñ–ù–û: –≠—Ç–∏ –∏–º–ø–æ—Ä—Ç—ã –Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ –∏ –¥–ª—è —è–≤–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ inject.instance()
# –≤ setup_hook. –°–∞–º–∏ –∫–ª–∞—Å—Å—ã –±—É–¥—É—Ç –ø—Ä–∏–≤—è–∑–∞–Ω—ã –≤ di_modules.
from game_server.app_discord_bot.app.startup.ui_initializer.ui_initializer import UIInitializer
from game_server.app_discord_bot.transport.http_client.http_manager import HTTPManager
from game_server.app_discord_bot.transport.websocket_client.ws_manager import WebSocketManager
from game_server.app_discord_bot.transport.pending_requests import PendingRequestsManager
from game_server.app_discord_bot.storage.cache.bot_cache_initializer import BotCache
from game_server.app_discord_bot.app.services.utils.request_helper import RequestHelper
from game_server.app_discord_bot.app.services.utils.cache_sync_manager import CacheSyncManager


from game_server.config.logging.logging_setup import app_logger as logger
import inject # üî• –î–û–ë–ê–í–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º inject


class GameBot(commands.Bot):
    # –û–±—ä—è–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–ª—è –ø–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ DI
    http_manager: Optional[HTTPManager]
    ws_manager: Optional[WebSocketManager]
    request_helper: Optional[RequestHelper]
    pending_requests_transport_manager: Optional[PendingRequestsManager]
    cache_manager: Optional[BotCache]
    sync_manager: Optional[CacheSyncManager]
    ui_initializer: Optional[UIInitializer] # üî• –ù–û–í–û–ï: –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –¥–ª—è UIInitializer

    def __init__(self):
        intents = discord.Intents.default()
        intents.members = True          # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö —Å–µ—Ä–≤–µ—Ä–∞
        intents.message_content = True  # –î–ª—è —á—Ç–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        intents.guilds = True           # –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–∏–ª—å–¥–∏—è—Ö (—Å–µ—Ä–≤–µ—Ä–∞—Ö)
        
        super().__init__(command_prefix=BOT_PREFIX, intents=intents)
        logger.info(f"–ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º: {BOT_PREFIX}")

    async def setup_hook(self):
        """
        setup_hook –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞ –±–æ—Ç–∞, –Ω–æ –¥–æ on_ready.
        –ò–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.
        """
        logger.info("--- –ó–∞–ø—É—Å–∫ setup_hook ---")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –ø–µ—Ä–µ–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ (self) –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏
        # –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –¥–æ –ª—é–±–æ–≥–æ inject.instance(), —á—Ç–æ–±—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ã–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        await initialize_bot_di_container(self)
        logger.debug("DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –∏ —Å–µ—Ä–≤–∏—Å—ã —á–µ—Ä–µ–∑ inject
        self.http_manager = inject.instance(HTTPManager)
        self.pending_requests_transport_manager = inject.instance(PendingRequestsManager)
        self.cache_manager = inject.instance(BotCache)
        self.request_helper = inject.instance(RequestHelper)
        self.sync_manager = inject.instance(CacheSyncManager)
        self.ws_manager = inject.instance(WebSocketManager) 
        self.ui_initializer = inject.instance(UIInitializer) # üî• –ù–û–í–û–ï: –ü–æ–ª—É—á–∞–µ–º UIInitializer

        logger.info("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –∏ —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ DI.")
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π Discord (—á–µ—Ä–µ–∑ event_manager.py)
        logger.info("–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π Discord...")
        # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä EventManager —á–µ—Ä–µ–∑ DI –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è
        event_manager = inject.instance(EventManager)
        event_manager.register_events()
        logger.info("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–≥–æ–≤ (–∫–æ–º–∞–Ω–¥) (—á–µ—Ä–µ–∑ cog_manager.py)
        # CommandsManager, –∫–∞–∫ —è –ø–æ–Ω—è–ª –∏–∑ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞, —É–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫–æ–π –∫–æ–≥–æ–≤.
        # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ CommandsManager —Å–ø–æ—Å–æ–±–µ–Ω –∑–∞–≥—Ä—É–∂–∞—Ç—å –∫–æ–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç inject.autoparams().
        logger.info("–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–≥–æ–≤...")
        cog_manager = CommandsManager(self) # –ü–µ—Ä–µ–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ CommandsManager
        await cog_manager.load_cogs() # –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –∑–∞–≥—Ä—É–∑–∏—Ç—å, –≤ —Ç–æ–º —á–∏—Å–ª–µ, RegistrationCog
        logger.info("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

        logger.info("--- setup_hook –∑–∞–≤–µ—Ä—à–µ–Ω ---")
        
    async def on_ready(self):
        """
        –í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –±–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Discord.
        –ó–¥–µ—Å—å self.user –¥–æ—Å—Ç—É–ø–µ–Ω.
        """
        logger.info(f"‚úÖ –í–æ—à–µ–ª –∫–∞–∫ {self.user.name} (ID: {self.user.id})") # –¢–µ–ø–µ—Ä—å —ç—Ç–æ—Ç –ª–æ–≥ –±—É–¥–µ—Ç –ø–µ—Ä–≤—ã–º
            
        logger.info("--- on_ready: –ó–ê–ü–£–°–ö WS MANAGER ---")
        
        if hasattr(self, 'ws_manager') and self.ws_manager:
            logger.debug("–í—ã–∑–æ–≤ ws_manager.start()...")
            
            try:
                if asyncio.iscoroutinefunction(self.ws_manager.start):
                    await self.ws_manager.start()
                else:
                    self.ws_manager.start()
                
                logger.info("‚úÖ WebSocket –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.")
            except Exception as e:
                logger.critical(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ü–†–ò –ó–ê–ü–£–°–ö–ï WS MANAGER –í on_ready: {e}", exc_info=True)
                import traceback
                traceback.print_exc()
        else:
            logger.critical("‚ùå WebSocketManager –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ setup_hook!")
            
        logger.debug("--- on_ready: –ë–õ–û–ö –ó–ê–ü–£–°–ö–ê WS MANAGER –ó–ê–í–ï–†–®–ï–ù ---")
        
        # üî• –ù–û–í–û–ï: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö View –∑–¥–µ—Å—å, –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –±–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤.
        # –≠—Ç–æ –≤–∞–∂–Ω–æ, —Ç–∞–∫ –∫–∞–∫ bot.add_view() –ª—É—á—à–µ –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.
        if self.ui_initializer:
            await self.ui_initializer.initialize_persistent_views()
        else:
            logger.critical("‚ùå UIInitializer –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ setup_hook!")
            
    async def close(self):
        logger.info("–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã...")
        
        if self.ws_manager:
            await self.ws_manager.disconnect()
            logger.info("üîó WebSocket –º–µ–Ω–µ–¥–∂–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        
        await shutdown_bot_di_container()
        logger.info("üîó Redis –∫–ª–∏–µ–Ω—Ç –∏ –¥—Ä—É–≥–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞–∫—Ä—ã—Ç—ã.")
        
        await super().close()
        logger.info("üîö –†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


async def main():
    load_dotenv() 
    bot = GameBot()
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await bot.start(DISCORD_TOKEN)
    except discord.LoginFailure:
        logger.critical("üîë –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω Discord! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DISCORD_TOKEN.")
        sys.exit(1)
    except Exception as e:
        logger.critical(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}", exc_info=True)
        sys.exit(1)
    finally:
        pass


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é (KeyboardInterrupt).")
    except Exception as e:
        logger.critical(f"üí• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –±–ª–æ–∫–µ –∑–∞–ø—É—Å–∫–∞: {e}", exc_info=True)
        sys.exit(1)