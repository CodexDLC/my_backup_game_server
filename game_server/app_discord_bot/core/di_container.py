# game_server/app_discord_bot/core/di_container.py

import aiohttp
import discord
import inject
import logging
from typing import Dict, Any, Type, Optional

# –ò–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –ø—Ä–∏–≤—è–∑–æ–∫ –¥–ª—è –±–æ—Ç–∞
from game_server.app_discord_bot.app.services.utils.name_formatter import NameFormatter
from game_server.app_discord_bot.core.di_modules.bot_cache_bindings import configure_bot_cache
from game_server.app_discord_bot.core.di_modules.bot_orchestrator_bindings import configure_bot_orchestrators
from game_server.app_discord_bot.core.di_modules.bot_transport_bindings import configure_bot_transport
from game_server.app_discord_bot.core.di_modules.bot_service_bindings import configure_bot_services

from game_server.app_discord_bot.config import discord_settings
from game_server.app_discord_bot.storage.cache.discord_redis_client import DiscordRedisClient
from game_server.app_discord_bot.transport.http_client.http_manager import HTTPManager, create_http_manager
from game_server.config.logging.logging_setup import app_logger as global_app_logger

logger = logging.getLogger(__name__)

_async_singletons_instances: Dict[Type | str, Any] = {}

def configure_bot_dependencies(binder, bot_instance: Any):
    """
    –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Discord-–±–æ—Ç–∞.
    """
    logger.info("üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ Discord-–±–æ—Ç–∞...")
    
    binder.bind(logging.Logger, global_app_logger)

    from game_server.app_discord_bot.main import GameBot
    from discord.ext import commands

    binder.bind(GameBot, bot_instance)
    binder.bind(commands.Bot, bot_instance)
    binder.bind(discord.Client, bot_instance)
    
    
    
    # –ü—Ä–∏–≤—è–∑–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Å–∏–Ω–≥–ª—Ç–æ–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
    for singleton_class, instance in _async_singletons_instances.items():
        binder.bind(singleton_class, instance)
     
    # –í—ã–∑—ã–≤–∞–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä—ã, –ø–µ—Ä–µ–¥–∞–≤–∞—è bot_instance —Ç–∞–º, –≥–¥–µ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    configure_bot_cache(binder)
    configure_bot_transport(binder, bot_instance)
    configure_bot_services(binder, bot_instance)
    configure_bot_orchestrators(binder)
    
    logger.info("‚úÖ DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä Discord-–±–æ—Ç–∞ —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω.")

    
async def initialize_bot_di_container(bot_instance: Any):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Å–∏–Ω–≥–ª—Ç–æ–Ω—ã.
    """
    logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ Discord-–±–æ—Ç–∞...")
    
    # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DiscordRedisClient
    redis_client = DiscordRedisClient(
        redis_url=discord_settings.REDIS_BOT_LOCAL_URL,
        max_connections=discord_settings.REDIS_BOT_LOCAL_POOL_SIZE,
        redis_password=discord_settings.REDIS_BOT_LOCAL_PASSWORD
    )
    _async_singletons_instances[DiscordRedisClient] = redis_client
    logger.info("‚úÖ DiscordRedisClient —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTTPManager
    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTTPManager...")
    session = aiohttp.ClientSession(
        headers={"Content-Type": "application/json", "Accept": "application/json"}
    )
    http_manager = await create_http_manager(
        session, 
        discord_settings.GAME_SERVER_API, 
        discord_settings.BOT_NAME_FOR_GATEWAY
    )
    setattr(http_manager, '_session_to_close', session)
    _async_singletons_instances[HTTPManager] = http_manager
    logger.info("‚úÖ HTTPManager —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
    
    # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è NameFormatter
    from game_server.app_discord_bot.config.assets.data.channels_config import CHANNELS_CONFIG
    name_formatter = NameFormatter(
        logger=global_app_logger,
        emojis_formatting_config=CHANNELS_CONFIG["emojis_formatting"]
    )
    _async_singletons_instances[NameFormatter] = name_formatter
    logger.info("‚úÖ NameFormatter —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è inject
    inject.clear_and_configure(lambda binder: configure_bot_dependencies(binder, bot_instance))
    
    logger.info("‚úÖ DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä Discord-–±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω.")
    logger.info("--- –í—Å–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Å–∏–Ω–≥–ª—Ç–æ–Ω—ã Discord-–±–æ—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. ---")

    
async def shutdown_bot_di_container():
    """
    –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.
    """
    logger.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ Discord-–±–æ—Ç–∞...")
    try:
        redis_client_instance = _async_singletons_instances.get(DiscordRedisClient)
        if redis_client_instance:
            await redis_client_instance.close()
            logger.info("üîó DiscordRedisClient –∑–∞–∫—Ä—ã—Ç.")

        http_manager_instance = _async_singletons_instances.get(HTTPManager)
        if http_manager_instance and hasattr(http_manager_instance, '_session_to_close') and not http_manager_instance._session_to_close.closed:
            await http_manager_instance._session_to_close.close()
            logger.info("üîó HTTPManager —Å–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞.")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: {e}", exc_info=True)
    finally:
        inject.clear()
        _async_singletons_instances.clear()
        logger.info("‚úÖ DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä Discord-–±–æ—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")
