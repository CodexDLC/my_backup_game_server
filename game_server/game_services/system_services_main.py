# game_server/game_services/system_services_main.py

import asyncio
from contextlib import asynccontextmanager
from fastapi import FastAPI
import logging
import inject

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
from game_server.core.di_container import initialize_di_container, shutdown_di_container

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –û–ë–ê –∫–ª–∞—Å—Å–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π
from game_server.game_services.command_center.system_services_command.system_services_cache_listener import CacheRequestCommandListener
from game_server.game_services.command_center.system_services_command.system_services_listener import SystemServicesCommandListener
# ‚úÖ –ù–û–í–´–ô –ò–ú–ü–û–†–¢


logger = logging.getLogger(__name__)


@asynccontextmanager
async def lifespan(app: FastAPI):
    """
    –£–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º —Å–µ—Ä–≤–∏—Å–∞: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ.
    """
    logger.info("--- üöÄ –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ SystemServices ---")
    
    command_listener: SystemServicesCommandListener | None = None
    # ‚úÖ –ù–û–í–ê–Ø –ü–ï–†–ï–ú–ï–ù–ù–ê–Ø –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —Å–ª—É—à–∞—Ç–µ–ª—è
    cache_listener: CacheRequestCommandListener | None = None
    current_logger = logger 
    
    try:
        # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        await initialize_di_container()

        # 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ inject
        command_listener = inject.instance(SystemServicesCommandListener)
        # ‚úÖ –ü–æ–ª—É—á–∞–µ–º –≤—Ç–æ—Ä–æ–≥–æ —Å–ª—É—à–∞—Ç–µ–ª—è
        cache_listener = inject.instance(CacheRequestCommandListener)
        current_logger = inject.instance(logging.Logger)

        # 3. –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
        command_listener.start()
        current_logger.info("‚úÖ –°–ª—É—à–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥ (SystemServicesCommandListener) –∑–∞–ø—É—â–µ–Ω.")
        
        # ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ç–æ—Ä–æ–≥–æ —Å–ª—É—à–∞—Ç–µ–ª—è
        cache_listener.start()
        current_logger.info("‚úÖ –°–ª—É—à–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –∫—ç—à—É (CacheRequestCommandListener) –∑–∞–ø—É—â–µ–Ω.")
        
        yield

    finally:
        # --- SHUTDOWN ---
        current_logger.info("--- üõë –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã ---")
        
        if command_listener:
            await command_listener.stop()
            current_logger.info("üîó SystemServicesCommandListener –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

        # ‚úÖ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ç–æ—Ä–æ–≥–æ —Å–ª—É—à–∞—Ç–µ–ª—è
        if cache_listener:
            await cache_listener.stop()
            current_logger.info("üîó CacheRequestCommandListener –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        
        await shutdown_di_container()
        
        current_logger.info("--- ‚úÖ –°–µ—Ä–≤–∏—Å SystemServices –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ---")


app = FastAPI(
    title="System Services Microservice",
    description="Handles system-level commands and operations.",
    lifespan=lifespan
)