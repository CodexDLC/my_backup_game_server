# game_server/game_services/game_world_state_orchestrator.py

import sys
from contextlib import asynccontextmanager

from fastapi import FastAPI, Response, status, HTTPException

from game_server.config.logging.logging_setup import app_logger as logger

# <<< –ò–ó–ú–ï–ù–ï–ù–û: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –∏ —Å–±–æ—Ä—â–∏–∫ –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
from game_server.core.dependency_aggregator import initialize_all_dependencies, shutdown_all_dependencies
from game_server.core.service_builders import build_game_world_dependencies

# --- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –≥–ª–∞–≤–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä—ã ---
from game_server.Logic.ApplicationLogic.start_orcestrator.coordinator_pre_start.coordinator_pre_start import GeneratorPreStart
from game_server.Logic.ApplicationLogic.start_orcestrator.coordinator_run.coordinator_orchestrator import CoordinatorOrchestrator
from game_server.game_services.command_center.coordinator_command.coordinator_listener import CoordinatorListener
from game_server.game_services.command_center.coordinator_command import coordinator_config

# --- –ò–º–ø–æ—Ä—Ç—ã —Ñ–∞–±—Ä–∏–∫–∏ —Å–µ—Å—Å–∏–π –∏ –¥–≤–∏–∂–æ–∫ –¥–ª—è FastAPI Lifespan ---
from game_server.Logic.InfrastructureLogic.db_instance import AsyncSessionLocal


@asynccontextmanager
async def lifespan_event_handler(app: FastAPI):
    """
    –£–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º —Å–µ—Ä–≤–∏—Å–∞: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ.
    """
    logger.info("üöÄ –ó–ê–ü–£–°–ö –ì–õ–ê–í–ù–û–ì–û –û–†–ö–ï–°–¢–†–ê–¢–û–†–ê –ò–ì–†–û–í–û–ì–û –ú–ò–†–ê...")
    
    runtime_coordinator = None
    
    try:
        # <<< –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–ô
        # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –í–°–ï –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –û–î–ò–ù –†–ê–ó
        await initialize_all_dependencies()

        # 2. –í—ã–∑—ã–≤–∞–µ–º –°–ë–û–†–©–ò–ö, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç –Ω—É–∂–Ω—ã–π –Ω–∞–º –Ω–∞–±–æ—Ä –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        game_world_deps = await build_game_world_dependencies()
        
        # 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä –≤ —Å—Ç–µ–π—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app.state.dependencies = game_world_deps
        # –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô >>>

        logger.info("--- ‚úÖ –í–°–ï –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò –û–†–ö–ï–°–¢–†–ê–¢–û–†–ê –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù–´ ---")

        # --- –≠–¢–ê–ü 1: –†–ï–ñ–ò–ú –ü–†–ï–î–°–¢–ê–†–¢–ê ---
        logger.info("--- ‚öôÔ∏è –í—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –ü–†–ï–î–°–¢–ê–†–¢–ê (Pre-Start Mode) ---")

        # GeneratorPreStart —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –∏–∑–≤–ª–µ–∫–∞–µ–º –∏—Ö
        generator_coordinator = GeneratorPreStart(
            repository_manager=game_world_deps["repository_manager"],
            # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: GeneratorPreStart –º–æ–∂–µ—Ç —Ç–∞–∫–∂–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞,
            # —á—Ç–æ–±—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å 'dependencies' –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏.
            app_cache_managers=game_world_deps, # –ü–µ—Ä–µ–¥–∞–µ–º –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å, —Ç.–∫. –æ–Ω –æ–∂–∏–¥–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
            arq_redis_pool=game_world_deps["arq_redis_pool"]
        )
        app.state.generator_coordinator = generator_coordinator

        pre_start_successful = await app.state.generator_coordinator.pre_start_mode()

        if not pre_start_successful:
            logger.critical("üö® –ü—Ä–µ–¥—Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π. –û—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω.")
            sys.exit(1)

        logger.info("--- ‚úÖ –ü—Ä–µ–¥—Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω ---")

        # --- –≠–¢–ê–ü 2: –†–ï–ñ–ò–ú –û–°–ù–û–í–ù–û–ô –†–ê–ë–û–¢–´ (Runtime Mode) ---
        logger.info("--- ‚öôÔ∏è –í—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –û–°–ù–û–í–ù–û–ô –†–ê–ë–û–¢–´ (Runtime Mode) ---")

        coordinator_orchestrator = CoordinatorOrchestrator(dependencies=game_world_deps)
        
        runtime_coordinator = CoordinatorListener(
            message_bus=game_world_deps["message_bus"],
            config=coordinator_config,
            orchestrator=coordinator_orchestrator
        )
        app.state.runtime_coordinator = runtime_coordinator

        runtime_coordinator.start() 
        logger.info("--- ‚úÖ –†–∞–Ω—Ç–∞–π–º-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã ---")

        yield

    finally:
        # --- SHUTDOWN ---
        logger.info("--- üõë –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ì–ª–∞–≤–Ω–æ–≥–æ –û—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ---")

        if runtime_coordinator:
            await runtime_coordinator.stop()
            logger.info("‚úÖ –†–∞–Ω—Ç–∞–π–º-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
            
        # <<< –ò–ó–ú–ï–ù–ï–ù–û: –í—ã–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        await shutdown_all_dependencies()
        
        logger.info("--- ‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ì–ª–∞–≤–Ω–æ–≥–æ –û—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. ---")


app = FastAPI(
    title="Game World State Orchestrator",
    description="Orchestrates pre-start generation and runtime game world processes.",
    version="1.0.0",
    lifespan=lifespan_event_handler
)

@app.get("/health", summary="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç."""
    # <<< –ò–ó–ú–ï–ù–ï–ù–û: –ü—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–ø–µ—Ä—å —Å–º–æ—Ç—Ä—è—Ç –≤ –µ–¥–∏–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if (hasattr(app.state, 'dependencies') and app.state.dependencies and
        "repository_manager" in app.state.dependencies and
        "redis_batch_store" in app.state.dependencies and
        "arq_redis_pool" in app.state.dependencies and
        "message_bus" in app.state.dependencies and
        hasattr(app.state, 'runtime_coordinator') and app.state.runtime_coordinator is not None):
        
        return Response(status_code=status.HTTP_200_OK, content="Orchestrator is healthy.")
    else:
        logger.error("Health check failed: Core components not fully initialized.")
        raise HTTPException(status_code=status.HTTP_503_SERVICE_UNAVAILABLE, detail="Orchestrator is not fully initialized.")
