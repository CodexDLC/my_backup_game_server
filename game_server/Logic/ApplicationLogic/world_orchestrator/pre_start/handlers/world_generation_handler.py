# –§–∞–π–ª: game_server/Logic/ApplicationLogic/world_orchestrator/pre_start/handlers/world_generation_handler.py

import logging
import inject

# <--- –£–±—Ä–∞–ª–∏ –≤—Å–µ –ª–∏—à–Ω–∏–µ –∏–º–ø–æ—Ä—Ç—ã arq
from .base_step_handler import IPreStartStepHandler
from game_server.config.provider import config
# <--- –î–æ–±–∞–≤–∏–ª–∏ –∏–º–ø–æ—Ä—Ç –Ω–∞—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
from game_server.Logic.InfrastructureLogic.arq_worker.arq_manager import ArqQueueService

class WorldGenerationHandler(IPreStartStepHandler):
    """–®–∞–≥ 3: –ó–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–¥–∞—á—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã –º–∏—Ä–∞ —á–µ—Ä–µ–∑ ARQ."""

    # <--- –¢–µ–ø–µ—Ä—å –æ–Ω –∑–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç –ª–æ–≥–≥–µ—Ä–∞ –∏ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
    @inject.autoparams('arq_service', 'logger')
    def __init__(self, arq_service: ArqQueueService, logger: logging.Logger):
        self.logger = logger
        self._arq_service = arq_service

    async def execute(self) -> bool:
        self.logger.info("--- ‚öôÔ∏è –®–∞–≥ 3: –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã –º–∏—Ä–∞ (—Ñ–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å) ---")
        job_id = "world_map_generation_singleton_job"

        try:
            # –ü—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞. –ö–æ–¥ —Å—Ç–∞–ª —á–∏—Å—Ç—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º.
            await self._arq_service.enqueue_job(
                config.constants.arq.ARQ_TASK_GENERATE_WORLD_MAP,
                job_id, # <--- –ü–µ—Ä–µ–¥–∞–µ–º job_id –∫–∞–∫ –ø–µ—Ä–≤—ã–π –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–¥–∞—á–∏
                _defer_by_seconds=5
                # üî• job_id –±–æ–ª—å—à–µ –Ω–µ _job_id, –∞ –ø—Ä—è–º–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è generate_world_map_task
            )
            return True
        except Exception as e:
            # –û—à–∏–±–∫–∞ —É–∂–µ –±—É–¥–µ—Ç –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∞ –≤–Ω—É—Ç—Ä–∏ —Å–µ—Ä–≤–∏—Å–∞, –Ω–æ –º—ã –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç.
            self.logger.critical(f"üö® –®–∞–≥ 3: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã: {e}")
            return False