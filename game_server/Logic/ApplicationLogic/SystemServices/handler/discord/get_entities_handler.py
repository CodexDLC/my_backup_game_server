# game_server/Logic/ApplicationLogic/SystemServices/handler/discord/get_entities_handler.py

import logging
from typing import Dict, Any, List, Optional, Callable
import inject
from sqlalchemy.ext.asyncio import AsyncSession

# üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–±—Ä–∏–∫—É —Å–µ—Å—Å–∏–π –∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
from game_server.Logic.InfrastructureLogic.db_instance import AsyncSessionLocal
from game_server.Logic.InfrastructureLogic.app_post.utils.transactional_decorator import transactional

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
from game_server.Logic.InfrastructureLogic.app_post.repository_groups.discord.interfaces_discord import IDiscordEntityRepository

from game_server.Logic.ApplicationLogic.SystemServices.handler.i_system_handler import ISystemServiceHandler

from game_server.contracts.api_models.discord.entity_management_requests import GetDiscordEntitiesRequest
from game_server.contracts.dtos.discord.data_models import DiscordEntityDTO
from game_server.contracts.dtos.discord.results import GetDiscordEntitiesResultDTO
from game_server.contracts.shared_models.base_commands_results import BaseResultDTO

class GetDiscordEntitiesHandler(ISystemServiceHandler):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—É—â–Ω–æ—Å—Ç–µ–π Discord –∏–∑ –ë–î. –†–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–∞–º–∫–∞—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
    """
    # üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–Ω–µ–¥—Ä—è–µ–º –ª–æ–≥–≥–µ—Ä –∏ —Ñ–∞–±—Ä–∏–∫—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    @inject.autoparams('logger', 'discord_repo_factory')
    def __init__(self,
                 logger: logging.Logger,
                 discord_repo_factory: Callable[[AsyncSession], IDiscordEntityRepository]
                 ):
        self._logger = logger
        self._discord_repo_factory = discord_repo_factory
        self._logger.info("GetDiscordEntitiesHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    @property
    def logger(self) -> logging.Logger:
        return self._logger

    # üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–µ–ª–∞–µ–º –º–µ—Ç–æ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω—ã–º
    @transactional(AsyncSessionLocal)
    async def process(self, session: AsyncSession, command_dto: GetDiscordEntitiesRequest) -> BaseResultDTO[GetDiscordEntitiesResultDTO]:
        guild_id = command_dto.guild_id
        entity_type = command_dto.entity_type

        self.logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ '{command_dto.command}' –¥–ª—è –≥–∏–ª—å–¥–∏–∏ {guild_id}. –¢–∏–ø: {entity_type or '–í—Å–µ'}.")
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–µ–π
        discord_entity_repo = self._discord_repo_factory(session)

        try:
            if entity_type:
                entities = await discord_entity_repo.get_discord_entities_by_type(guild_id, entity_type)
            else:
                entities = await discord_entity_repo.get_discord_entities_by_guild_id(guild_id)

            # –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É ORM-–º–æ–¥–µ–ª–∏ entity –µ—Å—Ç—å –º–µ—Ç–æ–¥ to_dict() –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Pydantic .from_orm()
            entities_data = [DiscordEntityDTO.model_validate(entity.__dict__).model_dump() for entity in entities]
            
            self.logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(entities_data)} —Å—É—â–Ω–æ—Å—Ç–µ–π –¥–ª—è –≥–∏–ª—å–¥–∏–∏ {guild_id}.")

            result_data_payload = GetDiscordEntitiesResultDTO(entities=entities_data)

            return BaseResultDTO[GetDiscordEntitiesResultDTO](
                correlation_id=command_dto.correlation_id,
                success=True,
                message=f"–ù–∞–π–¥–µ–Ω–æ {len(entities_data)} —Å—É—â–Ω–æ—Å—Ç–µ–π.",
                data=result_data_payload,
                client_id=command_dto.client_id
            )
        except Exception as e:
            self.logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—É—â–Ω–æ—Å—Ç–µ–π –¥–ª—è –≥–∏–ª—å–¥–∏–∏ {guild_id}: {e}")
            error_data_payload = GetDiscordEntitiesResultDTO(entities=[])
            return BaseResultDTO[GetDiscordEntitiesResultDTO](
                correlation_id=command_dto.correlation_id,
                success=False,
                message=f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {e}",
                data=error_data_payload,
                client_id=command_dto.client_id
            )