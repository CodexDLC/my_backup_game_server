# game_server/Logic/ApplicationLogic/SystemServices/handler/discord/create_single_entity_handler.py

import logging
from typing import Dict, Any, Callable
import inject
from sqlalchemy.ext.asyncio import AsyncSession

# üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–±—Ä–∏–∫—É —Å–µ—Å—Å–∏–π –∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
from game_server.Logic.InfrastructureLogic.db_instance import AsyncSessionLocal
from game_server.Logic.InfrastructureLogic.app_post.utils.transactional_decorator import transactional

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
from game_server.Logic.InfrastructureLogic.app_post.repository_groups.discord.interfaces_discord import IDiscordEntityRepository

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º DTO –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞

from game_server.Logic.ApplicationLogic.SystemServices.handler.i_system_handler import ISystemServiceHandler
from game_server.contracts.dtos.discord.commands import DiscordEntityCreateCommand
from game_server.contracts.dtos.discord.data_models import DiscordEntityDTO
from game_server.contracts.shared_models.base_commands_results import BaseResultDTO

class CreateSingleEntityHandler(ISystemServiceHandler):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–¥–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç–∏ Discord –≤ –ë–î. –†–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–∞–º–∫–∞—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
    """
    # üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–Ω–µ–¥—Ä—è–µ–º –ª–æ–≥–≥–µ—Ä –∏ —Ñ–∞–±—Ä–∏–∫—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    @inject.autoparams('logger', 'discord_repo_factory')
    def __init__(self,
                 logger: logging.Logger,
                 discord_repo_factory: Callable[[AsyncSession], IDiscordEntityRepository]
                 ):
        self._logger = logger
        self._discord_repo_factory = discord_repo_factory
        self._logger.info("CreateSingleEntityHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    @property
    def logger(self) -> logging.Logger:
        return self._logger

    # üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–µ–ª–∞–µ–º –º–µ—Ç–æ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω—ã–º
    @transactional(AsyncSessionLocal)
    async def process(self, session: AsyncSession, command_dto: DiscordEntityCreateCommand) -> BaseResultDTO[DiscordEntityDTO]:
        guild_id = command_dto.guild_id
        discord_id = command_dto.discord_id

        self.logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ '{command_dto.command}' –¥–ª—è —Å—É—â–Ω–æ—Å—Ç–∏ —Å Discord ID: {discord_id}.")

        # –°–æ–∑–¥–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–µ–π
        discord_entity_repo = self._discord_repo_factory(session)
        
        try:
            existing_entity = await discord_entity_repo.get_discord_entity_by_discord_id(
                guild_id=guild_id,
                discord_id=discord_id
            )

            if existing_entity:
                self.logger.warning(f"–°—É—â–Ω–æ—Å—Ç—å —Å Discord ID {discord_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ù–æ–≤–∞—è –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª–∞—Å—å.")
                return BaseResultDTO[DiscordEntityDTO](
                    correlation_id=command_dto.correlation_id,
                    success=True,
                    message="–°—É—â–Ω–æ—Å—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.",
                    data=DiscordEntityDTO.model_validate(existing_entity.__dict__)
                )

            new_entity_data = command_dto.model_dump(exclude={"command", "correlation_id", "trace_id", "span_id", "client_id"})
            new_db_entity = await discord_entity_repo.create_discord_entity(new_entity_data)

            self.logger.info(f"–°—É—â–Ω–æ—Å—Ç—å '{new_db_entity.name}' (Discord ID: {new_db_entity.discord_id}) —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.")

            return BaseResultDTO[DiscordEntityDTO](
                correlation_id=command_dto.correlation_id,
                success=True,
                message="–°—É—â–Ω–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.",
                data=DiscordEntityDTO.model_validate(new_db_entity.__dict__)
            )

        except Exception as e:
            self.logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—É—â–Ω–æ—Å—Ç–∏ —Å Discord ID {discord_id}: {e}")
            return BaseResultDTO[DiscordEntityDTO](
                correlation_id=command_dto.correlation_id,
                success=False,
                message=f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {e}",
                data=None
            )