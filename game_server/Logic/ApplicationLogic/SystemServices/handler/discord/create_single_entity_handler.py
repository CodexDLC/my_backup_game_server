# game_server/Logic/ApplicationLogic/SystemServices/handler/discord/create_single_entity_handler.py

from typing import Dict, Any


from game_server.Logic.InfrastructureLogic.app_post.repository_manager import RepositoryManager

# üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ DTO
from game_server.common_contracts.dtos.discord_dtos import DiscordEntityCreateCommand, DiscordEntityDTO # DiscordEntityCreateResultDTO –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω
from game_server.common_contracts.dtos.base_dtos import BaseResultDTO # –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
from game_server.Logic.ApplicationLogic.SystemServices.handler.i_system_handler import ISystemServiceHandler

class CreateSingleEntityHandler(ISystemServiceHandler):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–¥–Ω–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç–∏ Discord –≤ –ë–î.
    –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤.
    """
    def __init__(self, dependencies: Dict[str, Any]):
        super().__init__(dependencies)
        try:
            self.repo_manager: RepositoryManager = self.dependencies['repository_manager']
            self.discord_entity_repo = self.repo_manager.discord_entities
        except KeyError as e:
            self.logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –í {self.__class__.__name__} –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å {e}.")
            raise

    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π —Ç–∏–ø —Ç–µ–ø–µ—Ä—å BaseResultDTO[DiscordEntityDTO]
    async def process(self, command_dto: DiscordEntityCreateCommand) -> BaseResultDTO[DiscordEntityDTO]:
        guild_id = command_dto.guild_id
        discord_id = command_dto.discord_id

        self.logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ '{command_dto.command}' –¥–ª—è —Å—É—â–Ω–æ—Å—Ç–∏ —Å Discord ID: {discord_id} (Correlation ID: {command_dto.correlation_id})")

        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è —Å—É—â–Ω–æ—Å—Ç—å
            existing_entity = await self.discord_entity_repo.get_discord_entity_by_discord_id(
                guild_id=guild_id,
                discord_id=discord_id
            )

            if existing_entity:
                self.logger.warning(f"–°—É—â–Ω–æ—Å—Ç—å —Å Discord ID {discord_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é. (Correlation ID: {command_dto.correlation_id})")
                # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ–º BaseResultDTO
                return BaseResultDTO[DiscordEntityDTO](
                    correlation_id=command_dto.correlation_id,
                    trace_id=command_dto.trace_id, # –ü—Ä–æ–ø–∞–≥–∏—Ä—É–µ–º trace_id
                    span_id=command_dto.span_id,   # –ü—Ä–æ–ø–∞–≥–∏—Ä—É–µ–º span_id
                    success=True,
                    message="–°—É—â–Ω–æ—Å—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ–≤–∞—è –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª–∞—Å—å.",
                    data=DiscordEntityDTO.model_validate(existing_entity.__dict__) # –î–∞–Ω–Ω—ã–µ –≤ –ø–æ–ª–µ 'data'
                )

            # –ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
            # exclude={'command', 'correlation_id', 'trace_id', 'span_id', 'timestamp'}
            new_entity_data = command_dto.model_dump(exclude={field.name for field in command_dto.model_fields.values() if field.json_schema_extra and field.json_schema_extra.get('exclude_from_payload')}) # –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—è BaseCommandDTO
            new_db_entity = await self.discord_entity_repo.create_discord_entity(new_entity_data)

            self.logger.info(f"–°—É—â–Ω–æ—Å—Ç—å '{new_db_entity.name}' (Discord ID: {new_db_entity.discord_id}) —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞. (Correlation ID: {command_dto.correlation_id})")

            # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ–º BaseResultDTO
            return BaseResultDTO[DiscordEntityDTO](
                correlation_id=command_dto.correlation_id,
                trace_id=command_dto.trace_id, # –ü—Ä–æ–ø–∞–≥–∏—Ä—É–µ–º trace_id
                span_id=command_dto.span_id,   # –ü—Ä–æ–ø–∞–≥–∏—Ä—É–µ–º span_id
                success=True,
                message="–°—É—â–Ω–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.",
                data=DiscordEntityDTO.model_validate(new_db_entity.__dict__) # –î–∞–Ω–Ω—ã–µ –≤ –ø–æ–ª–µ 'data'
            )

        except Exception as e:
            self.logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—É—â–Ω–æ—Å—Ç–∏ —Å Discord ID {discord_id} (Correlation ID: {command_dto.correlation_id}): {e}")
            # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ–º BaseResultDTO
            return BaseResultDTO[DiscordEntityDTO](
                correlation_id=command_dto.correlation_id,
                trace_id=command_dto.trace_id, # –ü—Ä–æ–ø–∞–≥–∏—Ä—É–µ–º trace_id
                span_id=command_dto.span_id,   # –ü—Ä–æ–ø–∞–≥–∏—Ä—É–µ–º span_id
                success=False,
                message=f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {e}",
                data=None # –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
            )