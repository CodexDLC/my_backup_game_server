# game_server/Logic/ApplicationLogic/SystemServices/handler/discord/delete_entities_handler.py

import logging
from typing import Dict, Any, List, Callable
import inject
from sqlalchemy.ext.asyncio import AsyncSession

# üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–±—Ä–∏–∫—É —Å–µ—Å—Å–∏–π –∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
from game_server.Logic.InfrastructureLogic.db_instance import AsyncSessionLocal
from game_server.Logic.InfrastructureLogic.app_post.utils.transactional_decorator import transactional

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
from game_server.Logic.InfrastructureLogic.app_post.repository_groups.discord.interfaces_discord import IDiscordEntityRepository

from game_server.Logic.ApplicationLogic.SystemServices.handler.i_system_handler import ISystemServiceHandler
from game_server.contracts.api_models.discord.entity_management_requests import UnifiedEntityBatchDeleteRequest
from game_server.contracts.shared_models.base_commands_results import BaseResultDTO


class DeleteDiscordEntitiesHandler(ISystemServiceHandler):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å—É—â–Ω–æ—Å—Ç–µ–π Discord –∏–∑ –ë–î. –†–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–∞–º–∫–∞—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
    """
    # üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–Ω–µ–¥—Ä—è–µ–º –ª–æ–≥–≥–µ—Ä –∏ —Ñ–∞–±—Ä–∏–∫—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    @inject.autoparams('logger', 'discord_repo_factory')
    def __init__(self,
                 logger: logging.Logger,
                 discord_repo_factory: Callable[[AsyncSession], IDiscordEntityRepository]
                 ):
        self._logger = logger
        self._discord_repo_factory = discord_repo_factory
        self._logger.info("DeleteDiscordEntitiesHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

    @property
    def logger(self) -> logging.Logger:
        return self._logger

    # üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–µ–ª–∞–µ–º –º–µ—Ç–æ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω—ã–º
    @transactional(AsyncSessionLocal)
    async def process(self, session: AsyncSession, command_dto: UnifiedEntityBatchDeleteRequest) -> BaseResultDTO[Dict[str, Any]]:
        guild_id = command_dto.guild_id
        discord_ids = command_dto.discord_ids
        
        self.logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ '{command_dto.command}' –¥–ª—è –≥–∏–ª—å–¥–∏–∏ {guild_id}. –£–¥–∞–ª–µ–Ω–∏–µ {len(discord_ids)} —Å—É—â–Ω–æ—Å—Ç–µ–π.")

        # –°–æ–∑–¥–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–µ–π
        discord_entity_repo = self._discord_repo_factory(session)

        try:
            # –ü–†–ò–ú–ï–ß–ê–ù–ò–ï: –î–ª—è –±–æ–ª—å—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω batch-–º–µ—Ç–æ–¥,
            # –Ω–∞–ø—Ä–∏–º–µ—Ä, discord_entity_repo.delete_discord_entities_batch(discord_ids)
            deleted_count = 0
            for discord_id in discord_ids:
                try:
                    success = await discord_entity_repo.delete_discord_entity_by_id(discord_id)
                    if success:
                        deleted_count += 1
                except Exception as e:
                    self.logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—É—â–Ω–æ—Å—Ç–∏ Discord ID {discord_id}: {e}")
            
            self.logger.info(f"–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {deleted_count} —Å—É—â–Ω–æ—Å—Ç–µ–π –¥–ª—è –≥–∏–ª—å–¥–∏–∏ {guild_id}.")

            return BaseResultDTO[Dict[str, Any]](
                correlation_id=command_dto.correlation_id,
                success=True,
                message=f"–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {deleted_count} –∏–∑ {len(discord_ids)} –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π.",
                data={"deleted_count": deleted_count},
                client_id=command_dto.client_id
            )
        except Exception as e:
            self.logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –º–∞—Å—Å–æ–≤–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ —Å—É—â–Ω–æ—Å—Ç–µ–π –¥–ª—è –≥–∏–ª—å–¥–∏–∏ {guild_id}: {e}")
            return BaseResultDTO[Dict[str, Any]](
                correlation_id=command_dto.correlation_id,
                success=False,
                message=f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {e}",
                data={"deleted_count": 0, "error": str(e)},
                client_id=command_dto.client_id
            )