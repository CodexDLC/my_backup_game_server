from .base_step_handler import IPreStartStepHandler
from game_server.Logic.ApplicationLogic.start_orcestrator.coordinator_pre_start.load_seeds.seeds_manager import SeedsManager
from game_server.database.models import models

# –î–û–ë–ê–í–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç RepositoryManager
from game_server.Logic.InfrastructureLogic.app_post.repository_manager import RepositoryManager


class SeedsHandler(IPreStartStepHandler):
    """ –®–∞–≥ 1: –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö (Seeds). """
    async def execute(self) -> bool:
        self.logger.debug("‚öôÔ∏è –®–∞–≥ 1: –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö (Seeds)...")
        try:
            # –ò–ó–ú–ï–ù–ï–ù–û: –ü–æ–ª—É—á–∞–µ–º RepositoryManager –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            repository_manager: RepositoryManager = self.dependencies['repository_manager']
            
            # –ò–ó–ú–ï–ù–ï–ù–û: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SeedsManager —Å RepositoryManager
            seeds_manager = SeedsManager(repository_manager=repository_manager) # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ SeedsManager –ø—Ä–∏–Ω–∏–º–∞–µ—Ç RepositoryManager
            
            await seeds_manager.import_seeds(models) # models –æ—Å—Ç–∞—é—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏, –≤–µ—Ä–æ—è—Ç–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è SeedsManager
            self.logger.debug("‚úÖ –®–∞–≥ 1: –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.")
            return True
        except Exception as e:
            self.logger.critical(f"üö® –®–∞–≥ 1: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö: {e}", exc_info=True)
            return False