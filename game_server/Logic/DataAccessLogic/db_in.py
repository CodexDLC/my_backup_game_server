
from game_server.services.logging.logging_setup import logger
import asyncpg


class AsyncDatabase:
    def __init__(self, db_url):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π."""
        self.db_url = db_url
        self.pool = None  # ‚úÖ –ü—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        
    async def connect(self):
        """–°–æ–∑–¥–∞—ë—Ç –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∫ –ë–î, —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫."""
        if self.pool is None:
            try:
                self.pool = await asyncpg.create_pool(self.db_url)
                logger.info("‚úÖ –ü—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∫ –ë–î —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π: {e}")
                raise RuntimeError("üî¥ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î")

    async def get_data(self, query: str, *params):
        """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î (SELECT) —á–µ—Ä–µ–∑ –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π."""
        if self.pool is None:
            raise RuntimeError("üî¥ –ü—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –Ω–µ —Å–æ–∑–¥–∞–Ω! –°–Ω–∞—á–∞–ª–∞ –≤—ã–∑–æ–≤–∏ `connect()`.")

        async with self.pool.acquire() as conn:
            try:
                logger.debug(f"üîé –í—ã–ø–æ–ª–Ω—è–µ–º SELECT: {query} | –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
                rows = await conn.fetch(query, *params)
                logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(rows)} –∑–∞–ø–∏—Å–µ–π.")
                return rows
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
                return None

    async def save_data(self, query: str, *params):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –ë–î (INSERT/UPDATE/DELETE) —á–µ—Ä–µ–∑ –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π."""
        if self.pool is None:
            raise RuntimeError("üî¥ –ü—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –Ω–µ —Å–æ–∑–¥–∞–Ω! –°–Ω–∞—á–∞–ª–∞ –≤—ã–∑–æ–≤–∏ `connect()`.")

        async with self.pool.acquire() as conn:
            try:
                logger.debug(f"üì§ SQL-–∑–∞–ø—Ä–æ—Å: {query} | –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
                await conn.execute(query, *params)
                logger.info("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")

    async def disconnect(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î."""
        if self.pool:
            await self.pool.close()
            logger.info("üî¥ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ.")
        else:
            logger.warning("‚ö† –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è, –Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
