import logging
import time
# from sqlalchemy.ext.asyncio import AsyncSession # REMOVED: No longer needed here directly
from game_server.Logic.InfrastructureLogic.messaging.message_bus import RedisMessageBus
from game_server.config.logging.logging_setup import app_logger as logger

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é-–æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä
from game_server.Logic.ApplicationLogic.start_orcestrator.coordinator_run.auto_tick_module.tick_AutoSession_Watcher import collect_and_dispatch_sessions

# üî• –ù–û–í–û–ï: –ï—Å–ª–∏ collect_and_dispatch_sessions –∏–ª–∏ –µ–≥–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
# –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ –¥—Ä—É–≥–∏—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–∞—Ö, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –∑–¥–µ—Å—å.
# –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ app_managers –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ run_periodic_task –≤ arq_worker_settings.py
from typing import Dict, Any # –î–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ app_managers, –µ—Å–ª–∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è

# –î–û–ë–ê–í–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç RepositoryManager
from game_server.Logic.InfrastructureLogic.app_post.repository_manager import RepositoryManager


# ==============================================================================
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏
# ==============================================================================
async def execute_periodic_task(
    # db_session: AsyncSession, # REMOVED: No longer received directly
    repository_manager: RepositoryManager, # ADDED: Receives RepositoryManager
    message_bus: RedisMessageBus,
    app_managers: Dict[str, Any], # Receives dictionary with all managers
):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏.
    –ü–æ–ª—É—á–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.
    """
    start_time = time.time()
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∏–∫–æ–≤...")

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –∏–∑ app_managers, –µ—Å–ª–∏ collect_and_dispatch_sessions –∏—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç
    # –ù–∞–ø—Ä–∏–º–µ—Ä:
    # task_queue_cache_manager = app_managers.get('task_queue_cache_manager')
    # central_redis_client = app_managers.get('central_redis_client')
    # reference_data_reader = app_managers.get('reference_data_reader')

    try:
        await collect_and_dispatch_sessions(
            repository_manager=repository_manager, # Passed down
            message_bus=message_bus, # Passed down
            app_cache_managers=app_managers, # Passed down
        )
        duration = time.time() - start_time
        logger.info(f"üèÅ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration:.2f} —Å–µ–∫.")
        return True
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏: {e}", exc_info=True)
        return False