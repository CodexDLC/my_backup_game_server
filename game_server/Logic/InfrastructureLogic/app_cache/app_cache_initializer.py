# game_server/Logic/InfrastructureLogic/app_cache/app_cache_initializer.py

import logging
from typing import Optional, Dict, Any, Type

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º CentralRedisClient
from .central_redis_client import CentralRedisClient

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Redis
from game_server.config.settings_core import REDIS_URL, REDIS_POOL_SIZE, REDIS_PASSWORD
from game_server.config.logging.logging_setup import app_logger as logger

# üî• –£–î–ê–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç _async_singletons_instances –∏–∑ di_container
# from game_server.core.di_container import _async_singletons_instances


async def initialize_app_cache_managers() -> Optional[CentralRedisClient]: # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –¢–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç CentralRedisClient
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç CentralRedisClient.
    """
    logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CentralRedisClient –¥–ª—è –∫—ç—à-–º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤...")

    central_redis_client_instance = None # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º None –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    try:
        # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CentralRedisClient
        central_redis_client_instance = CentralRedisClient(
            redis_url=REDIS_URL,
            max_connections=REDIS_POOL_SIZE,
            redis_password=REDIS_PASSWORD
        )
        await central_redis_client_instance.connect()
        logger.info("‚úÖ CentralRedisClient —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
        
        # DEBUG-–ø—Ä–æ–≤–µ—Ä–∫–∞ (–æ—Å—Ç–∞–≤–ª—è–µ–º, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
        if not hasattr(central_redis_client_instance, 'hgetall_msgpack'):
            logger.critical("DEBUG: !!! CENTRAL_REDIS_CLIENT –ù–ï –ò–ú–ï–ï–¢ hgetall_msgpack –ü–†–ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò CACHE MANAGERS !!!")
            raise AttributeError(f"DEBUG: Global CentralRedisClient from module '{central_redis_client_instance.__class__.__module__}' has no attribute 'hgetall_msgpack'")
        logger.critical("--- DEBUG: CentralRedisClient –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ---")

        logger.info("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CentralRedisClient –¥–ª—è –∫—ç—à-–º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        return central_redis_client_instance # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
    except Exception as e:
        logger.critical(f"üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ CentralRedisClient: {e}", exc_info=True)
        if central_redis_client_instance:
            await central_redis_client_instance.close()
            logger.warning("CentralRedisClient –∑–∞–∫—Ä—ã—Ç –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤.")
        return None # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ–º None –ø—Ä–∏ –æ—à–∏–±–∫–µ


async def shutdown_app_cache_managers() -> None:
    """
    –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É CentralRedisClient.
    """
    logger.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã CentralRedisClient...")
    # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∏—Ç—å CentralRedisClient –∏–∑ inject.instance()
    # –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –µ–≥–æ —Å—é–¥–∞, –µ—Å–ª–∏ –æ–Ω –Ω–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è inject'–æ–º –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.
    # –î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø–æ–ª—É—á–∞—Ç—å –µ–≥–æ –∏–∑ _async_singletons_instances.
    # –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ, –ª–æ–≥–∏–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±—É–¥–µ—Ç –≤ di_container.py, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏—Ç –µ–≥–æ —á–µ—Ä–µ–∑ inject.instance().
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–≥–ª—É—à–∫—É –∏–ª–∏ –ª–æ–≥–∏–∫—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ _async_singletons_instances.
    logger.info("‚úÖ CentralRedisClient –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã (–ª–æ–≥–∏–∫–∞ –≤ di_container).")

