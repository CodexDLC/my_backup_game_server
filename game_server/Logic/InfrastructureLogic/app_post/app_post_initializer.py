# game_server/Logic/InfrastructureLogic/app_post/app_post_initializer.py

import logging
from typing import Optional

# –ò–ó–ú–ï–ù–ï–ù–û: –ú—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–±—Ä–∏–∫—É —Å–µ—Å—Å–∏–π –Ω–∞–ø—Ä—è–º—É—é –∑–¥–µ—Å—å


from game_server.Logic.InfrastructureLogic.app_post.repository_manager import RepositoryManager
from game_server.Logic.InfrastructureLogic.db_instance import AsyncSessionLocal
from game_server.config.logging.logging_setup import app_logger as logger


# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ RepositoryManager
_repository_manager_instance: Optional[RepositoryManager] = None

# –ò–ó–ú–ï–ù–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
async def initialize_app_post_managers() -> bool:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç RepositoryManager. –¢–µ–ø–µ—Ä—å –æ–Ω —Å–∞–º –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Ñ–∞–±—Ä–∏–∫—É —Å–µ—Å—Å–∏–π.
    –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """
    global _repository_manager_instance

    logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ PostgreSQL (RepositoryManager)...")

    try:
        if _repository_manager_instance is None:
            # –ò–ó–ú–ï–ù–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π AsyncSessionLocal –Ω–∞–ø—Ä—è–º—É—é
            _repository_manager_instance = RepositoryManager(db_session_factory=AsyncSessionLocal)
            
            logger.info("‚úÖ RepositoryManager —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
        else:
            logger.warning("RepositoryManager —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ü—Ä–æ–ø—É—Å–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.")
        return True
    except Exception as e:
        logger.critical(f"üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ RepositoryManager: {e}", exc_info=True)
        _repository_manager_instance = None
        return False

def get_repository_manager_instance() -> RepositoryManager:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä RepositoryManager.
    –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω–∞ –¢–û–õ–¨–ö–û –ø–æ—Å–ª–µ initialize_app_post_managers().
    """
    if _repository_manager_instance is None:
        logger.error("üö´ RepositoryManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –í—ã–∑–æ–≤–∏—Ç–µ initialize_app_post_managers() —Å–Ω–∞—á–∞–ª–∞.")
        raise RuntimeError("RepositoryManager is not initialized.")
    return _repository_manager_instance

async def shutdown_app_post_managers() -> None:
    """
    –û–±–Ω—É–ª—è–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã.
    """
    global _repository_manager_instance
    logger.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ PostgreSQL...")
    _repository_manager_instance = None
    logger.info("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä—ã PostgreSQL –∑–∞–≤–µ—Ä—à–µ–Ω—ã.")