# game_server/Logic/InfrastructureLogic/app_post/app_post_initializer.py

import logging
from typing import Optional, Callable, Dict, Any, Type
from sqlalchemy.ext.asyncio import AsyncSession # –î–ª—è async_session_factory

from game_server.Logic.InfrastructureLogic.app_post.repository_manager import RepositoryManager
# –ò–º–ø–æ—Ä—Ç—ã –≤–∞—à–∏—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ (–µ—Å–ª–∏ –æ–Ω–∏ –Ω—É–∂–Ω—ã –∑–¥–µ—Å—å –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
# from .repository_groups.<domain>.<repo_impl> import <RepoImpl>


logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ RepositoryManager
# –û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å Optional, —Ç–∞–∫ –∫–∞–∫ —Å–Ω–∞—á–∞–ª–∞ –æ–Ω–∞ None
_repository_manager_instance: Optional[RepositoryManager] = None

async def initialize_app_post_managers(async_session_factory: Callable[[], AsyncSession]) -> bool:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç RepositoryManager –∏ –≤—Å–µ –µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏.
    –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """
    global _repository_manager_instance # –û–±—ä—è–≤–ª—è–µ–º, —á—Ç–æ –±—É–¥–µ–º –∏–∑–º–µ–Ω—è—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é

    logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ PostgreSQL (RepositoryManager)...")

    try:
        if _repository_manager_instance is None:
            _repository_manager_instance = RepositoryManager(db_session_factory=async_session_factory)
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª—é–±—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏,
            # –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î —á–µ—Ä–µ–∑ RepositoryManager
            logger.info("‚úÖ RepositoryManager —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
        else:
            logger.warning("RepositoryManager —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ü—Ä–æ–ø—É—Å–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.")
        return True
    except Exception as e:
        logger.critical(f"üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ RepositoryManager: {e}", exc_info=True)
        # –ï—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –æ–±–Ω—É–ª—è–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
        _repository_manager_instance = None
        return False

def get_repository_manager_instance() -> RepositoryManager:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä RepositoryManager.
    –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω–∞ –¢–û–õ–¨–ö–û –ø–æ—Å–ª–µ initialize_app_post_managers().
    """
    if _repository_manager_instance is None:
        logger.error("üö´ RepositoryManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –í—ã–∑–æ–≤–∏—Ç–µ initialize_app_post_managers() —Å–Ω–∞—á–∞–ª–∞.")
        raise RuntimeError("RepositoryManager is not initialized.")
    return _repository_manager_instance

async def shutdown_app_post_managers() -> None:
    """
    –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å PostgreSQL.
    –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ RepositoryManager —É–ø—Ä–∞–≤–ª—è–µ—Ç –ø—É–ª–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∏–ª–∏ Engine,
    –ª–æ–≥–∏–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –Ω–µ–º –∏–ª–∏ –∑–¥–µ—Å—å.
    """
    global _repository_manager_instance

    logger.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ PostgreSQL...")
    # –ï—Å–ª–∏ RepositoryManager —Å–∞–º –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ close/dispose –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤ –ë–î, –≤—ã–∑–æ–≤–∏—Ç–µ –µ–≥–æ
    # if _repository_manager_instance and hasattr(_repository_manager_instance, 'close'):
    #     await _repository_manager_instance.close()
    
    # –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –∑–∞–∫—Ä—ã—Ç–∏–µ –¥–≤–∏–∂–∫–∞ SQLAlchemy –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ game_world_state_orchestrator.py
    # —á–µ—Ä–µ–∑ 'engine.dispose()', –ø–æ—ç—Ç–æ–º—É –∑–¥–µ—Å—å –ø—Ä—è–º–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –Ω–µ –Ω—É–∂–Ω–æ,
    # –Ω–æ _repository_manager_instance –≤—Å–µ —Ä–∞–≤–Ω–æ –æ–±–Ω—É–ª—è–µ–º.
    
    _repository_manager_instance = None
    logger.info("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä—ã PostgreSQL –∑–∞–≤–µ—Ä—à–µ–Ω—ã.")