
import asyncio
from game_server.Logic.InfrastructureLogic.tick_infra.tick_utils.tick_logger import logger  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä


from game_server.app_cache.redis_client import RedisClient

class TickFailedProcessor:
    def __init__(self, redis=None):
        self.redis = redis or RedisClient()

    async def process_failed(self):
        """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–ø–∞–≤—à–∏—Ö –∑–∞–¥–∞—á"""
        logger.info("üîß –ù–∞—á–∞—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ failed-–∑–∞–¥–∞—á (–∑–∞–≥–ª—É—à–∫–∞)")
        
        # –§–∏–∫—Ç–∏–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
        failed_tasks = await self.redis.smembers("tick_processing_failed")
        if failed_tasks:
            logger.warning(f"–ù–∞–π–¥–µ–Ω—ã failed-–∑–∞–¥–∞—á–∏: {failed_tasks}")
        
        # –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã
        await asyncio.sleep(1)
        
        # –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø
        await self.redis.publish("coordinator_channel", "clean")
        logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ failed-–∑–∞–¥–∞—á –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∑–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É")