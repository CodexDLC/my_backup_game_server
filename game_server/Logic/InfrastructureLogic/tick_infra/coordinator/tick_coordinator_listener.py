from game_server.Logic.DataAccessLogic.db_in import AsyncDatabase
from game_server.Logic.InfrastructureLogic.tick_infra.tick_utils.tick_logger import logger  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä


import asyncio
import os
from game_server.app_cache.redis_client import RedisClient


# –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
REDIS_CHANNELS = {
    "coordinator": os.getenv("REDIS_COORDINATOR_CHANNEL", "coordinator_channel")
}

class CoordinatorListener:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª—è, –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞."""
        self.redis_client = RedisClient()
        self.channel_name = REDIS_CHANNELS["coordinator"]
        self.pubsub_channel = None

    async def connect(self):
        """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Redis –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞."""
        pubsub = self.redis_client.pubsub()
        await pubsub.subscribe(self.channel_name)
        self.pubsub_channel = pubsub
        logger.info(f"–ü–æ–¥–ø–∏—Å–∞–Ω–æ –Ω–∞ –∫–∞–Ω–∞–ª: {self.channel_name}")

    async def listen(self, callback):
        """–°–ª—É—à–∞–µ—Ç –∫–∞–Ω–∞–ª –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –∫–æ–º–∞–Ω–¥—ã –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫."""
        while True:
            message = await self.pubsub_channel.get_message(ignore_subscribe_messages=True)
            if message and message["type"] == "message":
                msg_data = message["data"]

                if isinstance(msg_data, bytes):
                    msg_data = msg_data.decode("utf-8")

                logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {msg_data}")
                await callback(msg_data)

            await asyncio.sleep(1)

    async def shutdown(self):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –æ—á–∏—â–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ."""
        if self.pubsub_channel:
            await self.pubsub_channel.unsubscribe(self.channel_name)
            logger.info(f"üî¥ –û—Ç–ø–∏—Å–∫–∞ –æ—Ç –∫–∞–Ω–∞–ª–∞ {self.channel_name}")
            self.pubsub_channel = None  # –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫—É



