# game_server/Logic/InfrastructureLogic/DataAccessLogic/db_instance.py

from sqlalchemy.ext.asyncio import AsyncSession, create_async_engine
from sqlalchemy.orm import sessionmaker
from sqlalchemy.exc import SQLAlchemyError
from sqlalchemy.pool import NullPool # <-- –ù–û–í–´–ô –ò–ú–ü–û–†–¢ –î–õ–Ø temp_engine
from typing import Any, AsyncGenerator, Optional

# –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ engine –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑ SQLAlchemy_config.py
from game_server.Logic.InfrastructureLogic.DataAccessLogic.SQLAlchemy.SQLAlchemy_config import engine
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à logger –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
from game_server.services.logging.logging_setup import logger

# üîπ –§–∞–±—Ä–∏–∫–∏ —Å–µ—Å—Å–∏–π
AsyncSessionLocal = sessionmaker(bind=engine, class_=AsyncSession, expire_on_commit=False)

# ---
## –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–π (–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã)
# –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å FastAPI Depends,
# –≥–¥–µ FastAPI —É–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º —Å–µ—Å—Å–∏–∏ (commit/rollback/close).

async def get_db_session() -> AsyncGenerator[AsyncSession, None]:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –¥–ª—è –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è Depends –≤ FastAPI.
    """
    logger.debug("–û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ –ë–î –¥–ª—è –æ–±—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.")
    session = AsyncSessionLocal()
    try:
        yield session
    finally:
        await session.close()
        logger.debug("–°–µ—Å—Å–∏—è –ë–î –∑–∞–∫—Ä—ã—Ç–∞ (–æ–±—â–∏–π –∑–∞–ø—Ä–æ—Å).")

async def get_db_session_no_cache() -> AsyncGenerator[AsyncSession, None]:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤.
    –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π, —Ç—Ä–µ–±—É—é—â–∏—Ö "—Å–≤–µ–∂–∏—Ö" –¥–∞–Ω–Ω—ã—Ö, –∏–ª–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è.
    """
    logger.debug("–û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ –ë–î –±–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è.")
    
    # –í–ù–ò–ú–ê–ù–ò–ï: temp_engine —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å NullPool, –µ—Å–ª–∏ –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –≤ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö.
    # pool_size –∏ max_overflow –Ω–µ –Ω—É–∂–Ω—ã —Å NullPool, —Ç.–∫. NullPool –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
    temp_engine = create_async_engine(engine.url, poolclass=NullPool) # <--- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨
    TempAsyncSessionLocal = sessionmaker(bind=temp_engine, class_=AsyncSession, expire_on_commit=False)

    async with temp_engine.connect() as conn:
        conn = await conn.execution_options(compiled_cache={})
        async with TempAsyncSessionLocal(bind=conn) as session:
            try:
                yield session
                # await session.commit() # <--- –≠–¢–£ –°–¢–†–û–ö–£ –£–î–ê–õ–Ø–ï–ú (–µ—Å–ª–∏ —Ç—ã —Ä–µ—à–∏–ª –µ—ë —É–±—Ä–∞—Ç—å)
            except SQLAlchemyError as e:
                logger.error(f"–û—à–∏–±–∫–∞ SQLAlchemy –≤ get_db_session_no_cache, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–∫–∞—Ç: {e}", exc_info=True)
                # await session.rollback() # <--- –≠–¢–£ –°–¢–†–û–ö–£ –£–î–ê–õ–Ø–ï–ú (–µ—Å–ª–∏ —Ç—ã —Ä–µ—à–∏–ª –µ—ë —É–±—Ä–∞—Ç—å)
                raise
            except Exception as e:
                logger.error(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ get_db_session_no_cache, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–∫–∞—Ç: {e}", exc_info=True)
                # await session.rollback() # <--- –≠–¢–£ –°–¢–†–û–ö–£ –£–î–ê–õ–Ø–ï–ú (–µ—Å–ª–∏ —Ç—ã —Ä–µ—à–∏–ª –µ—ë —É–±—Ä–∞—Ç—å)
                raise
            finally:
                await temp_engine.dispose() # –í–∞–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–≤–∏–∂–æ–∫
                logger.debug("–°–µ—Å—Å–∏—è –ë–î –∑–∞–∫—Ä—ã—Ç–∞ (–±–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è).")

async def get_db_session_orm() -> AsyncSession:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å ORM.
    –¢—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–æ–º, –æ—Ç–∫–∞—Ç–æ–º –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ–º.
    """
    logger.debug("–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —Å–µ—Å—Å–∏–∏ ORM.")
    session = AsyncSessionLocal()
    return session

async def check_db_connection() -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ, –∏–Ω–∞—á–µ False.
    """
    logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...")
    try:
        async for session in get_db_session():
            await session.connection()
            logger.info("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
            return True
    except SQLAlchemyError as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}", exc_info=True)
        return False
    except Exception as e:
        logger.error(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î: {e}", exc_info=True)
        return False

async def get_raw_connection() -> Optional[Any]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—ã—Ä–æ–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
    –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç ORM.
    –¢—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.
    """
    logger.debug("–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—ã—Ä–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.")
    try:
        conn = await engine.connect()
        return conn
    except SQLAlchemyError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—ã—Ä–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î: {e}", exc_info=True)
        return None
    except Exception as e:
        logger.error(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—ã—Ä–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}", exc_info=True)
        return None