import json
from game_server.settings import REDIS_URL
import aioredis
from game_server.services.logging.logging_setup import logger

# –ü–æ–¥–∫–ª—é—á–∞–µ–º Redis —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
redis = aioredis.from_url(REDIS_URL)

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
logger = logger.getLogger(__name__)

DEFAULT_TTL = 86400  # –î–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è 24 —á–∞—Å–∞ (86400 —Å–µ–∫—É–Ω–¥)

async def update_character_data_in_redis(character_id: int, new_data: dict):
    """
    –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ Redis, –¥–æ–±–∞–≤–ª—è—è –Ω–æ–≤—ã–µ —á–∞—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
    
    :param character_id: ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.
    :param new_data: –ß–∞—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ –¥–∏–∞–ª–æ–≥–∞).
    """
    if not new_data:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        logger.warning(f"‚ö† –ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ {character_id}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return

    redis_key = f"character:{character_id}"

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    character_data = await redis.get(redis_key)
    if character_data:
        character_data = json.loads(character_data)
    else:
        character_data = {}  # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∏ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    character_data.update(new_data)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ Redis —Å TTL (–≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –¥–∞–Ω–Ω—ã—Ö)
    await redis.set(redis_key, json.dumps(character_data), ex=DEFAULT_TTL)

    logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ {character_id} –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ Redis: {new_data}")


async def get_character_data_from_redis(character_id: int) -> dict:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ Redis –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é –≤ –ë–î.
    
    :param character_id: ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.
    :return: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ + —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏).
    """
    redis_key = f"character:{character_id}"
    character_data = await redis.get(redis_key)

    if not character_data:
        logger.warning(f"‚ö† –î–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ {character_id} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ Redis!")
        return {}

    parsed_data = json.loads(character_data)  
    logger.info(f"üì• –î–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ {character_id} –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ Redis.")  # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

    return parsed_data  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É JSON –≤ —Å–ª–æ–≤–∞—Ä—å
