import json
from typing import List, Dict, Any, Optional
from game_server.services.logging.logging_setup import logger

# üî• –£–î–ê–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç CentralRedisClient –∑–¥–µ—Å—å –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤–Ω–∏–∑
# from game_server.Logic.InfrastructureLogic.app_cache.central_redis_client import CentralRedisClient

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ì–õ–û–ë–ê–õ–¨–ù–´–ô –≠–ö–ó–ï–ú–ü–õ–Ø–† task_queue_cache_manager
from game_server.Logic.InfrastructureLogic.app_cache.services.task_queue_cache_manager import task_queue_cache_manager


async def get_batch_specs_from_redis(
    redis_worker_batch_id: str,
    task_key_template: str,
    log_prefix: str,
    # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–¥–∞–ª—è–µ–º redis_client –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
    # redis_client: CentralRedisClient
) -> Optional[List[Dict[str, Any]]]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±–∞—Ç—á–∞ –∏–∑ Redis —á–µ—Ä–µ–∑ TaskQueueCacheManager.
    –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∞–º —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤–æ–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Redis.
    """
    return await task_queue_cache_manager.get_task_batch_specs(
        batch_id=redis_worker_batch_id,
        key_template=task_key_template,
        log_prefix=log_prefix,
        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–¥–∞–ª—è–µ–º –ø–µ—Ä–µ–¥–∞—á—É redis_client_instance
        # redis_client_instance=redis_client
    )


async def update_redis_task_status(
    redis_worker_batch_id: str,
    task_key_template: str,
    status: str,
    log_prefix: str,
    # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–¥–∞–ª—è–µ–º redis_client –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
    # redis_client: CentralRedisClient,
    error_message: Optional[str] = None,
    ttl_seconds_on_completion: Optional[int] = None
) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –≤ Redis —á–µ—Ä–µ–∑ TaskQueueCacheManager.
    –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∞–º —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤–æ–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Redis.
    """
    await task_queue_cache_manager.update_task_status(
        batch_id=redis_worker_batch_id,
        key_template=task_key_template,
        status=status,
        log_prefix=log_prefix,
        error_message=error_message,
        ttl_seconds=ttl_seconds_on_completion,
        # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–¥–∞–ª—è–µ–º –ø–µ—Ä–µ–¥–∞—á—É redis_client_instance
        # redis_client_instance=redis_client
    )