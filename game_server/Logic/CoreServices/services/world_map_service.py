# game_server/Logic/ApplicationLogic/world_service/world_map_service.py

import logging
from typing import Dict, Any, List, Optional

# üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ PostgreSQL –∏ Mongo
from game_server.Logic.ApplicationLogic.world_orchestrator.workers.world_map_generator.world_map_generator import WorldMapGenerator
from game_server.Logic.InfrastructureLogic.app_post.repository_groups.world_state.core_world.interfaces_core_world import IGameLocationRepository
from game_server.Logic.InfrastructureLogic.app_mongo.repository_groups.world_state.interfaces_world_state_mongo import IWorldStateRepository

from game_server.Logic.InfrastructureLogic.app_cache.central_redis_client import CentralRedisClient
# üî• –£–î–ê–õ–ï–ù–û: from game_server.Logic.InfrastructureLogic.app_mongo.mongo_repository_manager import MongoRepositoryManager

# üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –õ–æ–≥–≥–µ—Ä –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω, –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ
# from game_server.config.logging.logging_setup import app_logger as logger

class WorldMapService:
    """
    –ì–ª–∞–≤–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ–π –º–∏—Ä–∞.
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∏—Ä–∞ (–¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞)
    –∏ –≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–∞—Ä—Ç—ã (–¥–ª—è —Ä–æ—É—Ç–æ–≤/–¥—Ä—É–≥–∏—Ö —Å–∏—Å—Ç–µ–º).
    –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å —É—á–µ—Ç–æ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    –∏ —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ —à–∏–Ω—É –∫–æ–º–∞–Ω–¥.
    """
    def __init__(self, 
                 # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –¢–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –∏ –∫–ª–∏–µ–Ω—Ç—ã
                 pg_game_location_repo: IGameLocationRepository, # –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ (PostgreSQL)
                 mongo_world_state_repo: IWorldStateRepository, # –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –∑–∞–ø—Ä–æ—Å–æ–≤ (MongoDB)
                 redis_client: CentralRedisClient,
                 logger: logging.Logger # üî• –î–û–ë–ê–í–õ–ï–ù–û: –Ø–≤–Ω–æ –ø–æ–ª—É—á–∞–µ–º –ª–æ–≥–≥–µ—Ä
                ):
        
        # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –∏ –∫–ª–∏–µ–Ω—Ç—ã
        self.pg_game_location_repo = pg_game_location_repo
        self.mongo_world_state_repo = mongo_world_state_repo
        self.redis_client = redis_client
        self.logger = logger
        
        # –í–ù–£–¢–†–ï–ù–ù–ò–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò –°–ï–†–í–ò–°–ê:
        # 1. –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–∞—Ä—Ç—ã –º–∏—Ä–∞ (–¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö)
        # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º WorldMapGenerator –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        self._world_map_generator = WorldMapGenerator(
            pg_location_repo=self.pg_game_location_repo,
            mongo_world_repo=self.mongo_world_state_repo,
            redis_reader=None, # WorldMapGenerator —Ç–∞–∫–∂–µ —Ç—Ä–µ–±—É–µ—Ç reference_data_reader, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è, –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞.
                               # –í–æ–∑–º–æ–∂–Ω–æ, –µ–≥–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä WorldMapService.
            logger=self.logger # –ü–µ—Ä–µ–¥–∞–µ–º –ª–æ–≥–≥–µ—Ä
        )
        
        self.logger.info("‚úÖ WorldMapService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –∫–∞—Ä—Ç–æ–π –º–∏—Ä–∞.")

    # --- –ú–ï–¢–û–î 1: –î–õ–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò –ú–ò–†–ê (–ü–†–ï–î–°–¢–ê–†–¢–û–í–´–ô –†–ï–ñ–ò–ú) ---
    async def initialize_world_map_for_startup(self) -> bool:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç/–æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–∞—Ä—Ç—É –º–∏—Ä–∞ –≤ MongoDB.
        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –≤—ã–∑–æ–≤–∞ –≤–æ –≤—Ä–µ–º—è –ø—Ä–µ–¥—Å—Ç–∞—Ä—Ç–æ–≤–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.
        –í–æ–∑–º–æ–∂–Ω–æ–µ –±—É–¥—É—â–µ–µ: –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –≤–æ—Ä–∫–µ—Ä–æ–º –ø–æ –∫–æ–º–∞–Ω–¥–µ –∏–∑ —à–∏–Ω—ã.
        """
        self.logger.info("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã –º–∏—Ä–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
        success = await self._world_map_generator.generate_and_store_world_map() # –í—ã–∑–æ–≤ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
        
        if success:
            self.logger.info("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã –º–∏—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.")
            return True
        else:
            self.logger.critical("‚ùå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã –º–∏—Ä–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π.")
            return False

    # --- –ú–ï–¢–û–î 2: –î–õ–Ø –í–´–°–û–ö–û–£–†–û–í–ù–ï–í–û–ô –†–ê–ë–û–¢–´ –° –ö–ê–†–¢–û–ô (–î–õ–Ø –†–û–£–¢–û–í/–î–†–£–ì–ò–• –°–ò–°–¢–ï–ú) ---
    async def get_location_details(self, access_key: str) -> Optional[Dict[str, Any]]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –ª–æ–∫–∞—Ü–∏–∏ –ø–æ –µ—ë access_key –∏–∑ MongoDB.
        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω —á–µ—Ä–µ–∑ REST API (—Ä–æ—É—Ç–æ–º) –∏–ª–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ –∏–∑ —à–∏–Ω—ã.
        """
        self.logger.debug(f"–ó–∞–ø—Ä–æ—Å –ø—É–±–ª–∏—á–Ω–æ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è access_key: {access_key}")
        # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–µ–ª–µ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å mongo_world_state_repo –Ω–∞–ø—Ä—è–º—É—é
        location_data = await self.mongo_world_state_repo.get_location_by_id(access_key)
        if location_data:
            self.logger.debug(f"–ü–æ–ª—É—á–µ–Ω–∞ –ø—É–±–ª–∏—á–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏: {access_key}")
            return location_data
        else:
            self.logger.warning(f"–ü—É–±–ª–∏—á–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è —Å access_key '{access_key}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return None

    async def get_all_main_regions(self) -> List[Dict[str, Any]]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –º–∏—Ä–∞.
        """
        self.logger.debug("–ó–∞–ø—Ä–æ—Å –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –º–∏—Ä–∞ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π API.")
        # üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–µ–ª–µ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å mongo_world_state_repo –Ω–∞–ø—Ä—è–º—É—é
        all_locations = await self.mongo_world_state_repo.get_all_locations()
        main_regions = [
            loc for loc in all_locations 
            if loc.get('parent_access_key') is None and loc.get('location_type') in ['REGION', 'CITY']
        ]
        self.logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(main_regions)} –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤.")
        return main_regions