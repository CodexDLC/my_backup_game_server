# Discord_API/main.py
import sys
import asyncio
from dotenv import load_dotenv

# 1. –ó–∞–≥—Ä—É–∑–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ü–ï–†–í–û–ô –æ–ø–µ—Ä–∞—Ü–∏–µ–π
load_dotenv()

# 2. –ü—É—Ç–∏ –∏–º–ø–æ—Ä—Ç–∞
sys.path.append("/app")
print(f"üîé PYTHONPATH: {sys.path}")

# 3. –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏ –≤–∞—à–∏—Ö –º–æ–¥—É–ª–µ–π
import discord
from discord.ext import commands
from Discord_API.discord_settings import BOT_PREFIX, DISCORD_TOKEN
from Discord_API.config.logging.logging_setup_discod import logger
from Discord_API.cog_manager import CommandsManager
from Discord_API.event_manager import load_events

# --- –î–û–ë–ê–í–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç –≤–∞—à–µ–≥–æ BotCommandClient ---
from Discord_API.command_client import BotCommandClient
# --- –ö–û–ù–ï–¶ –î–û–ë–ê–í–õ–ï–ù–ù–û–ì–û –ë–õ–û–ö–ê ---

class Bot(commands.Bot):
    def __init__(self):
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–π (Intents)
        intents = discord.Intents.default()
        intents.members = True
        intents.message_content = True
        intents.guilds = True
        
        super().__init__(command_prefix=BOT_PREFIX, intents=intents)
        logger.info(f"–ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º: {BOT_PREFIX}")

        # --- –î–û–ë–ê–í–õ–ï–ù–û: –•—Ä–∞–Ω–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ BotCommandClient ---
        self.command_client: BotCommandClient = None 
        # --- –ö–û–ù–ï–¶ –î–û–ë–ê–í–õ–ï–ù–ù–û–ì–û –ë–õ–û–ö–ê ---

    async def setup_hook(self):
        """
        –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
        """
        logger.info("--- –ó–∞–ø—É—Å–∫ setup_hook ---")
        
        # 1. –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π —á–µ—Ä–µ–∑ –≤–∞—à event_manager
        logger.info("–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π...")
        await load_events(self)
        
        # 2. –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–≥–æ–≤ —á–µ—Ä–µ–∑ –≤–∞—à cog_manager
        logger.info("–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–≥–æ–≤...")
        cog_manager = CommandsManager(self, base_dir="Discord_API/cogs")
        await cog_manager.load_cogs()

        # --- –î–û–ë–ê–í–õ–ï–ù–û: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ BotCommandClient ---
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ BotCommandClient...")
        try:
            self.command_client = BotCommandClient(self) # –ü–µ—Ä–µ–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
            # –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ—Ç–æ–¥ listen_for_commands –∫–∞–∫ —Ñ–æ–Ω–æ–≤—É—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –∑–∞–¥–∞—á—É
            asyncio.create_task(self.command_client.listen_for_commands())
            logger.info("‚ö° BotCommandClient —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ —Ñ–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞.")
        except ValueError as ve:
            logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ BotCommandClient: {ve}. –ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —à–ª—é–∑—É.", exc_info=True)
            # –í–æ–∑–º–æ–∂–Ω–æ, –∑–¥–µ—Å—å —Å—Ç–æ–∏—Ç –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–æ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
        except Exception as e:
            logger.critical(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ BotCommandClient: {e}", exc_info=True)
            # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        # --- –ö–û–ù–ï–¶ –î–û–ë–ê–í–õ–ï–ù–ù–û–ì–û –ë–õ–û–ö–ê ---

    async def on_ready(self):
        """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è."""
        logger.info(f"üü¢ –ë–æ—Ç {self.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        await self.change_presence(activity=discord.Game(name=f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ {BOT_PREFIX}help"))


async def main():
    """–ì–ª–∞–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    bot = Bot()
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await bot.start(DISCORD_TOKEN)
    except discord.LoginFailure:
        logger.critical("üîë –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω Discord! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DISCORD_TOKEN.")
    except Exception as e:
        logger.critical(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}", exc_info=True)
    finally:
        # --- –î–û–ë–ê–í–õ–ï–ù–û: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ BotCommandClient ---
        if bot.command_client:
            logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ BotCommandClient...")
            await bot.command_client.stop() # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–∞ stop() –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è WS
        # --- –ö–û–ù–ï–¶ –î–û–ë–ê–í–õ–ï–ù–ù–û–ì–û –ë–õ–û–ö–ê ---

        if bot and not bot.is_closed():
            await bot.close()
        logger.info("üîö –†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")