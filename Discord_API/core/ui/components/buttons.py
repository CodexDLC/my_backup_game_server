import discord

# =================================================================================
# --- 1. –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ï –ö–ù–û–ü–ö–ò (–î–õ–Ø –û–ë–©–ò–• –î–ï–ô–°–¢–í–ò–ô) ---
# =================================================================================

class BackButton(discord.ui.Button):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" (—Å–µ—Ä–∞—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_back."""
    def __init__(self, row: int = 4):
        super().__init__(label="–ù–∞–∑–∞–¥", emoji="‚¨ÖÔ∏è", style=discord.ButtonStyle.secondary, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_back'):
            await self.view.on_back(interaction)

class ConfirmButton(discord.ui.Button):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" (–∑–µ–ª–µ–Ω–∞—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_confirm."""
    def __init__(self, label: str = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", row: int = 4):
        super().__init__(label=label, emoji="‚úîÔ∏è", style=discord.ButtonStyle.success, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_confirm'):
            await self.view.on_confirm(interaction)

class CancelButton(discord.ui.Button):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "–û—Ç–º–µ–Ω–∞" –∏–ª–∏ "–ó–∞–∫—Ä—ã—Ç—å" (—Å–µ—Ä–∞—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_cancel."""
    def __init__(self, label: str = "–û—Ç–º–µ–Ω–∞", row: int = 4):
        super().__init__(label=label, emoji="‚ùå", style=discord.ButtonStyle.secondary, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_cancel'):
            await self.view.on_cancel(interaction)

class DeleteButton(discord.ui.Button):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ–ø–∞—Å–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è "–£–¥–∞–ª–∏—Ç—å" (–∫—Ä–∞—Å–Ω–∞—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_delete."""
    def __init__(self, label: str = "–£–¥–∞–ª–∏—Ç—å", row: int = 4):
        super().__init__(label=label, emoji="üî•", style=discord.ButtonStyle.danger, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_delete'):
            await self.view.on_delete(interaction)

# =================================================================================
# --- 2. –ö–ù–û–ü–ö–ò –î–õ–Ø –ü–†–û–¶–ï–°–°–ê –í–•–û–î–ê –ò –õ–û–ë–ë–ò ---
# =================================================================================

class LoginButton(discord.ui.Button):
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–µ—Å—Å–∏–∏ "–í–æ–π—Ç–∏ –≤ –∏–≥—Ä—É" (—Å–∏–Ω—è—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_login."""
    def __init__(self, row: int = 0):
        super().__init__(label="–í–æ–π—Ç–∏ –≤ –∏–≥—Ä—É", emoji="‚ñ∂Ô∏è", style=discord.ButtonStyle.primary, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_login'):
            await self.view.on_login(interaction)

class CharactersButton(discord.ui.Button):
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –≤—ã–±–æ—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ "–ü–µ—Ä—Å–æ–Ω–∞–∂–∏" (—Å–∏–Ω—è—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_characters."""
    def __init__(self, row: int = 0):
        super().__init__(label="–ü–µ—Ä—Å–æ–Ω–∞–∂–∏", emoji="üë•", style=discord.ButtonStyle.primary, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_characters'):
            await self.view.on_characters(interaction)

class DeckButton(discord.ui.Button):
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –º–µ–Ω—é "–ö–æ–ª–æ–¥–∞" (—Å–µ—Ä–∞—è, –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è)."""
    def __init__(self, row: int = 0):
        super().__init__(label="–ö–æ–ª–æ–¥–∞", emoji="üÉè", style=discord.ButtonStyle.secondary, row=row, disabled=True)
    
    # Callback –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –∫–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞
    # async def callback(self, interaction: discord.Interaction): pass

class EnterWorldButton(discord.ui.Button):
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ "–í–æ–π—Ç–∏ –≤ –º–∏—Ä" (–∑–µ–ª–µ–Ω–∞—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_enter_world."""
    def __init__(self, row: int = 1):
        super().__init__(label="–í–æ–π—Ç–∏ –≤ –º–∏—Ä", emoji="‚úÖ", style=discord.ButtonStyle.success, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_enter_world'):
            await self.view.on_enter_world(interaction)

class CreateCharacterButton(discord.ui.Button):
    """
    –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–∑–µ–ª–µ–Ω–∞—è).
    –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_create_character.
    """
    def __init__(self, row: int = 0):
        super().__init__(
            label="–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", 
            emoji="‚ûï", 
            style=discord.ButtonStyle.success, 
            row=row
        )

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_create_character'):
            await self.view.on_create_character(interaction)
        else:
            # –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É–±—Ä–∞—Ç—å, –∫–æ–≥–¥–∞ —Ä–µ–∞–ª–∏–∑—É–µ–º –ª–æ–≥–∏–∫—É
            await interaction.response.send_message("–ü—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.", ephemeral=True)

# =================================================================================
# --- 3. –ö–ù–û–ü–ö–ò –î–õ–Ø –û–°–ù–û–í–ù–û–ô –ü–ê–ù–ï–õ–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø ---
# =================================================================================

class ProfileButton(discord.ui.Button):
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é "–ü—Ä–æ—Ñ–∏–ª—å" (—Å–∏–Ω—è—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_profile."""
    def __init__(self, row: int = 0):
        super().__init__(label="–ü—Ä–æ—Ñ–∏–ª—å", emoji="üë§", style=discord.ButtonStyle.primary, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_profile'):
            await self.view.on_profile(interaction)

class InventoryButton(discord.ui.Button):
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—è" (—Å–∏–Ω—è—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_inventory."""
    def __init__(self, row: int = 0):
        super().__init__(label="–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", emoji="üéí", style=discord.ButtonStyle.primary, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_inventory'):
            await self.view.on_inventory(interaction)

class SkillsButton(discord.ui.Button):
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é "–ù–∞–≤—ã–∫–∏" (—Å–∏–Ω—è—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_skills."""
    def __init__(self, row: int = 0):
        super().__init__(label="–ù–∞–≤—ã–∫–∏", emoji="‚ú®", style=discord.ButtonStyle.primary, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_skills'):
            await self.view.on_skills(interaction)

class MapButton(discord.ui.Button):
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ "–ö–∞—Ä—Ç—ã" (—Å–∏–Ω—è—è). –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_map."""
    def __init__(self, row: int = 0):
        super().__init__(label="–ö–∞—Ä—Ç–∞", emoji="üó∫Ô∏è", style=discord.ButtonStyle.primary, row=row)

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_map'):
            await self.view.on_map(interaction)
            
class ObserveButton(discord.ui.Button):
    """
    –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è "–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è" –≤ –ª–æ–∫–∞—Ü–∏–∏ (—Å–µ—Ä–∞—è).
    –î–µ–ª–µ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –º–µ—Ç–æ–¥—É on_observe.
    """
    def __init__(self, row: int = 1):
        super().__init__(
            label="–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è", 
            emoji="üëÄ", 
            style=discord.ButtonStyle.secondary, 
            row=row
        )

    async def callback(self, interaction: discord.Interaction):
        if hasattr(self.view, 'on_observe'):
            await self.view.on_observe(interaction)
        else:
            await interaction.response.send_message("–ó–¥–µ—Å—å –Ω–µ—á–µ–≥–æ –æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å.", ephemeral=True)
