import discord
import math

# –ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ —ç—Ç–æ –∫–ª–∞—Å—Å –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∏–∑ API
class GameItem:
    def __init__(self, item_id: str, name: str, description: str, quantity: int):
        self.id = item_id
        self.name = name
        self.description = description
        self.quantity = quantity

class PaginatedInventoryView(discord.ui.View):
    def __init__(self, items: list[GameItem], author: discord.User):
        super().__init__(timeout=180)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä, 3 –º–∏–Ω—É—Ç—ã
        self.items = items
        self.author = author # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∞, —á—Ç–æ–±—ã —Ç–æ–ª—å–∫–æ –æ–Ω –º–æ–≥ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å

        self.items_per_page = 5
        self.current_page = 1
        self.total_pages = math.ceil(len(self.items) / self.items_per_page)
        
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        self._update_components()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã –º–æ–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç View
    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        if interaction.user.id != self.author.id:
            await interaction.response.send_message("–≠—Ç–æ –Ω–µ –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!", ephemeral=True)
            return False
        return True

    def _get_current_page_items(self) -> list[GameItem]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ä–µ–∑ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã."""
        start_index = (self.current_page - 1) * self.items_per_page
        end_index = start_index + self.items_per_page
        return self.items[start_index:end_index]

    def _create_embed(self) -> discord.Embed:
        """–°–æ–∑–¥–∞–µ—Ç Embed –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã."""
        page_items = self._get_current_page_items()
        
        embed = discord.Embed(
            title=f"üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å - {self.author.display_name}",
            color=discord.Color.blue()
        )
        
        if not page_items:
            embed.description = "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç."
        else:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            for item in page_items:
                embed.add_field(
                    name=f"{item.name} (x{item.quantity})", 
                    value=item.description, 
                    inline=False
                )
        
        embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {self.current_page} –∏–∑ {self.total_pages}")
        return embed

    def _update_components(self):
        """–ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–∫–Ω–æ–ø–∫–∏, –º–µ–Ω—é) –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è."""
        self.clear_items() # –û—á–∏—â–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        self.add_item(self.create_nav_button("first", "‚è™ –í –Ω–∞—á–∞–ª–æ", self.current_page == 1))
        self.add_item(self.create_nav_button("prev", "‚óÄÔ∏è –ù–∞–∑–∞–¥", self.current_page == 1))
        self.add_item(self.create_nav_button("next", "‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥", self.current_page == self.total_pages))
        self.add_item(self.create_nav_button("last", "‚è© –í –∫–æ–Ω–µ—Ü", self.current_page == self.total_pages))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        page_items = self._get_current_page_items()
        if page_items:
            self.add_item(self.create_select_menu(page_items))

    def create_nav_button(self, custom_id: str, label: str, disabled: bool) -> discord.ui.Button:
        """–§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫."""
        button = discord.ui.Button(label=label, style=discord.ButtonStyle.secondary, custom_id=f"inventory_nav:{custom_id}", disabled=disabled)
        button.callback = self.navigation_callback
        return button

    def create_select_menu(self, items: list[GameItem]) -> discord.ui.Select:
        """–§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é."""
        options = [
            discord.SelectOption(label=f"{item.name} (x{item.quantity})", value=item.id, description=item.description[:100])
            for item in items
        ]
        select = discord.ui.Select(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è...", options=options, custom_id="inventory_select:item")
        select.callback = self.select_callback
        return select

    async def navigation_callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏."""
        action = interaction.data["custom_id"].split(":")[-1]
        
        if action == "first":
            self.current_page = 1
        elif action == "prev":
            self.current_page -= 1
        elif action == "next":
            self.current_page += 1
        elif action == "last":
            self.current_page = self.total_pages
            
        self._update_components()
        await interaction.response.edit_message(embed=self._create_embed(), view=self)

    async def select_callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ –º–µ–Ω—é."""
        selected_item_id = interaction.data['values'][0]
        # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–∑–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–¥–º–µ—Ç–µ
        # item = await services.game.get_item(selected_item_id)
        
        # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–µ–¥–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await interaction.response.send_message(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç —Å ID: `{selected_item_id}`. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–ª–∏ –æ–¥–µ—Ç—å.", ephemeral=True)
