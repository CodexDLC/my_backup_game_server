# Discord_API/core/services/admin/article_management_service.py

from typing import Dict, Any, Optional
import discord
from discord import Guild, TextChannel, CategoryChannel, utils

# –ò–º–ø–æ—Ä—Ç –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∞—à–∏–º –ë–≠–ö–ï–ù–î–û–ú (FastAPI)
from Discord_API.core.api_route_function.spec_route.discord_entity_api import DiscordBindingsAPI
# –ò–º–ø–æ—Ä—Ç –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π Discord
from Discord_API.core.services.admin.base_discord_operations import BaseDiscordOperations
# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–æ–≤


# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–∞—à —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ª–æ–≥–≥–µ—Ä
from Discord_API.config.logging.logging_setup_discod import logger as bot_logger
from Discord_API.core.assets.data.channels_config import CHANNELS_CONFIG
logger = bot_logger.getChild(__name__) # –°–æ–∑–¥–∞–µ–º –¥–æ—á–µ—Ä–Ω–∏–π –ª–æ–≥–≥–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è

class ArticleManagementService:
    """
    –°–µ—Ä–≤–∏—Å–Ω—ã–π —Å–ª–æ–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞–º–∏-—Å—Ç–∞—Ç—å—è–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ "–ë–∏–±–ª–∏–æ—Ç–µ–∫–µ –ó–Ω–∞–Ω–∏–π").
    –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞:
    1. –ü–æ–∏—Å–∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ Discord.
    2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞-—Å—Ç–∞—Ç—å–∏ –≤ Discord.
    3. –û—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ –Ω–∞ FastAPI –±—ç–∫–µ–Ω–¥.
    """
    def __init__(self, bot: discord.Client):
        self.bot = bot
        self.base_ops = BaseDiscordOperations(bot)
        self.backend_api = DiscordBindingsAPI()
        self.channels_config = CHANNELS_CONFIG

    async def add_article_channel(self, guild_id: int, channel_name: str) -> Dict[str, Any]:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª-—Å—Ç–∞—Ç—å—é –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ó–Ω–∞–Ω–∏–π" –≤ Discord
        –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –µ–≥–æ —Å –±—ç–∫–µ–Ω–¥–æ–º.
        """
        guild = await self.base_ops.get_guild_by_id(guild_id)
        if not guild:
            raise ValueError(f"Discord —Å–µ—Ä–≤–µ—Ä —Å ID {guild_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")

        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ó–Ω–∞–Ω–∏–π" –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–æ —Ç–∞–º –µ—Å—Ç—å
        knowledge_category_name = None
        for cat_name, cat_data in self.channels_config.get("hub_layout", {}).items():
            if "–ë–ò–ë–õ–ò–û–¢–ï–ö–ê –ó–ù–ê–ù–ò–ô" in cat_name: # –ë–æ–ª–µ–µ –≥–∏–±–∫–∏–π –ø–æ–∏—Å–∫ –ø–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–µ
                knowledge_category_name = cat_name
                break
        
        if not knowledge_category_name:
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∫–æ–Ω—Ñ–∏–≥–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ö–∞—Ä–¥–∫–æ–¥ (–∏–ª–∏ –≤—ã–¥–∞–µ–º –æ—à–∏–±–∫—É)
            knowledge_category_name = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: [ –ë–ò–ë–õ–ò–û–¢–ï–ö–ê –ó–ù–ê–ù–ò–ô ] üìö"
            logger.warning(f"–ò–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ó–Ω–∞–Ω–∏–π' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ channels_config.json. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö–∞—Ä–¥–∫–æ–¥: '{knowledge_category_name}'.")

        logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª '{channel_name}' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '{knowledge_category_name}' –¥–ª—è –≥–∏–ª—å–¥–∏–∏ {guild_id}.")

        # 1. –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ Discord
        parent_category = utils.get(guild.categories, name=knowledge_category_name)
        if not parent_category:
            raise ValueError(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{knowledge_category_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Discord. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª.")

        # 2. –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –≤ Discord —Å –ø–æ–º–æ—â—å—é base_ops
        new_channel_discord_obj: Optional[TextChannel] = None
        try:
            new_channel_discord_obj = await self.base_ops.create_discord_channel(
                guild,
                channel_name,
                "text", # –¢–∏–ø –∫–∞–Ω–∞–ª–∞ - —Ç–µ–∫—Å—Ç–æ–≤—ã–π
                parent_category=parent_category,
                permissions="read_only",
                description="–°—Ç–∞—Ç—å—è –∏–∑ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ó–Ω–∞–Ω–∏–π."
            )
            logger.info(f"–ö–∞–Ω–∞–ª '{channel_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ Discord (ID: {new_channel_discord_obj.id}).")
        except Exception as e: # base_ops —É–∂–µ –ª–æ–≥–∏—Ä—É–µ—Ç –∏ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
            raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –≤ Discord: {e}")

        if not new_channel_discord_obj:
            raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –≤ Discord, –æ–±—ä–µ–∫—Ç –Ω–µ –±—ã–ª –≤–æ–∑–≤—Ä–∞—â–µ–Ω.")

        # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ –Ω–∞ –±—ç–∫–µ–Ω–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
        entity_data_for_backend = {
            "guild_id": guild_id,
            "discord_id": new_channel_discord_obj.id,
            "entity_type": "text_channel",
            "name": channel_name,
            "parent_id": parent_category.id,
            "permissions": "read_only",
            "description": "–°—Ç–∞—Ç—å—è –∏–∑ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ó–Ω–∞–Ω–∏–π."
        }
        try:
            create_response = await self.backend_api.create_single_discord_entity(entity_data_for_backend)
            if not create_response.get('success'):
                error_msg = create_response.get('error', {}).get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.')
                raise RuntimeError(f"–ë—ç–∫–µ–Ω–¥ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {error_msg}")

            logger.info(f"–î–∞–Ω–Ω—ã–µ –æ –∫–∞–Ω–∞–ª–µ '{channel_name}' —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –±—ç–∫–µ–Ω–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")
            return {"status": "success", "message": create_response.get('message'), "details": create_response.get('data')}
        except (ConnectionError, ValueError, RuntimeError) as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å –±—ç–∫–µ–Ω–¥–æ–º: {e}", exc_info=True)
            await self.base_ops.delete_discord_entity(new_channel_discord_obj)
            logger.warning(f"–û—Ç–∫–∞—Ç: –∫–∞–Ω–∞–ª '{channel_name}' (ID: {new_channel_discord_obj.id}) —É–¥–∞–ª–µ–Ω –∏–∑ Discord –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –±—ç–∫–µ–Ω–¥–æ–º.")
            raise ValueError(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–Ω–∞–ª –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        except Exception as e:
            logger.error(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å –±—ç–∫–µ–Ω–¥–æ–º: {e}", exc_info=True)
            await self.base_ops.delete_discord_entity(new_channel_discord_obj)
            logger.warning(f"–û—Ç–∫–∞—Ç: –∫–∞–Ω–∞–ª '{channel_name}' (ID: {new_channel_discord_obj.id}) —É–¥–∞–ª–µ–Ω –∏–∑ Discord –∏–∑-–∑–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –±—ç–∫–µ–Ω–¥–æ–º.")
            raise