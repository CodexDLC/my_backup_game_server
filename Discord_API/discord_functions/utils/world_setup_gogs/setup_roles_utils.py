
# Discord_API\discord_functions\utils\world_setup_gogs\setup_roles_utils.py

import asyncio
import uuid
from typing import Dict, List

import discord
from Discord_API.api_route_function.spec_route.state_entities_discord_api import get_all_entities_discord
from Discord_API.api_route_function.system.system_gameworld_api import get_current_world
from Discord_API.api_route_function.system.system_mapping_api import get_all_entities
from Discord_API.config.logging.logging_setup import logger







async def collect_roles():
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ `state_entities`, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç JSON —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏."""

    logger.info("üõ† –ó–∞–ø—Ä–æ—Å `state_entities` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–µ–π...")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ get_all_entities.
    # –û–∂–∏–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç: {"roles": [...]}
    api_response_data = await get_all_entities()

    # üî• –ü—Ä–æ–≤–µ—Ä–∫–∏ API-–æ—Ç–≤–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç get_all_entities()
    # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å {"roles": [...]}
    if not isinstance(api_response_data, dict) or "roles" not in api_response_data:
        logger.warning(
            f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç `get_all_entities()`. "
            f"–û–∂–∏–¥–∞–ª–∏ dict —Å –∫–ª—é—á–æ–º 'roles', –ø–æ–ª—É—á–∏–ª–∏: {api_response_data}"
        )
        return {"roles": []}

    # –¢–µ–ø–µ—Ä—å –º—ã –∑–Ω–∞–µ–º, —á—Ç–æ api_response_data —ç—Ç–æ {"roles": [...]}, 
    # –∏ –º—ã –º–æ–∂–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ—á—å —Å–ø–∏—Å–æ–∫ —Å—É—â–Ω–æ—Å—Ç–µ–π
    all_states_list = api_response_data["roles"]

    if not isinstance(all_states_list, list):
        logger.error(f"‚ùå –û—à–∏–±–∫–∞! `all_states_list` –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–∏—Å–∫–æ–º, –Ω–æ –ø–æ–ª—É—á–µ–Ω {type(all_states_list)}. –í–æ–∑–≤—Ä–∞—â–∞–µ–º `roles: []`.")
        return {"roles": []}
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
    active_states = [state for state in all_states_list if state.get("is_active", False)]

    # üìå –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Discord-—Ä–æ–ª–µ–π
    roles_data = {
        "roles": [
            {
                "guild_id": None,   # –ü–æ–∫–∞ None, –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å—Å—è –ø–æ–∑–∂–µ
                "access_code": state.get("access_code"),
                "role_name": state.get("code_name"),
                "role_id": None,    # –ü–æ–∫–∞ None, –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å—Å—è –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏ –≤ Discord
                "permissions": 0,   # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 0, –≤–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å
                "ui_type": state.get("ui_type"),
                "description": state.get("description"),
                "is_active": state.get("is_active", False)
            }
            for state in active_states
        ]
    }

    logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω `roles_data`: {roles_data}")

    return roles_data





async def collect_roles_discord(guild_id: int):
    """–í—ã–∑—ã–≤–∞–µ—Ç API —á–µ—Ä–µ–∑ `get_all_entities_discord()`, –ø–æ–ª—É—á–∞–µ—Ç —Ä–æ–ª–∏ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫."""

    if guild_id is None:
        logger.error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π `guild_id`, –æ—Ç–º–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞")
        return []

    logger.info(f"üõ† –ó–∞–ø—Ä–æ—Å —Ä–æ–ª–µ–π Discord –¥–ª—è `guild_id={guild_id}`...")
    roles_discord = await get_all_entities_discord(guild_id)

    # --- –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –ü–†–û–í–ï–†–ö–ò –ò –§–û–†–ú–ò–†–û–í–ê–ù–ò–Ø ---
    # üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç API
    # –ï—Å–ª–∏ roles_discord –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ø–∏—Å–∫–æ–º, —ç—Ç–æ –æ—à–∏–±–∫–∞
    if not isinstance(roles_discord, list):
        logger.error(f"‚ùå –û–∂–∏–¥–∞–ª—Å—è —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –∏–∑ API, –Ω–æ –ø–æ–ª—É—á–µ–Ω –¥—Ä—É–≥–æ–π —Ç–∏–ø: {type(roles_discord).__name__}. API-–æ—Ç–≤–µ—Ç: {roles_discord}")
        return []
    
    # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞, –∞ –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç —Ä–æ–ª–µ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    if not roles_discord:
        logger.warning(f"‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ä–æ–ª—è—Ö –≤ Discord! API-–æ—Ç–≤–µ—Ç: {roles_discord}")
        return [] 
    # --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –õ–û–ì–ò–ö–ò –ü–†–û–í–ï–†–ö–ò ---

    logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏ –∏–∑ Discord API: {roles_discord}")

    # üìå –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π
    roles_list = [
        {
            "guild_id": role["guild_id"],
            "world_id": role["world_id"],
            "access_code": role["access_code"],
            "role_name": role["role_name"],
            "role_id": role["role_id"],
            "permissions": role["permissions"]
        }
        for role in roles_discord # ‚ú® –ò–ó–ú–ï–ù–ï–ù–û: –ò—Ç–µ—Ä–∏—Ä—É–µ–º –Ω–∞–ø—Ä—è–º—É—é –ø–æ roles_discord
    ]

    logger.info(f"‚úÖ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω `roles_list`: {roles_list}")

    return roles_list



async def find_missing_roles(guild_id: int):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–∏–µ —Ä–æ–ª–∏ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å, –ª–∏–±–æ —Å–æ–∑–¥–∞—ë—Ç –≤—Å–µ —Ä–æ–ª–∏, –µ—Å–ª–∏ –≥–∏–ª—å–¥–∏–∏ –Ω–µ—Ç."""

    if guild_id is None:
        print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π `guild_id`, –æ—Ç–º–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞")
        return []

    print(f"üõ† –ó–∞–ø—Ä–æ—Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–æ–ª–µ–π –≤ –≥–∏–ª—å–¥–∏–∏ `{guild_id}`...")
    roles_list = await collect_roles_discord(guild_id)  # üî• –¢–µ–ø–µ—Ä—å —ç—Ç–æ `roles_list` –∏–∑ `collect_roles_discord()`

    print(f"üîç –ü–æ–ª—É—á–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–æ–ª–∏: {roles_list}")

    print("üõ† –ó–∞–ø—Ä–æ—Å –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–æ–ª–µ–π...")
    roles_data = await collect_roles()
    print(f"üîç –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–æ–ª–µ–π: {roles_data.get('roles', [])}")

    # üî• –ï—Å–ª–∏ `roles_list` –ø—É—Å—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º –í–°–ï —Ä–æ–ª–∏
    if not roles_list:
        print(f"‚ö†Ô∏è –ì–∏–ª—å–¥–∏—è `{guild_id}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –°–æ–∑–¥–∞—ë–º –í–°–ï —Ä–æ–ª–∏.")
        missing_roles = roles_data.get("roles", [])  # ‚úÖ –ó–∞–ø–æ–ª–Ω—è–µ–º –í–°–ï —Ä–æ–ª–∏
    else:
        # üìå –ï—Å–ª–∏ –≥–∏–ª—å–¥–∏—è –Ω–∞–π–¥–µ–Ω–∞ ‚Äî —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å–ø–∏—Å–∫–∏ –∏ —Å–æ–∑–¥–∞—ë–º —Ç–æ–ª—å–∫–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–æ–ª–∏
        existing_roles = {role["access_code"]: role.get("access_code") for role in roles_list}
        missing_roles = [
            role for role in roles_data.get("roles", [])
            if role["access_code"] not in existing_roles
        ]

    print(f"üîç –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω —Å–ø–∏—Å–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–æ–ª–µ–π: {missing_roles}")

    return missing_roles







async def build_roles_batch(roles_bindings: List[Dict]) -> List[Dict]:
    """–°–æ–±–∏—Ä–∞–µ—Ç –ø–∞–∫–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –≤—Å—Ç–∞–≤–∫–∏ —Ä–æ–ª–µ–π, –≤–∫–ª—é—á–∞—è `guild_id`, `world_id` –∏ `access_code`."""

    current_world = await get_current_world()
    world_id = current_world.get("world_id") if current_world else str(uuid.uuid4())  # ‚úÖ –ï—Å–ª–∏ `world_id` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π

    return [
        {
            "guild_id": role["guild_id"],
            "world_id": world_id,  # ‚úÖ –¢–µ–ø–µ—Ä—å `world_id` –ø–æ–ª—É—á–∞–µ–º –∏–∑ API –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º
            "access_code": role.get("access_code", "UNKNOWN"),
            "role_name": role.get("role_name"),
            "role_id": role.get("role_id"),
            "permissions": role.get("permissions", 0)
        }
        for role in roles_bindings if role.get("access_code")
    ]


async def fetch_actual_guild_roles(guild: discord.Guild) -> List[discord.Role]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞ Discord.
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ API.
    """
    try:
        current_discord_roles = await guild.fetch_roles()
        logger.info(f"üîÑ –ü–æ–ª—É—á–µ–Ω –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑ {len(current_discord_roles)} —Ä–æ–ª–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞ '{guild.name}' ({guild.id}).")
        return current_discord_roles
    except discord.HTTPException as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ API –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–æ–ª–µ–π —Å Discord (—Å—Ç–∞—Ç—É—Å: {e.status}, —Ç–µ–∫—Å—Ç: {e.text}).", exc_info=True)
        return [] # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–æ–ª–µ–π —Å Discord: {e}", exc_info=True)
        return []
    

async def send_and_delete_temp_message(channel: discord.TextChannel, content: str, delay_seconds: int = 120):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è."""
    if not channel:
        logger.warning("‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ None-–∫–∞–Ω–∞–ª.")
        return

    try:
        message = await channel.send(content)
        asyncio.create_task(message.delete(delay=delay_seconds))
        logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ '{content[:30]}...' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ '{channel.name}' –∏ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ {delay_seconds}—Å.")
    except discord.HTTPException as e:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª '{channel.name}': {e.status} - {e.text}", exc_info=True)
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}", exc_info=True)




async def save_roles_bindings_to_db(guild_id: int, bindings: List[Dict]):
    """
    –ó–∞–≥–ª—É—à–∫–∞: –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–∏–≤—è–∑–∫–∏ —Ä–æ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∞—à–∞ —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –ë–î.
    """
    if not bindings:
        logger.info(f"üíæ –ù–µ—Ç –ø—Ä–∏–≤—è–∑–æ–∫ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –¥–ª—è –≥–∏–ª—å–¥–∏–∏ {guild_id}.")
        return

    logger.info(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º {len(bindings)} –ø—Ä–∏–≤—è–∑–æ–∫ —Ä–æ–ª–µ–π –≤ –ë–î –¥–ª—è –≥–∏–ª—å–¥–∏–∏ {guild_id}...")
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∞—à–∞ —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –ë–î,
    # –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—Å—Ç–∞–≤–∫–∞ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ role_bindings
    # –ü—Ä–∏–º–µ—Ä (–ø—Å–µ–≤–¥–æ–∫–æ–¥):
    # for binding in bindings:
    #     await db_session.merge(RoleBindingModel(**binding))
    # await db_session.commit()
    logger.info(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–æ–∫ —Ä–æ–ª–µ–π –≤ –ë–î –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")